# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import numpy as np



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _movelladot_pc_sdk_py39_64
else:
    import _movelladot_pc_sdk_py39_64

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

class SwigPyIterator(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_SwigPyIterator

    def incr(self, n: "size_t"=1) -> "swig::SwigPyIterator *":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator_incr(self, n)

    def decr(self, n: "size_t"=1) -> "swig::SwigPyIterator *":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator_decr(self, n)

    def distance(self, x: "SwigPyIterator") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator_distance(self, x)

    def equal(self, x: "SwigPyIterator") -> "bool":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator_equal(self, x)

    def copy(self) -> "swig::SwigPyIterator *":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator_copy(self)

    def next(self) -> "PyObject *":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator_next(self)

    def __next__(self) -> "PyObject *":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator___next__(self)

    def previous(self) -> "PyObject *":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator_previous(self)

    def advance(self, n: "ptrdiff_t") -> "swig::SwigPyIterator *":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator_advance(self, n)

    def __eq__(self, x: "SwigPyIterator") -> "bool":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator___eq__(self, x)

    def __ne__(self, x: "SwigPyIterator") -> "bool":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator___ne__(self, x)

    def __iadd__(self, n: "ptrdiff_t") -> "swig::SwigPyIterator &":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator___iadd__(self, n)

    def __isub__(self, n: "ptrdiff_t") -> "swig::SwigPyIterator &":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator___isub__(self, n)

    def __add__(self, n: "ptrdiff_t") -> "swig::SwigPyIterator *":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator___add__(self, n)

    def __sub__(self, *args) -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64.SwigPyIterator___sub__(self, *args)
    def __iter__(self):
        return self

# Register SwigPyIterator in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.SwigPyIterator_swigregister(SwigPyIterator)

THREAD_PRIORITY_IDLE = _movelladot_pc_sdk_py39_64.THREAD_PRIORITY_IDLE
THREAD_PRIORITY_LOWEST = _movelladot_pc_sdk_py39_64.THREAD_PRIORITY_LOWEST
THREAD_PRIORITY_BELOW_NORMAL = _movelladot_pc_sdk_py39_64.THREAD_PRIORITY_BELOW_NORMAL
THREAD_PRIORITY_NORMAL = _movelladot_pc_sdk_py39_64.THREAD_PRIORITY_NORMAL
THREAD_PRIORITY_ABOVE_NORMAL = _movelladot_pc_sdk_py39_64.THREAD_PRIORITY_ABOVE_NORMAL
THREAD_PRIORITY_HIGHEST = _movelladot_pc_sdk_py39_64.THREAD_PRIORITY_HIGHEST
THREAD_PRIORITY_TIME_CRITICAL = _movelladot_pc_sdk_py39_64.THREAD_PRIORITY_TIME_CRITICAL
import collections
__LOC__ = _movelladot_pc_sdk_py39_64.__LOC__
_CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES = _movelladot_pc_sdk_py39_64._CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES
XSENS_PFSHARED = _movelladot_pc_sdk_py39_64.XSENS_PFSHARED
XSENS_PFPRE = _movelladot_pc_sdk_py39_64.XSENS_PFPRE
XSENS_PFBITS = _movelladot_pc_sdk_py39_64.XSENS_PFBITS
QT_NO_DEBUG = _movelladot_pc_sdk_py39_64.QT_NO_DEBUG
XSENS_PFCONF = _movelladot_pc_sdk_py39_64.XSENS_PFCONF
XSENS_PFFULL = _movelladot_pc_sdk_py39_64.XSENS_PFFULL
XSREAL_ALLOWS_MEMCPY = _movelladot_pc_sdk_py39_64.XSREAL_ALLOWS_MEMCPY
XSDF_None = _movelladot_pc_sdk_py39_64.XSDF_None
XSDF_Managed = _movelladot_pc_sdk_py39_64.XSDF_Managed
XSDF_FixedSize = _movelladot_pc_sdk_py39_64.XSDF_FixedSize
XSDF_Empty = _movelladot_pc_sdk_py39_64.XSDF_Empty
XSDF_BadAlloc = _movelladot_pc_sdk_py39_64.XSDF_BadAlloc

def xorBool(a: "bool", b: "bool") -> "bool":
    return _movelladot_pc_sdk_py39_64.xorBool(a, b)

def toXsString(s: "XsDataFlags") -> "char const *":
    return _movelladot_pc_sdk_py39_64.toXsString(s)
class XsArray(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_data = property(_movelladot_pc_sdk_py39_64.XsArray_m_data_get)
    m_size = property(_movelladot_pc_sdk_py39_64.XsArray_m_size_get)
    m_reserved = property(_movelladot_pc_sdk_py39_64.XsArray_m_reserved_get)
    m_flags = property(_movelladot_pc_sdk_py39_64.XsArray_m_flags_get)
    m_descriptor = property(_movelladot_pc_sdk_py39_64.XsArray_m_descriptor_get)

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsArray(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsArray

    def __assign__(self, src: "XsArray") -> "XsArray const &":
        return _movelladot_pc_sdk_py39_64.XsArray___assign__(self, src)

# Register XsArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsArray_swigregister(XsArray)

class _XsStringImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsStringImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsStringImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsStringImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_clear(self)

    def __eq__(self, other: "_XsStringImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___eq__(self, other)

    def __ne__(self, other: "_XsStringImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_descriptor(self)

    def first(self) -> "char":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_first(self)

    def last(self) -> "char":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_last(self)

    def insert(self, item: "char const &", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_insert(self, item, index)

    def push_back(self, item: "char const &") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_pop_back(self, count)

    def push_front(self, item: "char const &") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "char const *") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_setSize(self, count)

    def append(self, other: "_XsStringImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_append(self, other)

    def __assign__(self, other: "_XsStringImpl") -> "XsArrayImpl< char,g_xsStringDescriptor,XsString >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_swap(self, *args)

    def find(self, needle: "char const &") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_find(self, needle)

    def contains(self, needle: "char const &") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "char":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsStringImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "char") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "char") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsStringImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___len__(self)

    def __getitem__(self, *args) -> "XsString *":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___getitem__(self, *args)

    def __add__(self, other: "XsString") -> "XsString *":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___add__(self, other)

    def __iadd__(self, other: "XsString") -> "XsString *":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___iadd__(self, other)

    def __radd__(self, other: "XsString") -> "XsString *":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsString *":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsString *":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsString *":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___rmul__(self, count)

    def __contains__(self, val: "char") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___contains__(self, val)

    def __reversed__(self) -> "XsString *":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsString *":
        return _movelladot_pc_sdk_py39_64._XsStringImpl___delitem__(self, index)

# Register _XsStringImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsStringImpl_swigregister(_XsStringImpl)

class XsString(_XsStringImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsString_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsString(*args))

    def c_str(self, *args) -> "char const *":
        return _movelladot_pc_sdk_py39_64.XsString_c_str(self, *args)

    def __str__(self) -> "std::string":
        return _movelladot_pc_sdk_py39_64.XsString___str__(self)

    def __add__(self, other: "XsString") -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsString___add__(self, other)

    def toStdWString(self) -> "std::wstring":
        return _movelladot_pc_sdk_py39_64.XsString_toStdWString(self)

    def __eq__(self, *args) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsString___eq__(self, *args)

    def __ne__(self, *args) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsString___ne__(self, *args)

    def __lt__(self, str: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsString___lt__(self, str)

    def __gt__(self, str: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsString___gt__(self, str)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsString_empty(self)

    def utf8Len(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsString_utf8Len(self)

    def endsWith(self, other: "XsString", caseSensitive: "bool"=False) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsString_endsWith(self, other, caseSensitive)

    def startsWith(self, other: "XsString", caseSensitive: "bool"=False) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsString_startsWith(self, other, caseSensitive)

    def contains(self, other: "XsString", caseSensitive: "bool"=False, offset: "XsSize *"=None) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsString_contains(self, other, caseSensitive, offset)

    def utf8At(self, index: "XsSize") -> "wchar_t":
        return _movelladot_pc_sdk_py39_64.XsString_utf8At(self, index)

    def push_back(self, *args) -> "XsString &":
        return _movelladot_pc_sdk_py39_64.XsString_push_back(self, *args)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsString_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsString_reverse(self)

    def findSubStr(self, needle: "XsString") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64.XsString_findSubStr(self, needle)

    def mid(self, start: "XsSize", count: "XsSize") -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsString_mid(self, start, count)

    def replaceAll(self, src: "XsString", dst: "XsString") -> "void":
        return _movelladot_pc_sdk_py39_64.XsString_replaceAll(self, src, dst)

    def replacedAll(self, src: "XsString", dst: "XsString") -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsString_replacedAll(self, src, dst)

    def trim(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsString_trim(self)

    def trimmed(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsString_trimmed(self)

    def last(self) -> "char":
        return _movelladot_pc_sdk_py39_64.XsString_last(self)

    def toLower(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsString_toLower(self)

    def toUpper(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsString_toUpper(self)

    def lowered(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsString_lowered(self)

    def uppered(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsString_uppered(self)

    def append(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsString_append(self, *args)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsString

# Register XsString in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsString_swigregister(XsString)
cvar = _movelladot_pc_sdk_py39_64.cvar
g_xsStringDescriptor = cvar.g_xsStringDescriptor

XHI_LeftHand = _movelladot_pc_sdk_py39_64.XHI_LeftHand
XHI_RightHand = _movelladot_pc_sdk_py39_64.XHI_RightHand
XHI_Unknown = _movelladot_pc_sdk_py39_64.XHI_Unknown
XS_IND_PREAMBLE = _movelladot_pc_sdk_py39_64.XS_IND_PREAMBLE
XS_IND_BID = _movelladot_pc_sdk_py39_64.XS_IND_BID
XS_IND_MID = _movelladot_pc_sdk_py39_64.XS_IND_MID
XS_IND_LEN = _movelladot_pc_sdk_py39_64.XS_IND_LEN
XS_IND_DATA0 = _movelladot_pc_sdk_py39_64.XS_IND_DATA0
XS_IND_LENEXTH = _movelladot_pc_sdk_py39_64.XS_IND_LENEXTH
XS_IND_LENEXTL = _movelladot_pc_sdk_py39_64.XS_IND_LENEXTL
XS_IND_DATAEXT0 = _movelladot_pc_sdk_py39_64.XS_IND_DATAEXT0
XS_SELFTEST_OK = _movelladot_pc_sdk_py39_64.XS_SELFTEST_OK
XS_LEN_TRANSPORTMODE = _movelladot_pc_sdk_py39_64.XS_LEN_TRANSPORTMODE
XS_LEN_DEVICEID = _movelladot_pc_sdk_py39_64.XS_LEN_DEVICEID
XS_LEN_INITBUSRESULTS = _movelladot_pc_sdk_py39_64.XS_LEN_INITBUSRESULTS
XS_LEN_PERIOD = _movelladot_pc_sdk_py39_64.XS_LEN_PERIOD
XS_LEN_BUSPWR = _movelladot_pc_sdk_py39_64.XS_LEN_BUSPWR
XS_LEN_DATALENGTH = _movelladot_pc_sdk_py39_64.XS_LEN_DATALENGTH
XS_LEN_CONFIGURATION = _movelladot_pc_sdk_py39_64.XS_LEN_CONFIGURATION
XS_LEN_FIRMWAREREV = _movelladot_pc_sdk_py39_64.XS_LEN_FIRMWAREREV
XS_LEN_BTDISABLE = _movelladot_pc_sdk_py39_64.XS_LEN_BTDISABLE
XS_LEN_OPMODE = _movelladot_pc_sdk_py39_64.XS_LEN_OPMODE
XS_LEN_BAUDRATE = _movelladot_pc_sdk_py39_64.XS_LEN_BAUDRATE
XS_LEN_SYNCMODE = _movelladot_pc_sdk_py39_64.XS_LEN_SYNCMODE
XS_LEN_PRODUCTCODE = _movelladot_pc_sdk_py39_64.XS_LEN_PRODUCTCODE
XS_LEN_PROCESSINGFLAGS = _movelladot_pc_sdk_py39_64.XS_LEN_PROCESSINGFLAGS
XS_LEN_XMPWROFF = _movelladot_pc_sdk_py39_64.XS_LEN_XMPWROFF
XS_LEN_OUTPUTMODE = _movelladot_pc_sdk_py39_64.XS_LEN_OUTPUTMODE
XS_LEN_OUTPUTSETTINGS = _movelladot_pc_sdk_py39_64.XS_LEN_OUTPUTSETTINGS
XS_LEN_OUTPUTSKIPFACTOR = _movelladot_pc_sdk_py39_64.XS_LEN_OUTPUTSKIPFACTOR
XS_LEN_SYNCINMODE = _movelladot_pc_sdk_py39_64.XS_LEN_SYNCINMODE
XS_LEN_SYNCINSKIPFACTOR = _movelladot_pc_sdk_py39_64.XS_LEN_SYNCINSKIPFACTOR
XS_LEN_SYNCINOFFSET = _movelladot_pc_sdk_py39_64.XS_LEN_SYNCINOFFSET
XS_LEN_SYNCOUTMODE = _movelladot_pc_sdk_py39_64.XS_LEN_SYNCOUTMODE
XS_LEN_SYNCOUTSKIPFACTOR = _movelladot_pc_sdk_py39_64.XS_LEN_SYNCOUTSKIPFACTOR
XS_LEN_SYNCOUTOFFSET = _movelladot_pc_sdk_py39_64.XS_LEN_SYNCOUTOFFSET
XS_LEN_SYNCOUTPULSEWIDTH = _movelladot_pc_sdk_py39_64.XS_LEN_SYNCOUTPULSEWIDTH
XS_LEN_ERRORMODE = _movelladot_pc_sdk_py39_64.XS_LEN_ERRORMODE
XS_LEN_TRANSMITDELAY = _movelladot_pc_sdk_py39_64.XS_LEN_TRANSMITDELAY
XS_LEN_OBJECTALIGNMENT = _movelladot_pc_sdk_py39_64.XS_LEN_OBJECTALIGNMENT
XS_LEN_ALIGNMENTROTATION = _movelladot_pc_sdk_py39_64.XS_LEN_ALIGNMENTROTATION
XS_LEN_XMERRORMODE = _movelladot_pc_sdk_py39_64.XS_LEN_XMERRORMODE
XS_LEN_BUFFERSIZE = _movelladot_pc_sdk_py39_64.XS_LEN_BUFFERSIZE
XS_LEN_HEADING = _movelladot_pc_sdk_py39_64.XS_LEN_HEADING
XS_LEN_MAGNETICFIELD = _movelladot_pc_sdk_py39_64.XS_LEN_MAGNETICFIELD
XS_LEN_LOCATIONID = _movelladot_pc_sdk_py39_64.XS_LEN_LOCATIONID
XS_LEN_EXTOUTPUTMODE = _movelladot_pc_sdk_py39_64.XS_LEN_EXTOUTPUTMODE
XS_LEN_INITTRACKMODE = _movelladot_pc_sdk_py39_64.XS_LEN_INITTRACKMODE
XS_LEN_STOREFILTERSTATE = _movelladot_pc_sdk_py39_64.XS_LEN_STOREFILTERSTATE
XS_LEN_UTCTIME = _movelladot_pc_sdk_py39_64.XS_LEN_UTCTIME
XS_LEN_FILTERPROFILELABEL = _movelladot_pc_sdk_py39_64.XS_LEN_FILTERPROFILELABEL
XS_LEN_FILTERPROFILEFULL = _movelladot_pc_sdk_py39_64.XS_LEN_FILTERPROFILEFULL
XS_LEN_REQFILTERPROFILEACK = _movelladot_pc_sdk_py39_64.XS_LEN_REQFILTERPROFILEACK
XS_LEN_SETFILTERPROFILE = _movelladot_pc_sdk_py39_64.XS_LEN_SETFILTERPROFILE
XS_LEN_GRAVITYMAGNITUDE = _movelladot_pc_sdk_py39_64.XS_LEN_GRAVITYMAGNITUDE
XS_LEN_GPSLEVERARM = _movelladot_pc_sdk_py39_64.XS_LEN_GPSLEVERARM
XS_LEN_LATLONALT = _movelladot_pc_sdk_py39_64.XS_LEN_LATLONALT
XS_LEN_SETNOROTATION = _movelladot_pc_sdk_py39_64.XS_LEN_SETNOROTATION
XS_LEN_FILTERSETTINGS = _movelladot_pc_sdk_py39_64.XS_LEN_FILTERSETTINGS
XS_LEN_AMD = _movelladot_pc_sdk_py39_64.XS_LEN_AMD
XS_LEN_RESETORIENTATION = _movelladot_pc_sdk_py39_64.XS_LEN_RESETORIENTATION
XS_LEN_GPSSTATUS = _movelladot_pc_sdk_py39_64.XS_LEN_GPSSTATUS
XS_LEN_CLIENTUSAGE = _movelladot_pc_sdk_py39_64.XS_LEN_CLIENTUSAGE
XS_LEN_CLIENTPRIORITY = _movelladot_pc_sdk_py39_64.XS_LEN_CLIENTPRIORITY
XS_LEN_WIRELESSCONFIG = _movelladot_pc_sdk_py39_64.XS_LEN_WIRELESSCONFIG
XS_LEN_INFOREQUEST = _movelladot_pc_sdk_py39_64.XS_LEN_INFOREQUEST
XS_LEN_SETOUTPUTTRIGGER = _movelladot_pc_sdk_py39_64.XS_LEN_SETOUTPUTTRIGGER
XS_LEN_SETINPUTTRIGGER = _movelladot_pc_sdk_py39_64.XS_LEN_SETINPUTTRIGGER
XS_LEN_RAWDATA = _movelladot_pc_sdk_py39_64.XS_LEN_RAWDATA
XS_LEN_CALIBDATA = _movelladot_pc_sdk_py39_64.XS_LEN_CALIBDATA
XS_LEN_CALIB_ACCDATA = _movelladot_pc_sdk_py39_64.XS_LEN_CALIB_ACCDATA
XS_LEN_CALIB_GYRDATA = _movelladot_pc_sdk_py39_64.XS_LEN_CALIB_GYRDATA
XS_LEN_CALIB_MAGDATA = _movelladot_pc_sdk_py39_64.XS_LEN_CALIB_MAGDATA
XS_LEN_ORIENT_QUATDATA = _movelladot_pc_sdk_py39_64.XS_LEN_ORIENT_QUATDATA
XS_LEN_ORIENT_EULERDATA = _movelladot_pc_sdk_py39_64.XS_LEN_ORIENT_EULERDATA
XS_LEN_ORIENT_MATRIXSTA = _movelladot_pc_sdk_py39_64.XS_LEN_ORIENT_MATRIXSTA
XS_LEN_SAMPLECNT = _movelladot_pc_sdk_py39_64.XS_LEN_SAMPLECNT
XS_LEN_TEMPDATA = _movelladot_pc_sdk_py39_64.XS_LEN_TEMPDATA
XS_LEN_CALIBDATA_FLT = _movelladot_pc_sdk_py39_64.XS_LEN_CALIBDATA_FLT
XS_LEN_TEMPDATA_FLT = _movelladot_pc_sdk_py39_64.XS_LEN_TEMPDATA_FLT
XS_LEN_ORIENT_QUATDATA_FLT = _movelladot_pc_sdk_py39_64.XS_LEN_ORIENT_QUATDATA_FLT
XS_LEN_ORIENT_EULERDATA_FLT = _movelladot_pc_sdk_py39_64.XS_LEN_ORIENT_EULERDATA_FLT
XS_LEN_ORIENT_MATRIXSTA_FLT = _movelladot_pc_sdk_py39_64.XS_LEN_ORIENT_MATRIXSTA_FLT
XS_INVALIDSETTINGVALUE = _movelladot_pc_sdk_py39_64.XS_INVALIDSETTINGVALUE
XS_CONF_MASTERDID = _movelladot_pc_sdk_py39_64.XS_CONF_MASTERDID
XS_CONF_PERIOD = _movelladot_pc_sdk_py39_64.XS_CONF_PERIOD
XS_CONF_OUTPUTSKIPFACTOR = _movelladot_pc_sdk_py39_64.XS_CONF_OUTPUTSKIPFACTOR
XS_CONF_SYNCIN_MODE = _movelladot_pc_sdk_py39_64.XS_CONF_SYNCIN_MODE
XS_CONF_SYNCIN_SKIPFACTOR = _movelladot_pc_sdk_py39_64.XS_CONF_SYNCIN_SKIPFACTOR
XS_CONF_SYNCIN_OFFSET = _movelladot_pc_sdk_py39_64.XS_CONF_SYNCIN_OFFSET
XS_CONF_DATE = _movelladot_pc_sdk_py39_64.XS_CONF_DATE
XS_CONF_TIME = _movelladot_pc_sdk_py39_64.XS_CONF_TIME
XS_CONF_NUMDEVICES = _movelladot_pc_sdk_py39_64.XS_CONF_NUMDEVICES
XS_CONF_DID = _movelladot_pc_sdk_py39_64.XS_CONF_DID
XS_CONF_DATALENGTH = _movelladot_pc_sdk_py39_64.XS_CONF_DATALENGTH
XS_CONF_OUTPUTMODE = _movelladot_pc_sdk_py39_64.XS_CONF_OUTPUTMODE
XS_CONF_OUTPUTSETTINGS = _movelladot_pc_sdk_py39_64.XS_CONF_OUTPUTSETTINGS
XS_CONF_BLOCKLEN = _movelladot_pc_sdk_py39_64.XS_CONF_BLOCKLEN
XS_CONF_MASTERDIDLEN = _movelladot_pc_sdk_py39_64.XS_CONF_MASTERDIDLEN
XS_CONF_PERIODLEN = _movelladot_pc_sdk_py39_64.XS_CONF_PERIODLEN
XS_CONF_OUTPUTSKIPFACTORLEN = _movelladot_pc_sdk_py39_64.XS_CONF_OUTPUTSKIPFACTORLEN
XS_CONF_SYNCIN_MODELEN = _movelladot_pc_sdk_py39_64.XS_CONF_SYNCIN_MODELEN
XS_CONF_SYNCIN_SKIPFACTORLEN = _movelladot_pc_sdk_py39_64.XS_CONF_SYNCIN_SKIPFACTORLEN
XS_CONF_SYNCIN_OFFSETLEN = _movelladot_pc_sdk_py39_64.XS_CONF_SYNCIN_OFFSETLEN
XS_CONF_DATELEN = _movelladot_pc_sdk_py39_64.XS_CONF_DATELEN
XS_CONF_TIMELEN = _movelladot_pc_sdk_py39_64.XS_CONF_TIMELEN
XS_CONF_RESERVED_CLIENTLEN = _movelladot_pc_sdk_py39_64.XS_CONF_RESERVED_CLIENTLEN
XS_CONF_RESERVED_HOSTLEN = _movelladot_pc_sdk_py39_64.XS_CONF_RESERVED_HOSTLEN
XS_CONF_NUMDEVICESLEN = _movelladot_pc_sdk_py39_64.XS_CONF_NUMDEVICESLEN
XS_CONF_DIDLEN = _movelladot_pc_sdk_py39_64.XS_CONF_DIDLEN
XS_CONF_DATALENGTHLEN = _movelladot_pc_sdk_py39_64.XS_CONF_DATALENGTHLEN
XS_CONF_OUTPUTMODELEN = _movelladot_pc_sdk_py39_64.XS_CONF_OUTPUTMODELEN
XS_CONF_OUTPUTSETTINGSLEN = _movelladot_pc_sdk_py39_64.XS_CONF_OUTPUTSETTINGSLEN
XS_SYNC_CLOCKFREQMHZ = _movelladot_pc_sdk_py39_64.XS_SYNC_CLOCKFREQMHZ
XS_SYNC_CLOCK_NS_TO_TICKS = _movelladot_pc_sdk_py39_64.XS_SYNC_CLOCK_NS_TO_TICKS
XS_SYNC_CLOCK_TICKS_TO_NS = _movelladot_pc_sdk_py39_64.XS_SYNC_CLOCK_TICKS_TO_NS
XS_SYNC_CLOCK_US_TO_TICKS = _movelladot_pc_sdk_py39_64.XS_SYNC_CLOCK_US_TO_TICKS
XS_SYNC_CLOCK_TICKS_TO_US = _movelladot_pc_sdk_py39_64.XS_SYNC_CLOCK_TICKS_TO_US
XS_PARAM_SYNCIN_MODE = _movelladot_pc_sdk_py39_64.XS_PARAM_SYNCIN_MODE
XS_PARAM_SYNCIN_SKIPFACTOR = _movelladot_pc_sdk_py39_64.XS_PARAM_SYNCIN_SKIPFACTOR
XS_PARAM_SYNCIN_OFFSET = _movelladot_pc_sdk_py39_64.XS_PARAM_SYNCIN_OFFSET
XS_SYNCIN_DISABLED = _movelladot_pc_sdk_py39_64.XS_SYNCIN_DISABLED
XS_SYNCIN_EDGE_RISING = _movelladot_pc_sdk_py39_64.XS_SYNCIN_EDGE_RISING
XS_SYNCIN_EDGE_FALLING = _movelladot_pc_sdk_py39_64.XS_SYNCIN_EDGE_FALLING
XS_SYNCIN_EDGE_BOTH = _movelladot_pc_sdk_py39_64.XS_SYNCIN_EDGE_BOTH
XS_SYNCIN_EDGE_MASK = _movelladot_pc_sdk_py39_64.XS_SYNCIN_EDGE_MASK
XS_SYNCIN_TYPE_DOSAMPLING = _movelladot_pc_sdk_py39_64.XS_SYNCIN_TYPE_DOSAMPLING
XS_SYNCIN_TYPE_SENDLASTDATA = _movelladot_pc_sdk_py39_64.XS_SYNCIN_TYPE_SENDLASTDATA
XS_SYNCIN_TYPE_CLOCK = _movelladot_pc_sdk_py39_64.XS_SYNCIN_TYPE_CLOCK
XS_SYNCIN_TYPE_MASK = _movelladot_pc_sdk_py39_64.XS_SYNCIN_TYPE_MASK
XS_PARAM_SYNCOUT_MODE = _movelladot_pc_sdk_py39_64.XS_PARAM_SYNCOUT_MODE
XS_PARAM_SYNCOUT_SKIPFACTOR = _movelladot_pc_sdk_py39_64.XS_PARAM_SYNCOUT_SKIPFACTOR
XS_PARAM_SYNCOUT_OFFSET = _movelladot_pc_sdk_py39_64.XS_PARAM_SYNCOUT_OFFSET
XS_PARAM_SYNCOUT_PULSEWIDTH = _movelladot_pc_sdk_py39_64.XS_PARAM_SYNCOUT_PULSEWIDTH
XS_SYNCOUT_DISABLED = _movelladot_pc_sdk_py39_64.XS_SYNCOUT_DISABLED
XS_SYNCOUT_TYPE_TOGGLE = _movelladot_pc_sdk_py39_64.XS_SYNCOUT_TYPE_TOGGLE
XS_SYNCOUT_TYPE_PULSE = _movelladot_pc_sdk_py39_64.XS_SYNCOUT_TYPE_PULSE
XS_SYNCOUT_POL_NEG = _movelladot_pc_sdk_py39_64.XS_SYNCOUT_POL_NEG
XS_SYNCOUT_POL_POS = _movelladot_pc_sdk_py39_64.XS_SYNCOUT_POL_POS
XS_SYNCOUT_TYPE_MASK = _movelladot_pc_sdk_py39_64.XS_SYNCOUT_TYPE_MASK
XS_SYNCOUT_POL_MASK = _movelladot_pc_sdk_py39_64.XS_SYNCOUT_POL_MASK
XS_INITTRACKMODE_DISABLED = _movelladot_pc_sdk_py39_64.XS_INITTRACKMODE_DISABLED
XS_INITTRACKMODE_ENABLED = _movelladot_pc_sdk_py39_64.XS_INITTRACKMODE_ENABLED
XS_PARAM_FILTER_GAIN = _movelladot_pc_sdk_py39_64.XS_PARAM_FILTER_GAIN
XS_PARAM_FILTER_RHO = _movelladot_pc_sdk_py39_64.XS_PARAM_FILTER_RHO
XS_DONOTSTORE = _movelladot_pc_sdk_py39_64.XS_DONOTSTORE
XS_STORE = _movelladot_pc_sdk_py39_64.XS_STORE
XS_AMDSETTING_DISABLED = _movelladot_pc_sdk_py39_64.XS_AMDSETTING_DISABLED
XS_AMDSETTING_ENABLED = _movelladot_pc_sdk_py39_64.XS_AMDSETTING_ENABLED
XS_PARAM_ROTSENSOR = _movelladot_pc_sdk_py39_64.XS_PARAM_ROTSENSOR
XS_PARAM_ROTLOCAL = _movelladot_pc_sdk_py39_64.XS_PARAM_ROTLOCAL
XS_SENDRAWSTRING_INIT = _movelladot_pc_sdk_py39_64.XS_SENDRAWSTRING_INIT
XS_SENDRAWSTRING_DEFAULT = _movelladot_pc_sdk_py39_64.XS_SENDRAWSTRING_DEFAULT
XS_SENDRAWSTRING_SEND = _movelladot_pc_sdk_py39_64.XS_SENDRAWSTRING_SEND
XS_TO_DEFAULT = _movelladot_pc_sdk_py39_64.XS_TO_DEFAULT
XS_TO_INIT = _movelladot_pc_sdk_py39_64.XS_TO_INIT
XS_TO_RETRY = _movelladot_pc_sdk_py39_64.XS_TO_RETRY
XS_PERIOD_10HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_10HZ
XS_PERIOD_12HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_12HZ
XS_PERIOD_15HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_15HZ
XS_PERIOD_16HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_16HZ
XS_PERIOD_18HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_18HZ
XS_PERIOD_20HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_20HZ
XS_PERIOD_24HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_24HZ
XS_PERIOD_25HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_25HZ
XS_PERIOD_30HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_30HZ
XS_PERIOD_32HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_32HZ
XS_PERIOD_36HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_36HZ
XS_PERIOD_40HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_40HZ
XS_PERIOD_45HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_45HZ
XS_PERIOD_48HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_48HZ
XS_PERIOD_50HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_50HZ
XS_PERIOD_60HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_60HZ
XS_PERIOD_64HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_64HZ
XS_PERIOD_72HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_72HZ
XS_PERIOD_75HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_75HZ
XS_PERIOD_80HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_80HZ
XS_PERIOD_90HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_90HZ
XS_PERIOD_96HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_96HZ
XS_PERIOD_100HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_100HZ
XS_PERIOD_120HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_120HZ
XS_PERIOD_128HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_128HZ
XS_PERIOD_144HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_144HZ
XS_PERIOD_150HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_150HZ
XS_PERIOD_160HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_160HZ
XS_PERIOD_180HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_180HZ
XS_PERIOD_192HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_192HZ
XS_PERIOD_200HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_200HZ
XS_PERIOD_225HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_225HZ
XS_PERIOD_240HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_240HZ
XS_PERIOD_256HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_256HZ
XS_PERIOD_288HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_288HZ
XS_PERIOD_300HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_300HZ
XS_PERIOD_320HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_320HZ
XS_PERIOD_360HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_360HZ
XS_PERIOD_384HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_384HZ
XS_PERIOD_400HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_400HZ
XS_PERIOD_450HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_450HZ
XS_PERIOD_480HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_480HZ
XS_PERIOD_512HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_512HZ
XS_PERIOD_576HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_576HZ
XS_PERIOD_600HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_600HZ
XS_PERIOD_640HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_640HZ
XS_PERIOD_720HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_720HZ
XS_PERIOD_768HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_768HZ
XS_PERIOD_800HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_800HZ
XS_PERIOD_900HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_900HZ
XS_PERIOD_960HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_960HZ
XS_PERIOD_1152HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_1152HZ
XS_PERIOD_1200HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_1200HZ
XS_PERIOD_1280HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_1280HZ
XS_PERIOD_1440HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_1440HZ
XS_PERIOD_1536HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_1536HZ
XS_PERIOD_1600HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_1600HZ
XS_PERIOD_1800HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_1800HZ
XS_PERIOD_1920HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_1920HZ
XS_PERIOD_2304HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_2304HZ
XS_PERIOD_2400HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_2400HZ
XS_PERIOD_2560HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_2560HZ
XS_PERIOD_2880HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_2880HZ
XS_PERIOD_3200HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_3200HZ
XS_PERIOD_3600HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_3600HZ
XS_PERIOD_3840HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_3840HZ
XS_PERIOD_4608HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_4608HZ
XS_PERIOD_4800HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_4800HZ
XS_PERIOD_5760HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_5760HZ
XS_PERIOD_6400HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_6400HZ
XS_PERIOD_7200HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_7200HZ
XS_PERIOD_7680HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_7680HZ
XS_PERIOD_9600HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_9600HZ
XS_PERIOD_11520HZ = _movelladot_pc_sdk_py39_64.XS_PERIOD_11520HZ
XSDEVICEID_PRODUCT_CODE_LEN = _movelladot_pc_sdk_py39_64.XSDEVICEID_PRODUCT_CODE_LEN
XSDEVICEID_PRODUCT_CODE_INIT = _movelladot_pc_sdk_py39_64.XSDEVICEID_PRODUCT_CODE_INIT
class XsDeviceId(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsDeviceId_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsDeviceId(*args))

    def __assign__(self, other: "XsDeviceId") -> "XsDeviceId const &":
        return _movelladot_pc_sdk_py39_64.XsDeviceId___assign__(self, other)

    @staticmethod
    def legacyBit() -> "uint64_t":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_legacyBit()

    def isLegacyDeviceId(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isLegacyDeviceId(self)

    def toInt(self) -> "uint64_t":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_toInt(self)

    def productCode(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_productCode(self)

    def productVariant(self) -> "uint32_t":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_productVariant(self)

    def hardwareVersion(self) -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_hardwareVersion(self)

    def subDevice(self) -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_subDevice(self)

    def legacyDeviceId(self) -> "uint32_t":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_legacyDeviceId(self)

    def isMtiX(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtiX(self)

    def isMtiX0(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtiX0(self)

    def isMtiX00(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtiX00(self)

    def isMtigX00(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtigX00(self)

    def isMtigX10(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtigX10(self)

    def isMti3X0(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMti3X0(self)

    def isMti6X0(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMti6X0(self)

    def isMti8X0(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMti8X0(self)

    def isGlove(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isGlove(self)

    def side(self) -> "XsHandId":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_side(self)

    def isDot(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isDot(self)

    def isRugged(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isRugged(self)

    def isMtw(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtw(self)

    def isMtw2(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtw2(self)

    def isMtw2Obskur(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtw2Obskur(self)

    def isMtx(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtx(self)

    def isMtx2(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtx2(self)

    def isBodyPack(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isBodyPack(self)

    def isBodyPackV1(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isBodyPackV1(self)

    def isBodyPackV2(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isBodyPackV2(self)

    def isWirelessMaster(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isWirelessMaster(self)

    def isAwindaX(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isAwindaX(self)

    def isAwindaXStation(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isAwindaXStation(self)

    def isAwindaXDongle(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isAwindaXDongle(self)

    def isAwindaXOem(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isAwindaXOem(self)

    def isAwinda2(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isAwinda2(self)

    def isAwinda2Station(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isAwinda2Station(self)

    def isAwinda2Dongle(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isAwinda2Dongle(self)

    def isAwinda2Oem(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isAwinda2Oem(self)

    def isSyncStationX(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isSyncStationX(self)

    def isSyncStation2(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isSyncStation2(self)

    def isHilDevice(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isHilDevice(self)

    def isImu(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isImu(self)

    def isVru(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isVru(self)

    def isAhrs(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isAhrs(self)

    def isGnss(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isGnss(self)

    def isRtk(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isRtk(self)

    def hasInternalGnss(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_hasInternalGnss(self)

    def isContainerDevice(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isContainerDevice(self)

    def isMt(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMt(self)

    def isMti(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMti(self)

    def isMtig(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtig(self)

    def isMtMark4(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtMark4(self)

    def isMtMark5(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isMtMark5(self)

    def toXsString(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_toXsString(self)

    def fromString(self, str: "XsString") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_fromString(self, str)

    def toDeviceTypeString(self, makeType: "bool"=True) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_toDeviceTypeString(self, makeType)

    def fromDeviceTypeString(self, str: "XsString") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_fromDeviceTypeString(self, str)

    def isValid(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isValid(self)

    def contains(self, other: "XsDeviceId") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_contains(self, other)

    def isType(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_isType(self)

    def typeName(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_typeName(self)

    def type(self) -> "XsDeviceId":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_type(self)

    def deviceType(self, detailed: "bool"=True) -> "XsDeviceId":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_deviceType(self, detailed)

    def deviceTypeMask(self, detailed: "bool"=True) -> "XsDeviceId":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_deviceTypeMask(self, detailed)

    def basePart(self) -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsDeviceId_basePart(self)

    def __eq__(self, other: "XsDeviceId") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId___eq__(self, other)

    def __ne__(self, other: "XsDeviceId") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId___ne__(self, other)

    def __lt__(self, other: "XsDeviceId") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId___lt__(self, other)

    def __le__(self, other: "XsDeviceId") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId___le__(self, other)

    def __gt__(self, other: "XsDeviceId") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId___gt__(self, other)

    def __ge__(self, other: "XsDeviceId") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceId___ge__(self, other)

    def __index__(self) -> "int64_t":
        return _movelladot_pc_sdk_py39_64.XsDeviceId___index__(self)

    def __int__(self) -> "int64_t":
        return _movelladot_pc_sdk_py39_64.XsDeviceId___int__(self)

    def __str__(self) -> "std::string":
        return _movelladot_pc_sdk_py39_64.XsDeviceId___str__(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsDeviceId

# Register XsDeviceId in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsDeviceId_swigregister(XsDeviceId)

def XsDeviceId_legacyBit() -> "uint64_t":
    return _movelladot_pc_sdk_py39_64.XsDeviceId_legacyBit()


def makeNiceProductCode(*args) -> "std::string":
    return _movelladot_pc_sdk_py39_64.makeNiceProductCode(*args)
class _XsIntArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsIntArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsIntArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsIntArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_clear(self)

    def __eq__(self, other: "_XsIntArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___eq__(self, other)

    def __ne__(self, other: "_XsIntArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_descriptor(self)

    def first(self) -> "int":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_first(self)

    def last(self) -> "int":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_last(self)

    def insert(self, item: "int const &", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_insert(self, item, index)

    def push_back(self, item: "int const &") -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_pop_back(self, count)

    def push_front(self, item: "int const &") -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "int const *") -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_setSize(self, count)

    def append(self, other: "_XsIntArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_append(self, other)

    def __assign__(self, other: "_XsIntArrayImpl") -> "XsArrayImpl< int,g_xsIntArrayDescriptor,XsIntArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_swap(self, *args)

    def find(self, needle: "int const &") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_find(self, needle)

    def contains(self, needle: "int const &") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "int":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "int") -> "void":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "int") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsIntArray *":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsIntArray") -> "XsIntArray *":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsIntArray") -> "XsIntArray *":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsIntArray") -> "XsIntArray *":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsIntArray *":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsIntArray *":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsIntArray *":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___rmul__(self, count)

    def __contains__(self, val: "int") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsIntArray *":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsIntArray *":
        return _movelladot_pc_sdk_py39_64._XsIntArrayImpl___delitem__(self, index)

# Register _XsIntArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsIntArrayImpl_swigregister(_XsIntArrayImpl)

class _XsByteArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsByteArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsByteArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsByteArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_clear(self)

    def __eq__(self, other: "_XsByteArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___eq__(self, other)

    def __ne__(self, other: "_XsByteArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_descriptor(self)

    def first(self) -> "unsigned char":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_first(self)

    def last(self) -> "unsigned char":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_last(self)

    def insert(self, item: "unsigned char const &", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_insert(self, item, index)

    def push_back(self, item: "unsigned char const &") -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_pop_back(self, count)

    def push_front(self, item: "unsigned char const &") -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "unsigned char const *") -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_setSize(self, count)

    def append(self, other: "_XsByteArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_append(self, other)

    def __assign__(self, other: "_XsByteArrayImpl") -> "XsArrayImpl< unsigned char,g_xsByteArrayDescriptor,XsByteArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_swap(self, *args)

    def find(self, needle: "unsigned char const &") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_find(self, needle)

    def contains(self, needle: "unsigned char const &") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "unsigned char":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "unsigned char") -> "void":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "unsigned char") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsByteArray *":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsByteArray") -> "XsByteArray *":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsByteArray") -> "XsByteArray *":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsByteArray") -> "XsByteArray *":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsByteArray *":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsByteArray *":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsByteArray *":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___rmul__(self, count)

    def __contains__(self, val: "unsigned char") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsByteArray *":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsByteArray *":
        return _movelladot_pc_sdk_py39_64._XsByteArrayImpl___delitem__(self, index)

# Register _XsByteArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsByteArrayImpl_swigregister(_XsByteArrayImpl)

class _XsInt64ArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsInt64ArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsInt64ArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_clear(self)

    def __eq__(self, other: "_XsInt64ArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___eq__(self, other)

    def __ne__(self, other: "_XsInt64ArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_descriptor(self)

    def first(self) -> "long long":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_first(self)

    def last(self) -> "long long":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_last(self)

    def insert(self, item: "long long const &", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_insert(self, item, index)

    def push_back(self, item: "long long const &") -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_pop_back(self, count)

    def push_front(self, item: "long long const &") -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "long long const *") -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_setSize(self, count)

    def append(self, other: "_XsInt64ArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_append(self, other)

    def __assign__(self, other: "_XsInt64ArrayImpl") -> "XsArrayImpl< long long,g_xsInt64ArrayDescriptor,XsInt64Array >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_swap(self, *args)

    def find(self, needle: "long long const &") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_find(self, needle)

    def contains(self, needle: "long long const &") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "long long":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "long long") -> "void":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "long long") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsInt64Array *":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsInt64Array") -> "XsInt64Array *":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsInt64Array") -> "XsInt64Array *":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsInt64Array") -> "XsInt64Array *":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsInt64Array *":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsInt64Array *":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsInt64Array *":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___rmul__(self, count)

    def __contains__(self, val: "long long") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsInt64Array *":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsInt64Array *":
        return _movelladot_pc_sdk_py39_64._XsInt64ArrayImpl___delitem__(self, index)

# Register _XsInt64ArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsInt64ArrayImpl_swigregister(_XsInt64ArrayImpl)

class _XsDeviceIdArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsDeviceIdArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsDeviceIdArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_clear(self)

    def __eq__(self, other: "_XsDeviceIdArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___eq__(self, other)

    def __ne__(self, other: "_XsDeviceIdArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_descriptor(self)

    def first(self) -> "XsDeviceId":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_first(self)

    def last(self) -> "XsDeviceId":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_last(self)

    def insert(self, item: "XsDeviceId", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsDeviceId") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsDeviceId") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsDeviceId") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_setSize(self, count)

    def append(self, other: "_XsDeviceIdArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_append(self, other)

    def __assign__(self, other: "_XsDeviceIdArrayImpl") -> "XsArrayImpl< XsDeviceId,g_xsDeviceIdArrayDescriptor,XsDeviceIdArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_swap(self, *args)

    def find(self, needle: "XsDeviceId") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_find(self, needle)

    def contains(self, needle: "XsDeviceId") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsDeviceId":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsDeviceId") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsDeviceId") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsDeviceIdArray *":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsDeviceIdArray") -> "XsDeviceIdArray *":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsDeviceIdArray") -> "XsDeviceIdArray *":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsDeviceIdArray") -> "XsDeviceIdArray *":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsDeviceIdArray *":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsDeviceIdArray *":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsDeviceIdArray *":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsDeviceId") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsDeviceIdArray *":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsDeviceIdArray *":
        return _movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl___delitem__(self, index)

# Register _XsDeviceIdArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsDeviceIdArrayImpl_swigregister(_XsDeviceIdArrayImpl)

class _XsStringArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsStringArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsStringArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsStringArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_clear(self)

    def __eq__(self, other: "_XsStringArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___eq__(self, other)

    def __ne__(self, other: "_XsStringArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_descriptor(self)

    def first(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_first(self)

    def last(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_last(self)

    def insert(self, item: "XsString", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsString") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsString") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsString") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_setSize(self, count)

    def append(self, other: "_XsStringArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_append(self, other)

    def __assign__(self, other: "_XsStringArrayImpl") -> "XsArrayImpl< XsString,g_xsStringArrayDescriptor,XsStringArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_swap(self, *args)

    def find(self, needle: "XsString") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_find(self, needle)

    def contains(self, needle: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsString":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsString") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsString") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsStringArray *":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsStringArray") -> "XsStringArray *":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsStringArray") -> "XsStringArray *":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsStringArray") -> "XsStringArray *":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsStringArray *":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsStringArray *":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsStringArray *":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsStringArray *":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsStringArray *":
        return _movelladot_pc_sdk_py39_64._XsStringArrayImpl___delitem__(self, index)

# Register _XsStringArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsStringArrayImpl_swigregister(_XsStringArrayImpl)

class _XsOutputConfigurationArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsOutputConfigurationArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsOutputConfigurationArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_clear(self)

    def __eq__(self, other: "_XsOutputConfigurationArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___eq__(self, other)

    def __ne__(self, other: "_XsOutputConfigurationArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_descriptor(self)

    def first(self) -> "XsOutputConfiguration":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_first(self)

    def last(self) -> "XsOutputConfiguration":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_last(self)

    def insert(self, item: "XsOutputConfiguration", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsOutputConfiguration") -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsOutputConfiguration") -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsOutputConfiguration") -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_setSize(self, count)

    def append(self, other: "_XsOutputConfigurationArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_append(self, other)

    def __assign__(self, other: "_XsOutputConfigurationArrayImpl") -> "XsArrayImpl< XsOutputConfiguration,g_xsOutputConfigurationArrayDescriptor,XsOutputConfigurationArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_swap(self, *args)

    def find(self, needle: "XsOutputConfiguration") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_find(self, needle)

    def contains(self, needle: "XsOutputConfiguration") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsOutputConfiguration":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsOutputConfiguration") -> "void":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsOutputConfiguration") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsOutputConfigurationArray") -> "XsOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsOutputConfigurationArray") -> "XsOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsOutputConfigurationArray") -> "XsOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsOutputConfiguration") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl___delitem__(self, index)

# Register _XsOutputConfigurationArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsOutputConfigurationArrayImpl_swigregister(_XsOutputConfigurationArrayImpl)

class _XsCanOutputConfigurationArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsCanOutputConfigurationArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsCanOutputConfigurationArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_clear(self)

    def __eq__(self, other: "_XsCanOutputConfigurationArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___eq__(self, other)

    def __ne__(self, other: "_XsCanOutputConfigurationArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_descriptor(self)

    def first(self) -> "XsCanOutputConfiguration":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_first(self)

    def last(self) -> "XsCanOutputConfiguration":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_last(self)

    def insert(self, item: "XsCanOutputConfiguration", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsCanOutputConfiguration") -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsCanOutputConfiguration") -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsCanOutputConfiguration") -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_setSize(self, count)

    def append(self, other: "_XsCanOutputConfigurationArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_append(self, other)

    def __assign__(self, other: "_XsCanOutputConfigurationArrayImpl") -> "XsArrayImpl< XsCanOutputConfiguration,g_xsCanOutputConfigurationArrayDescriptor,XsCanOutputConfigurationArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_swap(self, *args)

    def find(self, needle: "XsCanOutputConfiguration") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_find(self, needle)

    def contains(self, needle: "XsCanOutputConfiguration") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsCanOutputConfiguration":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsCanOutputConfiguration") -> "void":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsCanOutputConfiguration") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsCanOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsCanOutputConfigurationArray") -> "XsCanOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsCanOutputConfigurationArray") -> "XsCanOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsCanOutputConfigurationArray") -> "XsCanOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsCanOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsCanOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsCanOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsCanOutputConfiguration") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsCanOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsCanOutputConfigurationArray *":
        return _movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl___delitem__(self, index)

# Register _XsCanOutputConfigurationArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsCanOutputConfigurationArrayImpl_swigregister(_XsCanOutputConfigurationArrayImpl)

class _XsPortInfoArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsPortInfoArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsPortInfoArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_clear(self)

    def __eq__(self, other: "_XsPortInfoArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___eq__(self, other)

    def __ne__(self, other: "_XsPortInfoArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_descriptor(self)

    def first(self) -> "XsPortInfo":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_first(self)

    def last(self) -> "XsPortInfo":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_last(self)

    def insert(self, item: "XsPortInfo", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsPortInfo") -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsPortInfo") -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsPortInfo") -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_setSize(self, count)

    def append(self, other: "_XsPortInfoArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_append(self, other)

    def __assign__(self, other: "_XsPortInfoArrayImpl") -> "XsArrayImpl< XsPortInfo,g_xsPortInfoArrayDescriptor,XsPortInfoArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_swap(self, *args)

    def find(self, needle: "XsPortInfo") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_find(self, needle)

    def contains(self, needle: "XsPortInfo") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsPortInfo":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsPortInfo") -> "void":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsPortInfo") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsPortInfoArray *":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsPortInfoArray") -> "XsPortInfoArray *":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsPortInfoArray") -> "XsPortInfoArray *":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsPortInfoArray") -> "XsPortInfoArray *":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsPortInfoArray *":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsPortInfoArray *":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsPortInfoArray *":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsPortInfo") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsPortInfoArray *":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsPortInfoArray *":
        return _movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl___delitem__(self, index)

# Register _XsPortInfoArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsPortInfoArrayImpl_swigregister(_XsPortInfoArrayImpl)

class _XsSyncSettingArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsSyncSettingArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsSyncSettingArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_clear(self)

    def __eq__(self, other: "_XsSyncSettingArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___eq__(self, other)

    def __ne__(self, other: "_XsSyncSettingArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_descriptor(self)

    def first(self) -> "XsSyncSetting":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_first(self)

    def last(self) -> "XsSyncSetting":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_last(self)

    def insert(self, item: "XsSyncSetting", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsSyncSetting") -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsSyncSetting") -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsSyncSetting") -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_setSize(self, count)

    def append(self, other: "_XsSyncSettingArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_append(self, other)

    def __assign__(self, other: "_XsSyncSettingArrayImpl") -> "XsArrayImpl< XsSyncSetting,g_xsSyncSettingArrayDescriptor,XsSyncSettingArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_swap(self, *args)

    def find(self, needle: "XsSyncSetting") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_find(self, needle)

    def contains(self, needle: "XsSyncSetting") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsSyncSetting":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsSyncSetting") -> "void":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsSyncSetting") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsSyncSettingArray *":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsSyncSettingArray") -> "XsSyncSettingArray *":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsSyncSettingArray") -> "XsSyncSettingArray *":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsSyncSettingArray") -> "XsSyncSettingArray *":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsSyncSettingArray *":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsSyncSettingArray *":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsSyncSettingArray *":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsSyncSetting") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsSyncSettingArray *":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsSyncSettingArray *":
        return _movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl___delitem__(self, index)

# Register _XsSyncSettingArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsSyncSettingArrayImpl_swigregister(_XsSyncSettingArrayImpl)

class _XsMessageArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsMessageArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsMessageArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_clear(self)

    def __eq__(self, other: "_XsMessageArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___eq__(self, other)

    def __ne__(self, other: "_XsMessageArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_descriptor(self)

    def first(self) -> "XsMessage":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_first(self)

    def last(self) -> "XsMessage":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_last(self)

    def insert(self, item: "XsMessage", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsMessage") -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsMessage") -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsMessage") -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_setSize(self, count)

    def append(self, other: "_XsMessageArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_append(self, other)

    def __assign__(self, other: "_XsMessageArrayImpl") -> "XsArrayImpl< XsMessage,g_xsMessageArrayDescriptor,XsMessageArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_swap(self, *args)

    def find(self, needle: "XsMessage") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_find(self, needle)

    def contains(self, needle: "XsMessage") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsMessage":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsMessage") -> "void":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsMessage") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsMessageArray *":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsMessageArray") -> "XsMessageArray *":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsMessageArray") -> "XsMessageArray *":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsMessageArray") -> "XsMessageArray *":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsMessageArray *":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsMessageArray *":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsMessageArray *":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsMessage") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsMessageArray *":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsMessageArray *":
        return _movelladot_pc_sdk_py39_64._XsMessageArrayImpl___delitem__(self, index)

# Register _XsMessageArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsMessageArrayImpl_swigregister(_XsMessageArrayImpl)

class _XsQuaternionArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsQuaternionArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsQuaternionArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_clear(self)

    def __eq__(self, other: "_XsQuaternionArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___eq__(self, other)

    def __ne__(self, other: "_XsQuaternionArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_descriptor(self)

    def first(self) -> "XsQuaternion":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_first(self)

    def last(self) -> "XsQuaternion":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_last(self)

    def insert(self, item: "XsQuaternion", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsQuaternion") -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsQuaternion") -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsQuaternion") -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_setSize(self, count)

    def append(self, other: "_XsQuaternionArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_append(self, other)

    def __assign__(self, other: "_XsQuaternionArrayImpl") -> "XsArrayImpl< XsQuaternion,g_xsQuaternionArrayDescriptor,XsQuaternionArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_swap(self, *args)

    def find(self, needle: "XsQuaternion") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_find(self, needle)

    def contains(self, needle: "XsQuaternion") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsQuaternion":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsQuaternion") -> "void":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsQuaternion") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsQuaternionArray *":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsQuaternionArray") -> "XsQuaternionArray *":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsQuaternionArray") -> "XsQuaternionArray *":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsQuaternionArray") -> "XsQuaternionArray *":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsQuaternionArray *":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsQuaternionArray *":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsQuaternionArray *":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsQuaternion") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsQuaternionArray *":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsQuaternionArray *":
        return _movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl___delitem__(self, index)

# Register _XsQuaternionArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsQuaternionArrayImpl_swigregister(_XsQuaternionArrayImpl)

class _XsDataPacketPtrArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsDataPacketPtrArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsDataPacketPtrArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_clear(self)

    def __eq__(self, other: "XsDataPacketPtrArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___eq__(self, other)

    def __ne__(self, other: "XsDataPacketPtrArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_descriptor(self)

    def first(self) -> "XsDataPacketPtr":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_first(self)

    def last(self) -> "XsDataPacketPtr":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_last(self)

    def insert(self, item: "XsDataPacket", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsDataPacket") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsDataPacket") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsDataPacketPtr const *") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_setSize(self, count)

    def append(self, other: "XsDataPacketPtrArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_append(self, other)

    def __assign__(self, other: "XsDataPacketPtrArrayImpl") -> "XsArrayImpl< XsDataPacketPtr,g_xsDataPacketPtrArrayDescriptor,XsDataPacketPtrArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_swap(self, *args)

    def find(self, needle: "XsDataPacket") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_find(self, needle)

    def contains(self, needle: "XsDataPacket") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsDataPacketPtr":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsDataPacket") -> "void":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsDataPacket") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsDataPacketPtrArray") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsDataPacketPtrArray") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsDataPacketPtrArray") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsDataPacket") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl___delitem__(self, index)

# Register _XsDataPacketPtrArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsDataPacketPtrArrayImpl_swigregister(_XsDataPacketPtrArrayImpl)

class _XsFilterProfileArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsFilterProfileArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsFilterProfileArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_clear(self)

    def __eq__(self, other: "_XsFilterProfileArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___eq__(self, other)

    def __ne__(self, other: "_XsFilterProfileArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_descriptor(self)

    def first(self) -> "XsFilterProfile":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_first(self)

    def last(self) -> "XsFilterProfile":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_last(self)

    def insert(self, item: "XsFilterProfile", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsFilterProfile") -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsFilterProfile") -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsFilterProfile") -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_setSize(self, count)

    def append(self, other: "_XsFilterProfileArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_append(self, other)

    def __assign__(self, other: "_XsFilterProfileArrayImpl") -> "XsArrayImpl< XsFilterProfile,g_xsFilterProfileArrayDescriptor,XsFilterProfileArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_swap(self, *args)

    def find(self, needle: "XsFilterProfile") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_find(self, needle)

    def contains(self, needle: "XsFilterProfile") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsFilterProfile":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsFilterProfile") -> "void":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsFilterProfile") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsFilterProfileArray *":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsFilterProfileArray") -> "XsFilterProfileArray *":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsFilterProfileArray") -> "XsFilterProfileArray *":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsFilterProfileArray") -> "XsFilterProfileArray *":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsFilterProfileArray *":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsFilterProfileArray *":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsFilterProfileArray *":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsFilterProfile") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsFilterProfileArray *":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsFilterProfileArray *":
        return _movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl___delitem__(self, index)

# Register _XsFilterProfileArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsFilterProfileArrayImpl_swigregister(_XsFilterProfileArrayImpl)

class _XsStringOutputTypeArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new__XsStringOutputTypeArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete__XsStringOutputTypeArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_clear(self)

    def __eq__(self, other: "XsArrayImpl< XsStringOutputType,g_xsStringOutputTypeArrayDescriptor,XsStringOutputTypeArray >::ArrayImpl const &") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___eq__(self, other)

    def __ne__(self, other: "XsArrayImpl< XsStringOutputType,g_xsStringOutputTypeArrayDescriptor,XsStringOutputTypeArray >::ArrayImpl const &") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_descriptor(self)

    def first(self) -> "XsStringOutputType":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_first(self)

    def last(self) -> "XsStringOutputType":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_last(self)

    def insert(self, item: "XsStringOutputType const &", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsStringOutputType const &") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsStringOutputType const &") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsStringOutputType const *") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_setSize(self, count)

    def append(self, other: "XsArrayImpl< XsStringOutputType,g_xsStringOutputTypeArrayDescriptor,XsStringOutputTypeArray >::ArrayImpl const &") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_append(self, other)

    def __assign__(self, other: "XsArrayImpl< XsStringOutputType,g_xsStringOutputTypeArrayDescriptor,XsStringOutputTypeArray >::ArrayImpl const &") -> "XsArrayImpl< XsStringOutputType,g_xsStringOutputTypeArrayDescriptor,XsStringOutputTypeArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_swap(self, *args)

    def find(self, needle: "XsStringOutputType const &") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_find(self, needle)

    def contains(self, needle: "XsStringOutputType const &") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsStringOutputType":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsStringOutputType") -> "void":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsStringOutputType") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsStringOutputTypeArray *":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsStringOutputTypeArray") -> "XsStringOutputTypeArray *":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsStringOutputTypeArray") -> "XsStringOutputTypeArray *":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsStringOutputTypeArray") -> "XsStringOutputTypeArray *":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsStringOutputTypeArray *":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsStringOutputTypeArray *":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsStringOutputTypeArray *":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsStringOutputType") -> "bool":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsStringOutputTypeArray *":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsStringOutputTypeArray *":
        return _movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl___delitem__(self, index)

# Register _XsStringOutputTypeArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64._XsStringOutputTypeArrayImpl_swigregister(_XsStringOutputTypeArrayImpl)

class XsAnalogInData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_data = property(_movelladot_pc_sdk_py39_64.XsAnalogInData_m_data_get, _movelladot_pc_sdk_py39_64.XsAnalogInData_m_data_set)

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsAnalogInData_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsAnalogInData(*args))

    def __eq__(self, other: "XsAnalogInData") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsAnalogInData___eq__(self, other)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsAnalogInData

# Register XsAnalogInData in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsAnalogInData_swigregister(XsAnalogInData)

XBC_4k8 = _movelladot_pc_sdk_py39_64.XBC_4k8
XBC_9k6 = _movelladot_pc_sdk_py39_64.XBC_9k6
XBC_14k4 = _movelladot_pc_sdk_py39_64.XBC_14k4
XBC_19k2 = _movelladot_pc_sdk_py39_64.XBC_19k2
XBC_28k8 = _movelladot_pc_sdk_py39_64.XBC_28k8
XBC_38k4 = _movelladot_pc_sdk_py39_64.XBC_38k4
XBC_57k6 = _movelladot_pc_sdk_py39_64.XBC_57k6
XBC_76k8 = _movelladot_pc_sdk_py39_64.XBC_76k8
XBC_115k2 = _movelladot_pc_sdk_py39_64.XBC_115k2
XBC_230k4 = _movelladot_pc_sdk_py39_64.XBC_230k4
XBC_460k8 = _movelladot_pc_sdk_py39_64.XBC_460k8
XBC_921k6 = _movelladot_pc_sdk_py39_64.XBC_921k6
XBC_921k6Legacy = _movelladot_pc_sdk_py39_64.XBC_921k6Legacy
XBC_2MegaBaud = _movelladot_pc_sdk_py39_64.XBC_2MegaBaud
XBC_3_5MegaBaud = _movelladot_pc_sdk_py39_64.XBC_3_5MegaBaud
XBC_4MegaBaud = _movelladot_pc_sdk_py39_64.XBC_4MegaBaud
XBC_Invalid = _movelladot_pc_sdk_py39_64.XBC_Invalid
XBR_Invalid = _movelladot_pc_sdk_py39_64.XBR_Invalid
XBR_4800 = _movelladot_pc_sdk_py39_64.XBR_4800
XBR_9600 = _movelladot_pc_sdk_py39_64.XBR_9600
XBR_14k4 = _movelladot_pc_sdk_py39_64.XBR_14k4
XBR_19k2 = _movelladot_pc_sdk_py39_64.XBR_19k2
XBR_28k8 = _movelladot_pc_sdk_py39_64.XBR_28k8
XBR_38k4 = _movelladot_pc_sdk_py39_64.XBR_38k4
XBR_57k6 = _movelladot_pc_sdk_py39_64.XBR_57k6
XBR_76k8 = _movelladot_pc_sdk_py39_64.XBR_76k8
XBR_115k2 = _movelladot_pc_sdk_py39_64.XBR_115k2
XBR_230k4 = _movelladot_pc_sdk_py39_64.XBR_230k4
XBR_460k8 = _movelladot_pc_sdk_py39_64.XBR_460k8
XBR_921k6 = _movelladot_pc_sdk_py39_64.XBR_921k6
XBR_2000k = _movelladot_pc_sdk_py39_64.XBR_2000k
XBR_3500k = _movelladot_pc_sdk_py39_64.XBR_3500k
XBR_4000k = _movelladot_pc_sdk_py39_64.XBR_4000k

def codeToRate(baudcode: "XsBaudCode") -> "XsBaudRate":
    return _movelladot_pc_sdk_py39_64.codeToRate(baudcode)

def rateToCode(baudrate: "XsBaudRate") -> "XsBaudCode":
    return _movelladot_pc_sdk_py39_64.rateToCode(baudrate)

def rateToNumeric(baudrate: "XsBaudRate") -> "int":
    return _movelladot_pc_sdk_py39_64.rateToNumeric(baudrate)

def numericToRate(numeric: "int") -> "XsBaudRate":
    return _movelladot_pc_sdk_py39_64.numericToRate(numeric)
XS_BID_MASTER = _movelladot_pc_sdk_py39_64.XS_BID_MASTER
XS_BID_BROADCAST = _movelladot_pc_sdk_py39_64.XS_BID_BROADCAST
XS_BID_MT = _movelladot_pc_sdk_py39_64.XS_BID_MT
XS_BID_INVALID = _movelladot_pc_sdk_py39_64.XS_BID_INVALID
XS_BID_DYNAMIC = _movelladot_pc_sdk_py39_64.XS_BID_DYNAMIC
class XsByteArray(_XsByteArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsByteArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsByteArray(*args))

    def __assign__(self, other: "XsByteArray") -> "XsByteArray &":
        return _movelladot_pc_sdk_py39_64.XsByteArray___assign__(self, other)

    def data(self, *args) -> "uint8_t const *":
        return _movelladot_pc_sdk_py39_64.XsByteArray_data(self, *args)

    def toXsString(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsByteArray_toXsString(self)

    def mid(self, start: "XsSize", count: "XsSize") -> "XsByteArray":
        return _movelladot_pc_sdk_py39_64.XsByteArray_mid(self, start, count)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsByteArray

# Register XsByteArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsByteArray_swigregister(XsByteArray)
g_xsByteArrayDescriptor = cvar.g_xsByteArrayDescriptor

WANTXSMATH2 = _movelladot_pc_sdk_py39_64.WANTXSMATH2

def asinClamped(x: "XsReal") -> "XsReal":
    return _movelladot_pc_sdk_py39_64.asinClamped(x)

def rad2deg(radians: "XsReal") -> "XsReal":
    return _movelladot_pc_sdk_py39_64.rad2deg(radians)

def deg2rad(degrees: "XsReal") -> "XsReal":
    return _movelladot_pc_sdk_py39_64.deg2rad(degrees)

def pow2(a: "XsReal") -> "XsReal":
    return _movelladot_pc_sdk_py39_64.pow2(a)

def pow3(a: "XsReal") -> "XsReal":
    return _movelladot_pc_sdk_py39_64.pow3(a)

def doubleToLong(d: "double") -> "int32_t":
    return _movelladot_pc_sdk_py39_64.doubleToLong(d)

def doubleToInt64(d: "double") -> "int64_t":
    return _movelladot_pc_sdk_py39_64.doubleToInt64(d)
class XsVector(collections.abc.Sequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __assign__(self, other: "XsVector") -> "XsVector &":
        return _movelladot_pc_sdk_py39_64.XsVector___assign__(self, other)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsVector

    def assign(self, sz: "XsSize", src: "XsReal const *") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector_assign(self, sz, src)

    def setSize(self, sz: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector_setSize(self, sz)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsVector_size(self)

    def data(self) -> "XsReal const *":
        return _movelladot_pc_sdk_py39_64.XsVector_data(self)

    def __mul__(self, scalar: "XsReal") -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsVector___mul__(self, scalar)

    def __imul__(self, scalar: "XsReal") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector___imul__(self, scalar)

    def dotProduct(self, v: "XsVector") -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsVector_dotProduct(self, v)

    def cartesianLength(self) -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsVector_cartesianLength(self)

    def normalize(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector_normalize(self)

    def setZero(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector_setZero(self)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsVector_empty(self)

    def angularVelocityFromQuaternion(self, quat: "XsQuaternion", deltaT: "XsReal") -> "XsVector &":
        return _movelladot_pc_sdk_py39_64.XsVector_angularVelocityFromQuaternion(self, quat, deltaT)

    def __sub__(self, sub: "XsVector") -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsVector___sub__(self, sub)

    def __add__(self, sub: "XsVector") -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsVector___add__(self, sub)

    def __isub__(self, sub: "XsVector") -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsVector___isub__(self, sub)

    def __iadd__(self, sub: "XsVector") -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsVector___iadd__(self, sub)

    def __eq__(self, other: "XsVector") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsVector___eq__(self, other)

    def isEqual(self, other: "XsVector", epsilon: "XsReal") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsVector_isEqual(self, other, epsilon)

    def toVector(self) -> "std::vector< XsReal,std::allocator< XsReal > >":
        return _movelladot_pc_sdk_py39_64.XsVector_toVector(self)

    def zero(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector_zero(self)

    def fill(self, val: "XsReal") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector_fill(self, val)

    def swap(self, b: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector_swap(self, b)

    def append(self, other: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector_append(self, other)

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector_clear(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector_reverse(self)

    def __getitem__(self, index: "XsSize") -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsVector___getitem__(self, index)

    def getItem(self, index: "XsSize") -> "XsReal":

        index = int(index)


        return _movelladot_pc_sdk_py39_64.XsVector_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsReal") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsReal") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64.XsVector_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsVector___len__(self)

    def toNdArray(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsVector_toNdArray(self)

    def toNdArrayRef(self) -> "XsVector *":
        return _movelladot_pc_sdk_py39_64.XsVector_toNdArrayRef(self)

    def __init__(self, *args):
    	self.this = _swigLib.xsVector(*args)


    def __repr__(self):
    	return np.array_str(self.toNdArray())


# Register XsVector in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsVector_swigregister(XsVector)
XsMath_e = cvar.XsMath_e
XsMath_pi = cvar.XsMath_pi
XsMath_tinyValue = cvar.XsMath_tinyValue
XsMath_hugeValue = cvar.XsMath_hugeValue
XsMath_epsilon = cvar.XsMath_epsilon
XsMath_sqrtEpsilon = cvar.XsMath_sqrtEpsilon
XsMath_denormalized = cvar.XsMath_denormalized
XsMath_sqrtDenormalized = cvar.XsMath_sqrtDenormalized
XsMath_rad2degValue = cvar.XsMath_rad2degValue
XsMath_deg2radValue = cvar.XsMath_deg2radValue
XsMath_zero = cvar.XsMath_zero
XsMath_pt25 = cvar.XsMath_pt25
XsMath_pt5 = cvar.XsMath_pt5
XsMath_minusPt5 = cvar.XsMath_minusPt5
XsMath_one = cvar.XsMath_one
XsMath_minusOne = cvar.XsMath_minusOne
XsMath_two = cvar.XsMath_two
XsMath_four = cvar.XsMath_four
XsMath_minusTwo = cvar.XsMath_minusTwo
XsMath_minusHalfPi = cvar.XsMath_minusHalfPi
XsMath_halfPi = cvar.XsMath_halfPi
XsMath_twoPi = cvar.XsMath_twoPi
XsMath_sqrt2 = cvar.XsMath_sqrt2
XsMath_sqrtHalf = cvar.XsMath_sqrtHalf
XsMath_infinity = cvar.XsMath_infinity
e = cvar.e
pi = cvar.pi
tinyValue = cvar.tinyValue
hugeValue = cvar.hugeValue
epsilon = cvar.epsilon
sqrtEpsilon = cvar.sqrtEpsilon
denormalized = cvar.denormalized
sqrtDenormalized = cvar.sqrtDenormalized
rad2degValue = cvar.rad2degValue
deg2radValue = cvar.deg2radValue
zero = cvar.zero
pt25 = cvar.pt25
pt5 = cvar.pt5
minusPt5 = cvar.minusPt5
one = cvar.one
minusOne = cvar.minusOne
two = cvar.two
four = cvar.four
minusTwo = cvar.minusTwo
minusHalfPi = cvar.minusHalfPi
halfPi = cvar.halfPi
twoPi = cvar.twoPi
sqrt2 = cvar.sqrt2
sqrtHalf = cvar.sqrtHalf
infinity = cvar.infinity

class XsVector3(XsVector):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def zero3() -> "XsVector3 const &":
        return _movelladot_pc_sdk_py39_64.XsVector3_zero3()

    def __assign__(self, *args) -> "XsVector3 &":
        return _movelladot_pc_sdk_py39_64.XsVector3___assign__(self, *args)

    def assign(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsVector3_assign(self, *args)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsVector3

# Register XsVector3 in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsVector3_swigregister(XsVector3)

def XsVector3_zero3() -> "XsVector3 const &":
    return _movelladot_pc_sdk_py39_64.XsVector3_zero3()

class XsCalibratedData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_acc = property(_movelladot_pc_sdk_py39_64.XsCalibratedData_m_acc_get, _movelladot_pc_sdk_py39_64.XsCalibratedData_m_acc_set)
    m_gyr = property(_movelladot_pc_sdk_py39_64.XsCalibratedData_m_gyr_get, _movelladot_pc_sdk_py39_64.XsCalibratedData_m_gyr_set)
    m_mag = property(_movelladot_pc_sdk_py39_64.XsCalibratedData_m_mag_get, _movelladot_pc_sdk_py39_64.XsCalibratedData_m_mag_set)

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsCalibratedData_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsCalibratedData(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsCalibratedData

    def __assign__(self, other: "XsCalibratedData") -> "XsCalibratedData &":
        return _movelladot_pc_sdk_py39_64.XsCalibratedData___assign__(self, other)

# Register XsCalibratedData in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsCalibratedData_swigregister(XsCalibratedData)

XCBC_1M = _movelladot_pc_sdk_py39_64.XCBC_1M
XCBC_800k = _movelladot_pc_sdk_py39_64.XCBC_800k
XCBC_500k = _movelladot_pc_sdk_py39_64.XCBC_500k
XCBC_250k = _movelladot_pc_sdk_py39_64.XCBC_250k
XCBC_125k = _movelladot_pc_sdk_py39_64.XCBC_125k
XCBC_100k = _movelladot_pc_sdk_py39_64.XCBC_100k
XCBC_83k3 = _movelladot_pc_sdk_py39_64.XCBC_83k3
XCBC_62k5 = _movelladot_pc_sdk_py39_64.XCBC_62k5
XCBC_50k = _movelladot_pc_sdk_py39_64.XCBC_50k
XCBC_33k3 = _movelladot_pc_sdk_py39_64.XCBC_33k3
XCBC_20k = _movelladot_pc_sdk_py39_64.XCBC_20k
XCBC_10k = _movelladot_pc_sdk_py39_64.XCBC_10k
XCBC_5k = _movelladot_pc_sdk_py39_64.XCBC_5k
XCBC_Invalid = _movelladot_pc_sdk_py39_64.XCBC_Invalid
XCDI_MAX_FREQUENCY_VAL = _movelladot_pc_sdk_py39_64.XCDI_MAX_FREQUENCY_VAL
XCDI_Invalid = _movelladot_pc_sdk_py39_64.XCDI_Invalid
XCDI_Error = _movelladot_pc_sdk_py39_64.XCDI_Error
XCDI_Warning = _movelladot_pc_sdk_py39_64.XCDI_Warning
XCDI_SampleTime = _movelladot_pc_sdk_py39_64.XCDI_SampleTime
XCDI_GroupCounter = _movelladot_pc_sdk_py39_64.XCDI_GroupCounter
XCDI_UtcTime = _movelladot_pc_sdk_py39_64.XCDI_UtcTime
XCDI_StatusWord = _movelladot_pc_sdk_py39_64.XCDI_StatusWord
XCDI_Quaternion = _movelladot_pc_sdk_py39_64.XCDI_Quaternion
XCDI_EulerAngles = _movelladot_pc_sdk_py39_64.XCDI_EulerAngles
XCDI_RotationMatrix = _movelladot_pc_sdk_py39_64.XCDI_RotationMatrix
XCDI_DeltaV = _movelladot_pc_sdk_py39_64.XCDI_DeltaV
XCDI_RateOfTurn = _movelladot_pc_sdk_py39_64.XCDI_RateOfTurn
XCDI_DeltaQ = _movelladot_pc_sdk_py39_64.XCDI_DeltaQ
XCDI_Acceleration = _movelladot_pc_sdk_py39_64.XCDI_Acceleration
XCDI_FreeAcceleration = _movelladot_pc_sdk_py39_64.XCDI_FreeAcceleration
XCDI_MagneticField = _movelladot_pc_sdk_py39_64.XCDI_MagneticField
XCDI_Temperature = _movelladot_pc_sdk_py39_64.XCDI_Temperature
XCDI_BaroPressure = _movelladot_pc_sdk_py39_64.XCDI_BaroPressure
XCDI_RateOfTurnHR = _movelladot_pc_sdk_py39_64.XCDI_RateOfTurnHR
XCDI_AccelerationHR = _movelladot_pc_sdk_py39_64.XCDI_AccelerationHR
XCDI_LatLong = _movelladot_pc_sdk_py39_64.XCDI_LatLong
XCDI_AltitudeEllipsoid = _movelladot_pc_sdk_py39_64.XCDI_AltitudeEllipsoid
XCDI_PositionEcef_X = _movelladot_pc_sdk_py39_64.XCDI_PositionEcef_X
XCDI_PositionEcef_Y = _movelladot_pc_sdk_py39_64.XCDI_PositionEcef_Y
XCDI_PositionEcef_Z = _movelladot_pc_sdk_py39_64.XCDI_PositionEcef_Z
XCDI_Velocity = _movelladot_pc_sdk_py39_64.XCDI_Velocity
XCDI_Latitude = _movelladot_pc_sdk_py39_64.XCDI_Latitude
XCDI_Longitude = _movelladot_pc_sdk_py39_64.XCDI_Longitude
XCDI_GnssReceiverStatus = _movelladot_pc_sdk_py39_64.XCDI_GnssReceiverStatus
XCDI_GnssReceiverDop = _movelladot_pc_sdk_py39_64.XCDI_GnssReceiverDop
XCDI_EndOfGroup = _movelladot_pc_sdk_py39_64.XCDI_EndOfGroup
XCDI_HighestIdentifier = _movelladot_pc_sdk_py39_64.XCDI_HighestIdentifier
XCCI_LowestIdentifier = _movelladot_pc_sdk_py39_64.XCCI_LowestIdentifier
XCCI_DeviceIdReq = _movelladot_pc_sdk_py39_64.XCCI_DeviceIdReq
XCCI_DeviceId = _movelladot_pc_sdk_py39_64.XCCI_DeviceId
XCCI_GotoConfig = _movelladot_pc_sdk_py39_64.XCCI_GotoConfig
XCCI_GotoMeasurement = _movelladot_pc_sdk_py39_64.XCCI_GotoMeasurement
XCCI_Reset = _movelladot_pc_sdk_py39_64.XCCI_Reset
XCCI_HighestIdentifier = _movelladot_pc_sdk_py39_64.XCCI_HighestIdentifier
XCFF_11Bit_Identifier = _movelladot_pc_sdk_py39_64.XCFF_11Bit_Identifier
XCFF_29Bit_Identifier = _movelladot_pc_sdk_py39_64.XCFF_29Bit_Identifier
XS_MAX_CANOUTPUTCONFIGURATIONS = _movelladot_pc_sdk_py39_64.XS_MAX_CANOUTPUTCONFIGURATIONS
class XsCanOutputConfiguration(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_frameFormat = property(_movelladot_pc_sdk_py39_64.XsCanOutputConfiguration_m_frameFormat_get, _movelladot_pc_sdk_py39_64.XsCanOutputConfiguration_m_frameFormat_set)
    m_dataIdentifier = property(_movelladot_pc_sdk_py39_64.XsCanOutputConfiguration_m_dataIdentifier_get, _movelladot_pc_sdk_py39_64.XsCanOutputConfiguration_m_dataIdentifier_set)
    m_id = property(_movelladot_pc_sdk_py39_64.XsCanOutputConfiguration_m_id_get, _movelladot_pc_sdk_py39_64.XsCanOutputConfiguration_m_id_set)
    m_frequency = property(_movelladot_pc_sdk_py39_64.XsCanOutputConfiguration_m_frequency_get, _movelladot_pc_sdk_py39_64.XsCanOutputConfiguration_m_frequency_set)

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsCanOutputConfiguration_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsCanOutputConfiguration(*args))

    def __eq__(self, other: "XsCanOutputConfiguration") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsCanOutputConfiguration___eq__(self, other)

    def __ne__(self, other: "XsCanOutputConfiguration") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsCanOutputConfiguration___ne__(self, other)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsCanOutputConfiguration

# Register XsCanOutputConfiguration in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsCanOutputConfiguration_swigregister(XsCanOutputConfiguration)

class XsCanOutputConfigurationArray(_XsCanOutputConfigurationArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsCanOutputConfigurationArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsCanOutputConfigurationArray(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsCanOutputConfigurationArray

# Register XsCanOutputConfigurationArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsCanOutputConfigurationArray_swigregister(XsCanOutputConfigurationArray)
g_xsCanOutputConfigurationArrayDescriptor = cvar.g_xsCanOutputConfigurationArrayDescriptor

XCL_DCD = _movelladot_pc_sdk_py39_64.XCL_DCD
XCL_RD = _movelladot_pc_sdk_py39_64.XCL_RD
XCL_TD = _movelladot_pc_sdk_py39_64.XCL_TD
XCL_DTR = _movelladot_pc_sdk_py39_64.XCL_DTR
XCL_GND = _movelladot_pc_sdk_py39_64.XCL_GND
XCL_DSR = _movelladot_pc_sdk_py39_64.XCL_DSR
XCL_RTS = _movelladot_pc_sdk_py39_64.XCL_RTS
XCL_CTS = _movelladot_pc_sdk_py39_64.XCL_CTS
XCL_RI = _movelladot_pc_sdk_py39_64.XCL_RI
XDI_None = _movelladot_pc_sdk_py39_64.XDI_None
XDI_TypeMask = _movelladot_pc_sdk_py39_64.XDI_TypeMask
XDI_FullTypeMask = _movelladot_pc_sdk_py39_64.XDI_FullTypeMask
XDI_FullMask = _movelladot_pc_sdk_py39_64.XDI_FullMask
XDI_FormatMask = _movelladot_pc_sdk_py39_64.XDI_FormatMask
XDI_DataFormatMask = _movelladot_pc_sdk_py39_64.XDI_DataFormatMask
XDI_SubFormatMask = _movelladot_pc_sdk_py39_64.XDI_SubFormatMask
XDI_SubFormatFloat = _movelladot_pc_sdk_py39_64.XDI_SubFormatFloat
XDI_SubFormatFp1220 = _movelladot_pc_sdk_py39_64.XDI_SubFormatFp1220
XDI_SubFormatFp1632 = _movelladot_pc_sdk_py39_64.XDI_SubFormatFp1632
XDI_SubFormatDouble = _movelladot_pc_sdk_py39_64.XDI_SubFormatDouble
XDI_SubFormatLeft = _movelladot_pc_sdk_py39_64.XDI_SubFormatLeft
XDI_SubFormatRight = _movelladot_pc_sdk_py39_64.XDI_SubFormatRight
XDI_TemperatureGroup = _movelladot_pc_sdk_py39_64.XDI_TemperatureGroup
XDI_Temperature = _movelladot_pc_sdk_py39_64.XDI_Temperature
XDI_TimestampGroup = _movelladot_pc_sdk_py39_64.XDI_TimestampGroup
XDI_UtcTime = _movelladot_pc_sdk_py39_64.XDI_UtcTime
XDI_PacketCounter = _movelladot_pc_sdk_py39_64.XDI_PacketCounter
XDI_Itow = _movelladot_pc_sdk_py39_64.XDI_Itow
XDI_GnssAge = _movelladot_pc_sdk_py39_64.XDI_GnssAge
XDI_PressureAge = _movelladot_pc_sdk_py39_64.XDI_PressureAge
XDI_SampleTimeFine = _movelladot_pc_sdk_py39_64.XDI_SampleTimeFine
XDI_SampleTimeCoarse = _movelladot_pc_sdk_py39_64.XDI_SampleTimeCoarse
XDI_FrameRange = _movelladot_pc_sdk_py39_64.XDI_FrameRange
XDI_PacketCounter8 = _movelladot_pc_sdk_py39_64.XDI_PacketCounter8
XDI_SampleTime64 = _movelladot_pc_sdk_py39_64.XDI_SampleTime64
XDI_PacketCounter32 = _movelladot_pc_sdk_py39_64.XDI_PacketCounter32
XDI_OrientationGroup = _movelladot_pc_sdk_py39_64.XDI_OrientationGroup
XDI_CoordSysMask = _movelladot_pc_sdk_py39_64.XDI_CoordSysMask
XDI_CoordSysEnu = _movelladot_pc_sdk_py39_64.XDI_CoordSysEnu
XDI_CoordSysNed = _movelladot_pc_sdk_py39_64.XDI_CoordSysNed
XDI_CoordSysNwu = _movelladot_pc_sdk_py39_64.XDI_CoordSysNwu
XDI_Quaternion = _movelladot_pc_sdk_py39_64.XDI_Quaternion
XDI_RotationMatrix = _movelladot_pc_sdk_py39_64.XDI_RotationMatrix
XDI_EulerAngles = _movelladot_pc_sdk_py39_64.XDI_EulerAngles
XDI_PressureGroup = _movelladot_pc_sdk_py39_64.XDI_PressureGroup
XDI_BaroPressure = _movelladot_pc_sdk_py39_64.XDI_BaroPressure
XDI_AccelerationGroup = _movelladot_pc_sdk_py39_64.XDI_AccelerationGroup
XDI_DeltaV = _movelladot_pc_sdk_py39_64.XDI_DeltaV
XDI_Acceleration = _movelladot_pc_sdk_py39_64.XDI_Acceleration
XDI_FreeAcceleration = _movelladot_pc_sdk_py39_64.XDI_FreeAcceleration
XDI_AccelerationHR = _movelladot_pc_sdk_py39_64.XDI_AccelerationHR
XDI_IndicationGroup = _movelladot_pc_sdk_py39_64.XDI_IndicationGroup
XDI_TriggerIn1 = _movelladot_pc_sdk_py39_64.XDI_TriggerIn1
XDI_TriggerIn2 = _movelladot_pc_sdk_py39_64.XDI_TriggerIn2
XDI_TriggerIn3 = _movelladot_pc_sdk_py39_64.XDI_TriggerIn3
XDI_PositionGroup = _movelladot_pc_sdk_py39_64.XDI_PositionGroup
XDI_AltitudeMsl = _movelladot_pc_sdk_py39_64.XDI_AltitudeMsl
XDI_AltitudeEllipsoid = _movelladot_pc_sdk_py39_64.XDI_AltitudeEllipsoid
XDI_PositionEcef = _movelladot_pc_sdk_py39_64.XDI_PositionEcef
XDI_LatLon = _movelladot_pc_sdk_py39_64.XDI_LatLon
XDI_GnssGroup = _movelladot_pc_sdk_py39_64.XDI_GnssGroup
XDI_GnssPvtData = _movelladot_pc_sdk_py39_64.XDI_GnssPvtData
XDI_GnssSatInfo = _movelladot_pc_sdk_py39_64.XDI_GnssSatInfo
XDI_GnssPvtPulse = _movelladot_pc_sdk_py39_64.XDI_GnssPvtPulse
XDI_AngularVelocityGroup = _movelladot_pc_sdk_py39_64.XDI_AngularVelocityGroup
XDI_RateOfTurn = _movelladot_pc_sdk_py39_64.XDI_RateOfTurn
XDI_DeltaQ = _movelladot_pc_sdk_py39_64.XDI_DeltaQ
XDI_RateOfTurnHR = _movelladot_pc_sdk_py39_64.XDI_RateOfTurnHR
XDI_RawSensorGroup = _movelladot_pc_sdk_py39_64.XDI_RawSensorGroup
XDI_RawUnsigned = _movelladot_pc_sdk_py39_64.XDI_RawUnsigned
XDI_RawSigned = _movelladot_pc_sdk_py39_64.XDI_RawSigned
XDI_RawAccGyrMagTemp = _movelladot_pc_sdk_py39_64.XDI_RawAccGyrMagTemp
XDI_RawGyroTemp = _movelladot_pc_sdk_py39_64.XDI_RawGyroTemp
XDI_RawAcc = _movelladot_pc_sdk_py39_64.XDI_RawAcc
XDI_RawGyr = _movelladot_pc_sdk_py39_64.XDI_RawGyr
XDI_RawMag = _movelladot_pc_sdk_py39_64.XDI_RawMag
XDI_RawDeltaQ = _movelladot_pc_sdk_py39_64.XDI_RawDeltaQ
XDI_RawDeltaV = _movelladot_pc_sdk_py39_64.XDI_RawDeltaV
XDI_RawBlob = _movelladot_pc_sdk_py39_64.XDI_RawBlob
XDI_AnalogInGroup = _movelladot_pc_sdk_py39_64.XDI_AnalogInGroup
XDI_AnalogIn1 = _movelladot_pc_sdk_py39_64.XDI_AnalogIn1
XDI_AnalogIn2 = _movelladot_pc_sdk_py39_64.XDI_AnalogIn2
XDI_MagneticGroup = _movelladot_pc_sdk_py39_64.XDI_MagneticGroup
XDI_MagneticField = _movelladot_pc_sdk_py39_64.XDI_MagneticField
XDI_MagneticFieldCorrected = _movelladot_pc_sdk_py39_64.XDI_MagneticFieldCorrected
XDI_SnapshotGroup = _movelladot_pc_sdk_py39_64.XDI_SnapshotGroup
XDI_RetransmissionMask = _movelladot_pc_sdk_py39_64.XDI_RetransmissionMask
XDI_RetransmissionFlag = _movelladot_pc_sdk_py39_64.XDI_RetransmissionFlag
XDI_AwindaSnapshot = _movelladot_pc_sdk_py39_64.XDI_AwindaSnapshot
XDI_FullSnapshot = _movelladot_pc_sdk_py39_64.XDI_FullSnapshot
XDI_GloveSnapshotLeft = _movelladot_pc_sdk_py39_64.XDI_GloveSnapshotLeft
XDI_GloveSnapshotRight = _movelladot_pc_sdk_py39_64.XDI_GloveSnapshotRight
XDI_GloveDataGroup = _movelladot_pc_sdk_py39_64.XDI_GloveDataGroup
XDI_GloveDataLeft = _movelladot_pc_sdk_py39_64.XDI_GloveDataLeft
XDI_GloveDataRight = _movelladot_pc_sdk_py39_64.XDI_GloveDataRight
XDI_VelocityGroup = _movelladot_pc_sdk_py39_64.XDI_VelocityGroup
XDI_VelocityXYZ = _movelladot_pc_sdk_py39_64.XDI_VelocityXYZ
XDI_StatusGroup = _movelladot_pc_sdk_py39_64.XDI_StatusGroup
XDI_StatusByte = _movelladot_pc_sdk_py39_64.XDI_StatusByte
XDI_StatusWord = _movelladot_pc_sdk_py39_64.XDI_StatusWord
XDI_Rssi = _movelladot_pc_sdk_py39_64.XDI_Rssi
XDI_DeviceId = _movelladot_pc_sdk_py39_64.XDI_DeviceId
XDI_LocationId = _movelladot_pc_sdk_py39_64.XDI_LocationId
XDI_MAX_FREQUENCY_VAL = _movelladot_pc_sdk_py39_64.XDI_MAX_FREQUENCY_VAL
XDIV_MaxFrequency = _movelladot_pc_sdk_py39_64.XDIV_MaxFrequency
XMID_InvalidMessage = _movelladot_pc_sdk_py39_64.XMID_InvalidMessage
XMID_ReqDid = _movelladot_pc_sdk_py39_64.XMID_ReqDid
XMID_DeviceId = _movelladot_pc_sdk_py39_64.XMID_DeviceId
XMID_Initbus = _movelladot_pc_sdk_py39_64.XMID_Initbus
XMID_InitBusResults = _movelladot_pc_sdk_py39_64.XMID_InitBusResults
XMID_ReqPeriod = _movelladot_pc_sdk_py39_64.XMID_ReqPeriod
XMID_ReqPeriodAck = _movelladot_pc_sdk_py39_64.XMID_ReqPeriodAck
XMID_SetPeriod = _movelladot_pc_sdk_py39_64.XMID_SetPeriod
XMID_SetPeriodAck = _movelladot_pc_sdk_py39_64.XMID_SetPeriodAck
XMID_SetBid = _movelladot_pc_sdk_py39_64.XMID_SetBid
XMID_SetBidAck = _movelladot_pc_sdk_py39_64.XMID_SetBidAck
XMID_AutoStart = _movelladot_pc_sdk_py39_64.XMID_AutoStart
XMID_AutoStartAck = _movelladot_pc_sdk_py39_64.XMID_AutoStartAck
XMID_BusPower = _movelladot_pc_sdk_py39_64.XMID_BusPower
XMID_BusPowerAck = _movelladot_pc_sdk_py39_64.XMID_BusPowerAck
XMID_ReqDataLength = _movelladot_pc_sdk_py39_64.XMID_ReqDataLength
XMID_DataLength = _movelladot_pc_sdk_py39_64.XMID_DataLength
XMID_ReqConfiguration = _movelladot_pc_sdk_py39_64.XMID_ReqConfiguration
XMID_Configuration = _movelladot_pc_sdk_py39_64.XMID_Configuration
XMID_RestoreFactoryDef = _movelladot_pc_sdk_py39_64.XMID_RestoreFactoryDef
XMID_RestoreFactoryDefAck = _movelladot_pc_sdk_py39_64.XMID_RestoreFactoryDefAck
XMID_GotoMeasurement = _movelladot_pc_sdk_py39_64.XMID_GotoMeasurement
XMID_GotoMeasurementAck = _movelladot_pc_sdk_py39_64.XMID_GotoMeasurementAck
XMID_ReqFirmwareRevision = _movelladot_pc_sdk_py39_64.XMID_ReqFirmwareRevision
XMID_FirmwareRevision = _movelladot_pc_sdk_py39_64.XMID_FirmwareRevision
XMID_ReqUniqueId = _movelladot_pc_sdk_py39_64.XMID_ReqUniqueId
XMID_UniqueId = _movelladot_pc_sdk_py39_64.XMID_UniqueId
XMID_ReqBodypackMode = _movelladot_pc_sdk_py39_64.XMID_ReqBodypackMode
XMID_ReqBodypackAck = _movelladot_pc_sdk_py39_64.XMID_ReqBodypackAck
XMID_SetBodypackMode = _movelladot_pc_sdk_py39_64.XMID_SetBodypackMode
XMID_SetBodypackModeAck = _movelladot_pc_sdk_py39_64.XMID_SetBodypackModeAck
XMID_ReqBaudrate = _movelladot_pc_sdk_py39_64.XMID_ReqBaudrate
XMID_ReqBaudrateAck = _movelladot_pc_sdk_py39_64.XMID_ReqBaudrateAck
XMID_SetBaudrate = _movelladot_pc_sdk_py39_64.XMID_SetBaudrate
XMID_SetBaudrateAck = _movelladot_pc_sdk_py39_64.XMID_SetBaudrateAck
XMID_ReqProductVariant = _movelladot_pc_sdk_py39_64.XMID_ReqProductVariant
XMID_ProductVariant = _movelladot_pc_sdk_py39_64.XMID_ProductVariant
XMID_ReqProductCode = _movelladot_pc_sdk_py39_64.XMID_ReqProductCode
XMID_ProductCode = _movelladot_pc_sdk_py39_64.XMID_ProductCode
XMID_ReqHardwareVersion = _movelladot_pc_sdk_py39_64.XMID_ReqHardwareVersion
XMID_HardwareVersion = _movelladot_pc_sdk_py39_64.XMID_HardwareVersion
XMID_ReqProcessingFlags = _movelladot_pc_sdk_py39_64.XMID_ReqProcessingFlags
XMID_ReqProcessingFlagsAck = _movelladot_pc_sdk_py39_64.XMID_ReqProcessingFlagsAck
XMID_SetProcessingFlags = _movelladot_pc_sdk_py39_64.XMID_SetProcessingFlags
XMID_SetProcessingFlagsAck = _movelladot_pc_sdk_py39_64.XMID_SetProcessingFlagsAck
XMID_SetNoRotation = _movelladot_pc_sdk_py39_64.XMID_SetNoRotation
XMID_SetNoRotationAck = _movelladot_pc_sdk_py39_64.XMID_SetNoRotationAck
XMID_RunSelfTest = _movelladot_pc_sdk_py39_64.XMID_RunSelfTest
XMID_SelfTestResults = _movelladot_pc_sdk_py39_64.XMID_SelfTestResults
XMID_ReqInputTrigger = _movelladot_pc_sdk_py39_64.XMID_ReqInputTrigger
XMID_ReqInputTriggerAck = _movelladot_pc_sdk_py39_64.XMID_ReqInputTriggerAck
XMID_SetInputTrigger = _movelladot_pc_sdk_py39_64.XMID_SetInputTrigger
XMID_SetInputTriggerAck = _movelladot_pc_sdk_py39_64.XMID_SetInputTriggerAck
XMID_ReqOutputTrigger = _movelladot_pc_sdk_py39_64.XMID_ReqOutputTrigger
XMID_ReqOutputTriggerAck = _movelladot_pc_sdk_py39_64.XMID_ReqOutputTriggerAck
XMID_SetOutputTrigger = _movelladot_pc_sdk_py39_64.XMID_SetOutputTrigger
XMID_SetOutputTriggerAck = _movelladot_pc_sdk_py39_64.XMID_SetOutputTriggerAck
XMID_SetSyncStationMode = _movelladot_pc_sdk_py39_64.XMID_SetSyncStationMode
XMID_SetSyncStationModeAck = _movelladot_pc_sdk_py39_64.XMID_SetSyncStationModeAck
XMID_ReqSyncStationMode = _movelladot_pc_sdk_py39_64.XMID_ReqSyncStationMode
XMID_ReqSyncStationModeAck = _movelladot_pc_sdk_py39_64.XMID_ReqSyncStationModeAck
XMID_SetSyncConfiguration = _movelladot_pc_sdk_py39_64.XMID_SetSyncConfiguration
XMID_SetSyncConfigurationAck = _movelladot_pc_sdk_py39_64.XMID_SetSyncConfigurationAck
XMID_ReqSyncConfiguration = _movelladot_pc_sdk_py39_64.XMID_ReqSyncConfiguration
XMID_SyncConfiguration = _movelladot_pc_sdk_py39_64.XMID_SyncConfiguration
XMID_DriverDisconnect = _movelladot_pc_sdk_py39_64.XMID_DriverDisconnect
XMID_DriverDisconnectAck = _movelladot_pc_sdk_py39_64.XMID_DriverDisconnectAck
XMID_GotoConfig = _movelladot_pc_sdk_py39_64.XMID_GotoConfig
XMID_GotoConfigAck = _movelladot_pc_sdk_py39_64.XMID_GotoConfigAck
XMID_MtData = _movelladot_pc_sdk_py39_64.XMID_MtData
XMID_BusData = _movelladot_pc_sdk_py39_64.XMID_BusData
XMID_PrepareData = _movelladot_pc_sdk_py39_64.XMID_PrepareData
XMID_ReqData = _movelladot_pc_sdk_py39_64.XMID_ReqData
XMID_ReqDataAck = _movelladot_pc_sdk_py39_64.XMID_ReqDataAck
XMID_MtData2 = _movelladot_pc_sdk_py39_64.XMID_MtData2
XMID_MtData2Ack = _movelladot_pc_sdk_py39_64.XMID_MtData2Ack
XMID_RequestControl = _movelladot_pc_sdk_py39_64.XMID_RequestControl
XMID_RequestControlAck = _movelladot_pc_sdk_py39_64.XMID_RequestControlAck
XMID_SetDataPort = _movelladot_pc_sdk_py39_64.XMID_SetDataPort
XMID_SetDataPortAck = _movelladot_pc_sdk_py39_64.XMID_SetDataPortAck
XMID_ReqRetransmission = _movelladot_pc_sdk_py39_64.XMID_ReqRetransmission
XMID_ReqRetransmissionAck = _movelladot_pc_sdk_py39_64.XMID_ReqRetransmissionAck
XMID_Wakeup = _movelladot_pc_sdk_py39_64.XMID_Wakeup
XMID_WakeupAck = _movelladot_pc_sdk_py39_64.XMID_WakeupAck
XMID_Reset = _movelladot_pc_sdk_py39_64.XMID_Reset
XMID_ResetAck = _movelladot_pc_sdk_py39_64.XMID_ResetAck
XMID_Error = _movelladot_pc_sdk_py39_64.XMID_Error
XMID_Warning = _movelladot_pc_sdk_py39_64.XMID_Warning
XMID_XmPowerOff = _movelladot_pc_sdk_py39_64.XMID_XmPowerOff
XMID_MasterIndication = _movelladot_pc_sdk_py39_64.XMID_MasterIndication
XMID_XsbData = _movelladot_pc_sdk_py39_64.XMID_XsbData
XMID_ReqOptionFlags = _movelladot_pc_sdk_py39_64.XMID_ReqOptionFlags
XMID_ReqOptionFlagsAck = _movelladot_pc_sdk_py39_64.XMID_ReqOptionFlagsAck
XMID_SetOptionFlags = _movelladot_pc_sdk_py39_64.XMID_SetOptionFlags
XMID_SetOptionFlagsAck = _movelladot_pc_sdk_py39_64.XMID_SetOptionFlagsAck
XMID_ReqStealthMode = _movelladot_pc_sdk_py39_64.XMID_ReqStealthMode
XMID_StealthMode = _movelladot_pc_sdk_py39_64.XMID_StealthMode
XMID_SetStealthMode = _movelladot_pc_sdk_py39_64.XMID_SetStealthMode
XMID_SetStealthModeAck = _movelladot_pc_sdk_py39_64.XMID_SetStealthModeAck
XMID_UserInterface = _movelladot_pc_sdk_py39_64.XMID_UserInterface
XMID_UserInterfaceAck = _movelladot_pc_sdk_py39_64.XMID_UserInterfaceAck
XMID_EndOfRecording = _movelladot_pc_sdk_py39_64.XMID_EndOfRecording
XMID_EndOfRecordingAck = _movelladot_pc_sdk_py39_64.XMID_EndOfRecordingAck
XMID_GotoTransparentMode = _movelladot_pc_sdk_py39_64.XMID_GotoTransparentMode
XMID_GotoTransparentModeAck = _movelladot_pc_sdk_py39_64.XMID_GotoTransparentModeAck
XMID_ReqDeviceCapabilities = _movelladot_pc_sdk_py39_64.XMID_ReqDeviceCapabilities
XMID_DeviceCapabilities = _movelladot_pc_sdk_py39_64.XMID_DeviceCapabilities
XMID_DiscardRetransmissions = _movelladot_pc_sdk_py39_64.XMID_DiscardRetransmissions
XMID_DiscardRetransmissionsAck = _movelladot_pc_sdk_py39_64.XMID_DiscardRetransmissionsAck
XMID_RunFactoryTest = _movelladot_pc_sdk_py39_64.XMID_RunFactoryTest
XMID_FactoryTestResults = _movelladot_pc_sdk_py39_64.XMID_FactoryTestResults
XMID_FactoryTestConnect = _movelladot_pc_sdk_py39_64.XMID_FactoryTestConnect
XMID_FactoryTestConnectAck = _movelladot_pc_sdk_py39_64.XMID_FactoryTestConnectAck
XMID_SetDataOutputDelay = _movelladot_pc_sdk_py39_64.XMID_SetDataOutputDelay
XMID_SetDataOutputDelayAck = _movelladot_pc_sdk_py39_64.XMID_SetDataOutputDelayAck
XMID_SetBodypackConfigFile = _movelladot_pc_sdk_py39_64.XMID_SetBodypackConfigFile
XMID_SetBodypackConfigFileAck = _movelladot_pc_sdk_py39_64.XMID_SetBodypackConfigFileAck
XMID_ReqObrStatus = _movelladot_pc_sdk_py39_64.XMID_ReqObrStatus
XMID_ObrStatus = _movelladot_pc_sdk_py39_64.XMID_ObrStatus
XMID_SetUtcTime = _movelladot_pc_sdk_py39_64.XMID_SetUtcTime
XMID_ReqUtcTime = _movelladot_pc_sdk_py39_64.XMID_ReqUtcTime
XMID_SetUtcTimeAck = _movelladot_pc_sdk_py39_64.XMID_SetUtcTimeAck
XMID_UtcTime = _movelladot_pc_sdk_py39_64.XMID_UtcTime
XMID_FactoryTestSensorTiming = _movelladot_pc_sdk_py39_64.XMID_FactoryTestSensorTiming
XMID_FactoryTestSensorTimingResults = _movelladot_pc_sdk_py39_64.XMID_FactoryTestSensorTimingResults
XMID_ReqAvailableFilterProfiles = _movelladot_pc_sdk_py39_64.XMID_ReqAvailableFilterProfiles
XMID_AvailableFilterProfiles = _movelladot_pc_sdk_py39_64.XMID_AvailableFilterProfiles
XMID_ReqFilterProfile = _movelladot_pc_sdk_py39_64.XMID_ReqFilterProfile
XMID_ReqFilterProfileAck = _movelladot_pc_sdk_py39_64.XMID_ReqFilterProfileAck
XMID_SetFilterProfile = _movelladot_pc_sdk_py39_64.XMID_SetFilterProfile
XMID_SetFilterProfileAck = _movelladot_pc_sdk_py39_64.XMID_SetFilterProfileAck
XMID_ReqGravityMagnitude = _movelladot_pc_sdk_py39_64.XMID_ReqGravityMagnitude
XMID_ReqGravityMagnitudeAck = _movelladot_pc_sdk_py39_64.XMID_ReqGravityMagnitudeAck
XMID_SetGravityMagnitude = _movelladot_pc_sdk_py39_64.XMID_SetGravityMagnitude
XMID_SetGravityMagnitudeAck = _movelladot_pc_sdk_py39_64.XMID_SetGravityMagnitudeAck
XMID_ReqGnssLeverArm = _movelladot_pc_sdk_py39_64.XMID_ReqGnssLeverArm
XMID_ReqGnssLeverArmAck = _movelladot_pc_sdk_py39_64.XMID_ReqGnssLeverArmAck
XMID_SetGnssLeverArm = _movelladot_pc_sdk_py39_64.XMID_SetGnssLeverArm
XMID_SetGnssLeverArmAck = _movelladot_pc_sdk_py39_64.XMID_SetGnssLeverArmAck
XMID_ReqMagneticField = _movelladot_pc_sdk_py39_64.XMID_ReqMagneticField
XMID_ReqMagneticFieldAck = _movelladot_pc_sdk_py39_64.XMID_ReqMagneticFieldAck
XMID_SetMagneticField = _movelladot_pc_sdk_py39_64.XMID_SetMagneticField
XMID_SetMagneticFieldAck = _movelladot_pc_sdk_py39_64.XMID_SetMagneticFieldAck
XMID_ReqReplayMode = _movelladot_pc_sdk_py39_64.XMID_ReqReplayMode
XMID_ReqReplayModeAck = _movelladot_pc_sdk_py39_64.XMID_ReqReplayModeAck
XMID_SetReplayMode = _movelladot_pc_sdk_py39_64.XMID_SetReplayMode
XMID_SetReplayModeAck = _movelladot_pc_sdk_py39_64.XMID_SetReplayModeAck
XMID_ReqLatLonAlt = _movelladot_pc_sdk_py39_64.XMID_ReqLatLonAlt
XMID_ReqLatLonAltAck = _movelladot_pc_sdk_py39_64.XMID_ReqLatLonAltAck
XMID_SetLatLonAlt = _movelladot_pc_sdk_py39_64.XMID_SetLatLonAlt
XMID_SetLatLonAltAck = _movelladot_pc_sdk_py39_64.XMID_SetLatLonAltAck
XMID_KeepAlive = _movelladot_pc_sdk_py39_64.XMID_KeepAlive
XMID_KeepAliveAck = _movelladot_pc_sdk_py39_64.XMID_KeepAliveAck
XMID_CloseConnection = _movelladot_pc_sdk_py39_64.XMID_CloseConnection
XMID_CloseConnectionAck = _movelladot_pc_sdk_py39_64.XMID_CloseConnectionAck
XMID_IccCommand = _movelladot_pc_sdk_py39_64.XMID_IccCommand
XMID_IccCommandAck = _movelladot_pc_sdk_py39_64.XMID_IccCommandAck
XMID_ReqGnssPlatform = _movelladot_pc_sdk_py39_64.XMID_ReqGnssPlatform
XMID_ReqGnssPlatformAck = _movelladot_pc_sdk_py39_64.XMID_ReqGnssPlatformAck
XMID_SetGnssPlatform = _movelladot_pc_sdk_py39_64.XMID_SetGnssPlatform
XMID_SetGnssPlatformAck = _movelladot_pc_sdk_py39_64.XMID_SetGnssPlatformAck
XMID_ReqConnectionSettings = _movelladot_pc_sdk_py39_64.XMID_ReqConnectionSettings
XMID_ReqConnectionSettingsAck = _movelladot_pc_sdk_py39_64.XMID_ReqConnectionSettingsAck
XMID_SetConnectionSettings = _movelladot_pc_sdk_py39_64.XMID_SetConnectionSettings
XMID_SetConnectionSettingsAck = _movelladot_pc_sdk_py39_64.XMID_SetConnectionSettingsAck
XMID_BodyPackBundle = _movelladot_pc_sdk_py39_64.XMID_BodyPackBundle
XMID_BodyPackBundleAck = _movelladot_pc_sdk_py39_64.XMID_BodyPackBundleAck
XMID_ReqStationOptions = _movelladot_pc_sdk_py39_64.XMID_ReqStationOptions
XMID_ReqStationOptionsAck = _movelladot_pc_sdk_py39_64.XMID_ReqStationOptionsAck
XMID_ReqErrorReport = _movelladot_pc_sdk_py39_64.XMID_ReqErrorReport
XMID_ErrorReport = _movelladot_pc_sdk_py39_64.XMID_ErrorReport
XMID_ReqXmErrorMode = _movelladot_pc_sdk_py39_64.XMID_ReqXmErrorMode
XMID_ReqXmErrorModeAck = _movelladot_pc_sdk_py39_64.XMID_ReqXmErrorModeAck
XMID_SetXmErrorMode = _movelladot_pc_sdk_py39_64.XMID_SetXmErrorMode
XMID_SetXmErrorModeAck = _movelladot_pc_sdk_py39_64.XMID_SetXmErrorModeAck
XMID_ReqBufferSize = _movelladot_pc_sdk_py39_64.XMID_ReqBufferSize
XMID_ReqBufferSizeAck = _movelladot_pc_sdk_py39_64.XMID_ReqBufferSizeAck
XMID_SetBufferSize = _movelladot_pc_sdk_py39_64.XMID_SetBufferSize
XMID_SetBufferSizeAck = _movelladot_pc_sdk_py39_64.XMID_SetBufferSizeAck
XMID_ReqHeading = _movelladot_pc_sdk_py39_64.XMID_ReqHeading
XMID_ReqHeadingAck = _movelladot_pc_sdk_py39_64.XMID_ReqHeadingAck
XMID_SetHeading = _movelladot_pc_sdk_py39_64.XMID_SetHeading
XMID_SetHeadingAck = _movelladot_pc_sdk_py39_64.XMID_SetHeadingAck
XMID_ReqLocationId = _movelladot_pc_sdk_py39_64.XMID_ReqLocationId
XMID_ReqLocationIdAck = _movelladot_pc_sdk_py39_64.XMID_ReqLocationIdAck
XMID_SetLocationId = _movelladot_pc_sdk_py39_64.XMID_SetLocationId
XMID_SetLocationIdAck = _movelladot_pc_sdk_py39_64.XMID_SetLocationIdAck
XMID_ReqExtOutputMode = _movelladot_pc_sdk_py39_64.XMID_ReqExtOutputMode
XMID_ReqExtOutputModeAck = _movelladot_pc_sdk_py39_64.XMID_ReqExtOutputModeAck
XMID_SetExtOutputMode = _movelladot_pc_sdk_py39_64.XMID_SetExtOutputMode
XMID_SetExtOutputModeAck = _movelladot_pc_sdk_py39_64.XMID_SetExtOutputModeAck
XMID_ReqBatteryLevel = _movelladot_pc_sdk_py39_64.XMID_ReqBatteryLevel
XMID_Batterylevel = _movelladot_pc_sdk_py39_64.XMID_Batterylevel
XMID_ReqInitTrackMode = _movelladot_pc_sdk_py39_64.XMID_ReqInitTrackMode
XMID_ReqInitTrackModeAck = _movelladot_pc_sdk_py39_64.XMID_ReqInitTrackModeAck
XMID_SetInitTrackMode = _movelladot_pc_sdk_py39_64.XMID_SetInitTrackMode
XMID_SetInitTrackModeAck = _movelladot_pc_sdk_py39_64.XMID_SetInitTrackModeAck
XMID_ReqMasterSettings = _movelladot_pc_sdk_py39_64.XMID_ReqMasterSettings
XMID_MasterSettings = _movelladot_pc_sdk_py39_64.XMID_MasterSettings
XMID_StoreFilterState = _movelladot_pc_sdk_py39_64.XMID_StoreFilterState
XMID_StoreFilterStateAck = _movelladot_pc_sdk_py39_64.XMID_StoreFilterStateAck
XMID_ReqPortConfig = _movelladot_pc_sdk_py39_64.XMID_ReqPortConfig
XMID_SetPortConfig = _movelladot_pc_sdk_py39_64.XMID_SetPortConfig
XMID_PortConfig = _movelladot_pc_sdk_py39_64.XMID_PortConfig
XMID_SetPortConfigAck = _movelladot_pc_sdk_py39_64.XMID_SetPortConfigAck
XMID_ReqStringOutputType = _movelladot_pc_sdk_py39_64.XMID_ReqStringOutputType
XMID_ReqStringOutputTypeAck = _movelladot_pc_sdk_py39_64.XMID_ReqStringOutputTypeAck
XMID_SetStringOutputType = _movelladot_pc_sdk_py39_64.XMID_SetStringOutputType
XMID_SetStringOutputTypeAck = _movelladot_pc_sdk_py39_64.XMID_SetStringOutputTypeAck
XMID_ReqStringOutputConfig = _movelladot_pc_sdk_py39_64.XMID_ReqStringOutputConfig
XMID_ReqStringOutputConfigAck = _movelladot_pc_sdk_py39_64.XMID_ReqStringOutputConfigAck
XMID_SetStringOutputConfig = _movelladot_pc_sdk_py39_64.XMID_SetStringOutputConfig
XMID_SetStringOutputConfigAck = _movelladot_pc_sdk_py39_64.XMID_SetStringOutputConfigAck
XMID_ReqEmts = _movelladot_pc_sdk_py39_64.XMID_ReqEmts
XMID_EmtsData = _movelladot_pc_sdk_py39_64.XMID_EmtsData
XMID_UpdateFilterProfile = _movelladot_pc_sdk_py39_64.XMID_UpdateFilterProfile
XMID_UpdateFilterProfileAck = _movelladot_pc_sdk_py39_64.XMID_UpdateFilterProfileAck
XMID_RestoreEmts = _movelladot_pc_sdk_py39_64.XMID_RestoreEmts
XMID_RestoreEmtsAck = _movelladot_pc_sdk_py39_64.XMID_RestoreEmtsAck
XMID_StoreEmts = _movelladot_pc_sdk_py39_64.XMID_StoreEmts
XMID_StoreEmtsAck = _movelladot_pc_sdk_py39_64.XMID_StoreEmtsAck
XMID_UnlockMaintenanceMode = _movelladot_pc_sdk_py39_64.XMID_UnlockMaintenanceMode
XMID_UnlockMaintenanceModeAck = _movelladot_pc_sdk_py39_64.XMID_UnlockMaintenanceModeAck
XMID_ClockSyncCommand = _movelladot_pc_sdk_py39_64.XMID_ClockSyncCommand
XMID_ClockSyncCommandAck = _movelladot_pc_sdk_py39_64.XMID_ClockSyncCommandAck
XMID_ReqActiveClockCorrection = _movelladot_pc_sdk_py39_64.XMID_ReqActiveClockCorrection
XMID_ActiveClockCorrection = _movelladot_pc_sdk_py39_64.XMID_ActiveClockCorrection
XMID_StoreActiveClockCorrection = _movelladot_pc_sdk_py39_64.XMID_StoreActiveClockCorrection
XMID_StoreActiveClockCorrectionAck = _movelladot_pc_sdk_py39_64.XMID_StoreActiveClockCorrectionAck
XMID_ReqFilterSettings = _movelladot_pc_sdk_py39_64.XMID_ReqFilterSettings
XMID_ReqFilterSettingsAck = _movelladot_pc_sdk_py39_64.XMID_ReqFilterSettingsAck
XMID_SetFilterSettings = _movelladot_pc_sdk_py39_64.XMID_SetFilterSettings
XMID_SetFilterSettingsAck = _movelladot_pc_sdk_py39_64.XMID_SetFilterSettingsAck
XMID_ReqAmd = _movelladot_pc_sdk_py39_64.XMID_ReqAmd
XMID_ReqAmdAck = _movelladot_pc_sdk_py39_64.XMID_ReqAmdAck
XMID_SetAmd = _movelladot_pc_sdk_py39_64.XMID_SetAmd
XMID_SetAmdAck = _movelladot_pc_sdk_py39_64.XMID_SetAmdAck
XMID_ResetOrientation = _movelladot_pc_sdk_py39_64.XMID_ResetOrientation
XMID_ResetOrientationAck = _movelladot_pc_sdk_py39_64.XMID_ResetOrientationAck
XMID_ReqGnssStatus = _movelladot_pc_sdk_py39_64.XMID_ReqGnssStatus
XMID_GnssStatus = _movelladot_pc_sdk_py39_64.XMID_GnssStatus
XMID_AdjustUtcTime = _movelladot_pc_sdk_py39_64.XMID_AdjustUtcTime
XMID_AdjustUtcTimeAck = _movelladot_pc_sdk_py39_64.XMID_AdjustUtcTimeAck
XMID_ReqAssemblyId = _movelladot_pc_sdk_py39_64.XMID_ReqAssemblyId
XMID_SetAssemblyId = _movelladot_pc_sdk_py39_64.XMID_SetAssemblyId
XMID_AssemblyId = _movelladot_pc_sdk_py39_64.XMID_AssemblyId
XMID_SetAssemblyIdAck = _movelladot_pc_sdk_py39_64.XMID_SetAssemblyIdAck
XMID_ReqGnssReceiverSettings = _movelladot_pc_sdk_py39_64.XMID_ReqGnssReceiverSettings
XMID_ReqGnssReceiverSettingsAck = _movelladot_pc_sdk_py39_64.XMID_ReqGnssReceiverSettingsAck
XMID_SetGnssReceiverSettings = _movelladot_pc_sdk_py39_64.XMID_SetGnssReceiverSettings
XMID_SetGnssReceiverSettingsAck = _movelladot_pc_sdk_py39_64.XMID_SetGnssReceiverSettingsAck
XMID_ReqAccessControlList = _movelladot_pc_sdk_py39_64.XMID_ReqAccessControlList
XMID_AccessControlList = _movelladot_pc_sdk_py39_64.XMID_AccessControlList
XMID_SetAccessControlList = _movelladot_pc_sdk_py39_64.XMID_SetAccessControlList
XMID_SetAccessControlListAck = _movelladot_pc_sdk_py39_64.XMID_SetAccessControlListAck
XMID_ScanChannels = _movelladot_pc_sdk_py39_64.XMID_ScanChannels
XMID_ScanChannelsAck = _movelladot_pc_sdk_py39_64.XMID_ScanChannelsAck
XMID_EnableMaster = _movelladot_pc_sdk_py39_64.XMID_EnableMaster
XMID_EnableMasterAck = _movelladot_pc_sdk_py39_64.XMID_EnableMasterAck
XMID_DisableMaster = _movelladot_pc_sdk_py39_64.XMID_DisableMaster
XMID_DisableMasterAck = _movelladot_pc_sdk_py39_64.XMID_DisableMasterAck
XMID_ReqRadioChannel = _movelladot_pc_sdk_py39_64.XMID_ReqRadioChannel
XMID_ReqRadioChannelAck = _movelladot_pc_sdk_py39_64.XMID_ReqRadioChannelAck
XMID_SetClientPriority = _movelladot_pc_sdk_py39_64.XMID_SetClientPriority
XMID_SetClientPriorityAck = _movelladot_pc_sdk_py39_64.XMID_SetClientPriorityAck
XMID_ReqClientPriority = _movelladot_pc_sdk_py39_64.XMID_ReqClientPriority
XMID_ReqClientPriorityAck = _movelladot_pc_sdk_py39_64.XMID_ReqClientPriorityAck
XMID_SetWirelessConfig = _movelladot_pc_sdk_py39_64.XMID_SetWirelessConfig
XMID_SetWirelessConfigAck = _movelladot_pc_sdk_py39_64.XMID_SetWirelessConfigAck
XMID_ReqWirelessConfig = _movelladot_pc_sdk_py39_64.XMID_ReqWirelessConfig
XMID_ReqWirelessConfigAck = _movelladot_pc_sdk_py39_64.XMID_ReqWirelessConfigAck
XMID_UpdateBias = _movelladot_pc_sdk_py39_64.XMID_UpdateBias
XMID_UpdateBiasAck = _movelladot_pc_sdk_py39_64.XMID_UpdateBiasAck
XMID_ToggleIoPins = _movelladot_pc_sdk_py39_64.XMID_ToggleIoPins
XMID_ToggleIoPinsAck = _movelladot_pc_sdk_py39_64.XMID_ToggleIoPinsAck
XMID_GotoOperational = _movelladot_pc_sdk_py39_64.XMID_GotoOperational
XMID_GotoOperationalAck = _movelladot_pc_sdk_py39_64.XMID_GotoOperationalAck
XMID_SetTransportMode = _movelladot_pc_sdk_py39_64.XMID_SetTransportMode
XMID_SetTransportModeAck = _movelladot_pc_sdk_py39_64.XMID_SetTransportModeAck
XMID_ReqTransportMode = _movelladot_pc_sdk_py39_64.XMID_ReqTransportMode
XMID_ReqTransportModeAck = _movelladot_pc_sdk_py39_64.XMID_ReqTransportModeAck
XMID_AcceptMtw = _movelladot_pc_sdk_py39_64.XMID_AcceptMtw
XMID_AcceptMtwAck = _movelladot_pc_sdk_py39_64.XMID_AcceptMtwAck
XMID_RejectMtw = _movelladot_pc_sdk_py39_64.XMID_RejectMtw
XMID_RejectMtwAck = _movelladot_pc_sdk_py39_64.XMID_RejectMtwAck
XMID_InfoRequest = _movelladot_pc_sdk_py39_64.XMID_InfoRequest
XMID_InfoRequestAck = _movelladot_pc_sdk_py39_64.XMID_InfoRequestAck
XMID_ReqFrameRates = _movelladot_pc_sdk_py39_64.XMID_ReqFrameRates
XMID_ReqFrameRatesAck = _movelladot_pc_sdk_py39_64.XMID_ReqFrameRatesAck
XMID_StartRecording = _movelladot_pc_sdk_py39_64.XMID_StartRecording
XMID_StartRecordingAck = _movelladot_pc_sdk_py39_64.XMID_StartRecordingAck
XMID_StopRecording = _movelladot_pc_sdk_py39_64.XMID_StopRecording
XMID_StopRecordingAck = _movelladot_pc_sdk_py39_64.XMID_StopRecordingAck
XMID_ReqOutputConfiguration = _movelladot_pc_sdk_py39_64.XMID_ReqOutputConfiguration
XMID_ReqOutputConfigurationAck = _movelladot_pc_sdk_py39_64.XMID_ReqOutputConfigurationAck
XMID_SetOutputConfiguration = _movelladot_pc_sdk_py39_64.XMID_SetOutputConfiguration
XMID_SetOutputConfigurationAck = _movelladot_pc_sdk_py39_64.XMID_SetOutputConfigurationAck
XMID_ReqOutputMode = _movelladot_pc_sdk_py39_64.XMID_ReqOutputMode
XMID_ReqOutputModeAck = _movelladot_pc_sdk_py39_64.XMID_ReqOutputModeAck
XMID_SetOutputMode = _movelladot_pc_sdk_py39_64.XMID_SetOutputMode
XMID_SetOutputModeAck = _movelladot_pc_sdk_py39_64.XMID_SetOutputModeAck
XMID_ReqOutputSettings = _movelladot_pc_sdk_py39_64.XMID_ReqOutputSettings
XMID_ReqOutputSettingsAck = _movelladot_pc_sdk_py39_64.XMID_ReqOutputSettingsAck
XMID_SetOutputSettings = _movelladot_pc_sdk_py39_64.XMID_SetOutputSettings
XMID_SetOutputSettingsAck = _movelladot_pc_sdk_py39_64.XMID_SetOutputSettingsAck
XMID_ReqOutputSkipFactor = _movelladot_pc_sdk_py39_64.XMID_ReqOutputSkipFactor
XMID_ReqOutputSkipFactorAck = _movelladot_pc_sdk_py39_64.XMID_ReqOutputSkipFactorAck
XMID_SetOutputSkipFactor = _movelladot_pc_sdk_py39_64.XMID_SetOutputSkipFactor
XMID_SetOutputSkipFactorAck = _movelladot_pc_sdk_py39_64.XMID_SetOutputSkipFactorAck
XMID_SetInitialHeading = _movelladot_pc_sdk_py39_64.XMID_SetInitialHeading
XMID_SetInitialHeadingAck = _movelladot_pc_sdk_py39_64.XMID_SetInitialHeadingAck
XMID_ReqErrorMode = _movelladot_pc_sdk_py39_64.XMID_ReqErrorMode
XMID_ReqErrorModeAck = _movelladot_pc_sdk_py39_64.XMID_ReqErrorModeAck
XMID_SetErrorMode = _movelladot_pc_sdk_py39_64.XMID_SetErrorMode
XMID_SetErrorModeAck = _movelladot_pc_sdk_py39_64.XMID_SetErrorModeAck
XMID_ReqTransmitDelay = _movelladot_pc_sdk_py39_64.XMID_ReqTransmitDelay
XMID_ReqTransmitDelayAck = _movelladot_pc_sdk_py39_64.XMID_ReqTransmitDelayAck
XMID_SetTransmitDelay = _movelladot_pc_sdk_py39_64.XMID_SetTransmitDelay
XMID_SetTransmitDelayAck = _movelladot_pc_sdk_py39_64.XMID_SetTransmitDelayAck
XMID_SetMfmResults = _movelladot_pc_sdk_py39_64.XMID_SetMfmResults
XMID_SetMfmResultsAck = _movelladot_pc_sdk_py39_64.XMID_SetMfmResultsAck
XMID_ReqObjectAlignment = _movelladot_pc_sdk_py39_64.XMID_ReqObjectAlignment
XMID_ReqObjectAlignmentAck = _movelladot_pc_sdk_py39_64.XMID_ReqObjectAlignmentAck
XMID_SetObjectAlignment = _movelladot_pc_sdk_py39_64.XMID_SetObjectAlignment
XMID_SetObjectAlignmentAck = _movelladot_pc_sdk_py39_64.XMID_SetObjectAlignmentAck
XMID_ForwardGnssData = _movelladot_pc_sdk_py39_64.XMID_ForwardGnssData
XMID_ForwardGnssDataAck = _movelladot_pc_sdk_py39_64.XMID_ForwardGnssDataAck
XMID_ReqCanConfig = _movelladot_pc_sdk_py39_64.XMID_ReqCanConfig
XMID_SetCanConfig = _movelladot_pc_sdk_py39_64.XMID_SetCanConfig
XMID_CanConfig = _movelladot_pc_sdk_py39_64.XMID_CanConfig
XMID_SetCanConfigAck = _movelladot_pc_sdk_py39_64.XMID_SetCanConfigAck
XMID_ReqCanOutputConfig = _movelladot_pc_sdk_py39_64.XMID_ReqCanOutputConfig
XMID_SetCanOutputConfig = _movelladot_pc_sdk_py39_64.XMID_SetCanOutputConfig
XMID_CanOutputConfig = _movelladot_pc_sdk_py39_64.XMID_CanOutputConfig
XMID_SetCanOutputConfigAck = _movelladot_pc_sdk_py39_64.XMID_SetCanOutputConfigAck
XMID_ReqAlignmentRotation = _movelladot_pc_sdk_py39_64.XMID_ReqAlignmentRotation
XMID_ReqAlignmentRotationAck = _movelladot_pc_sdk_py39_64.XMID_ReqAlignmentRotationAck
XMID_SetAlignmentRotation = _movelladot_pc_sdk_py39_64.XMID_SetAlignmentRotation
XMID_SetAlignmentRotationAck = _movelladot_pc_sdk_py39_64.XMID_SetAlignmentRotationAck
XMID_ExtendedMessageID = _movelladot_pc_sdk_py39_64.XMID_ExtendedMessageID
XMID_SetDeviceIdContext = _movelladot_pc_sdk_py39_64.XMID_SetDeviceIdContext
XMID_SetDeviceIdContextAck = _movelladot_pc_sdk_py39_64.XMID_SetDeviceIdContextAck
XMID_SetLogLevel = _movelladot_pc_sdk_py39_64.XMID_SetLogLevel
XMID_SetLogLevelAck = _movelladot_pc_sdk_py39_64.XMID_SetLogLevelAck
XMID_Log = _movelladot_pc_sdk_py39_64.XMID_Log
XMID_Reserved = _movelladot_pc_sdk_py39_64.XMID_Reserved
XMID_SetInternalOptions = _movelladot_pc_sdk_py39_64.XMID_SetInternalOptions
XMID_SetInternalOptionsAck = _movelladot_pc_sdk_py39_64.XMID_SetInternalOptionsAck
XRV_OK = _movelladot_pc_sdk_py39_64.XRV_OK
XRV_NOBUS = _movelladot_pc_sdk_py39_64.XRV_NOBUS
XRV_BUSNOTREADY = _movelladot_pc_sdk_py39_64.XRV_BUSNOTREADY
XRV_INVALIDPERIOD = _movelladot_pc_sdk_py39_64.XRV_INVALIDPERIOD
XRV_INVALIDMSG = _movelladot_pc_sdk_py39_64.XRV_INVALIDMSG
XRV_INITBUSFAIL1 = _movelladot_pc_sdk_py39_64.XRV_INITBUSFAIL1
XRV_INITBUSFAIL2 = _movelladot_pc_sdk_py39_64.XRV_INITBUSFAIL2
XRV_INITBUSFAIL3 = _movelladot_pc_sdk_py39_64.XRV_INITBUSFAIL3
XRV_SETBIDFAIL1 = _movelladot_pc_sdk_py39_64.XRV_SETBIDFAIL1
XRV_SETBIDFAIL2 = _movelladot_pc_sdk_py39_64.XRV_SETBIDFAIL2
XRV_MEASUREMENTFAIL1 = _movelladot_pc_sdk_py39_64.XRV_MEASUREMENTFAIL1
XRV_MEASUREMENTFAIL2 = _movelladot_pc_sdk_py39_64.XRV_MEASUREMENTFAIL2
XRV_MEASUREMENTFAIL3 = _movelladot_pc_sdk_py39_64.XRV_MEASUREMENTFAIL3
XRV_MEASUREMENTFAIL4 = _movelladot_pc_sdk_py39_64.XRV_MEASUREMENTFAIL4
XRV_MEASUREMENTFAIL5 = _movelladot_pc_sdk_py39_64.XRV_MEASUREMENTFAIL5
XRV_MEASUREMENTFAIL6 = _movelladot_pc_sdk_py39_64.XRV_MEASUREMENTFAIL6
XRV_TIMEROVERFLOW = _movelladot_pc_sdk_py39_64.XRV_TIMEROVERFLOW
XRV_BAUDRATEINVALID = _movelladot_pc_sdk_py39_64.XRV_BAUDRATEINVALID
XRV_INVALIDPARAM = _movelladot_pc_sdk_py39_64.XRV_INVALIDPARAM
XRV_MEASUREMENTFAIL7 = _movelladot_pc_sdk_py39_64.XRV_MEASUREMENTFAIL7
XRV_MEASUREMENTFAIL8 = _movelladot_pc_sdk_py39_64.XRV_MEASUREMENTFAIL8
XRV_WIRELESSFAIL = _movelladot_pc_sdk_py39_64.XRV_WIRELESSFAIL
XRV_DEVICEERROR = _movelladot_pc_sdk_py39_64.XRV_DEVICEERROR
XRV_DATAOVERFLOW = _movelladot_pc_sdk_py39_64.XRV_DATAOVERFLOW
XRV_BUFFEROVERFLOW = _movelladot_pc_sdk_py39_64.XRV_BUFFEROVERFLOW
XRV_EXTTRIGGERERROR = _movelladot_pc_sdk_py39_64.XRV_EXTTRIGGERERROR
XRV_SAMPLESTREAMERROR = _movelladot_pc_sdk_py39_64.XRV_SAMPLESTREAMERROR
XRV_POWER_DIP = _movelladot_pc_sdk_py39_64.XRV_POWER_DIP
XRV_POWER_OVERCURRENT = _movelladot_pc_sdk_py39_64.XRV_POWER_OVERCURRENT
XRV_OVERHEATING = _movelladot_pc_sdk_py39_64.XRV_OVERHEATING
XRV_BATTERYLOW = _movelladot_pc_sdk_py39_64.XRV_BATTERYLOW
XRV_INVALIDFILTERPROFILE = _movelladot_pc_sdk_py39_64.XRV_INVALIDFILTERPROFILE
XRV_INVALIDSTOREDSETTINGS = _movelladot_pc_sdk_py39_64.XRV_INVALIDSTOREDSETTINGS
XRV_ACCESSDENIED = _movelladot_pc_sdk_py39_64.XRV_ACCESSDENIED
XRV_FILEERROR = _movelladot_pc_sdk_py39_64.XRV_FILEERROR
XRV_OUTPUTCONFIGERROR = _movelladot_pc_sdk_py39_64.XRV_OUTPUTCONFIGERROR
XRV_FILE_SYSTEM_CORRUPT = _movelladot_pc_sdk_py39_64.XRV_FILE_SYSTEM_CORRUPT
XRV_BATTERY_SYSTEM_ERROR = _movelladot_pc_sdk_py39_64.XRV_BATTERY_SYSTEM_ERROR
XRV_ERROR = _movelladot_pc_sdk_py39_64.XRV_ERROR
XRV_NOTIMPLEMENTED = _movelladot_pc_sdk_py39_64.XRV_NOTIMPLEMENTED
XRV_TIMEOUT = _movelladot_pc_sdk_py39_64.XRV_TIMEOUT
XRV_TIMEOUTNODATA = _movelladot_pc_sdk_py39_64.XRV_TIMEOUTNODATA
XRV_CHECKSUMFAULT = _movelladot_pc_sdk_py39_64.XRV_CHECKSUMFAULT
XRV_OUTOFMEMORY = _movelladot_pc_sdk_py39_64.XRV_OUTOFMEMORY
XRV_NOTFOUND = _movelladot_pc_sdk_py39_64.XRV_NOTFOUND
XRV_UNEXPECTEDMSG = _movelladot_pc_sdk_py39_64.XRV_UNEXPECTEDMSG
XRV_INVALIDID = _movelladot_pc_sdk_py39_64.XRV_INVALIDID
XRV_INVALIDOPERATION = _movelladot_pc_sdk_py39_64.XRV_INVALIDOPERATION
XRV_INSUFFICIENTSPACE = _movelladot_pc_sdk_py39_64.XRV_INSUFFICIENTSPACE
XRV_INPUTCANNOTBEOPENED = _movelladot_pc_sdk_py39_64.XRV_INPUTCANNOTBEOPENED
XRV_OUTPUTCANNOTBEOPENED = _movelladot_pc_sdk_py39_64.XRV_OUTPUTCANNOTBEOPENED
XRV_ALREADYOPEN = _movelladot_pc_sdk_py39_64.XRV_ALREADYOPEN
XRV_ENDOFFILE = _movelladot_pc_sdk_py39_64.XRV_ENDOFFILE
XRV_COULDNOTREADSETTINGS = _movelladot_pc_sdk_py39_64.XRV_COULDNOTREADSETTINGS
XRV_NODATA = _movelladot_pc_sdk_py39_64.XRV_NODATA
XRV_READONLY = _movelladot_pc_sdk_py39_64.XRV_READONLY
XRV_NULLPTR = _movelladot_pc_sdk_py39_64.XRV_NULLPTR
XRV_INSUFFICIENTDATA = _movelladot_pc_sdk_py39_64.XRV_INSUFFICIENTDATA
XRV_BUSY = _movelladot_pc_sdk_py39_64.XRV_BUSY
XRV_INVALIDINSTANCE = _movelladot_pc_sdk_py39_64.XRV_INVALIDINSTANCE
XRV_DATACORRUPT = _movelladot_pc_sdk_py39_64.XRV_DATACORRUPT
XRV_READINITFAILED = _movelladot_pc_sdk_py39_64.XRV_READINITFAILED
XRV_NOXMFOUND = _movelladot_pc_sdk_py39_64.XRV_NOXMFOUND
XRV_DEVICECOUNTZERO = _movelladot_pc_sdk_py39_64.XRV_DEVICECOUNTZERO
XRV_MTLOCATIONINVALID = _movelladot_pc_sdk_py39_64.XRV_MTLOCATIONINVALID
XRV_INSUFFICIENTMTS = _movelladot_pc_sdk_py39_64.XRV_INSUFFICIENTMTS
XRV_INITFUSIONFAILED = _movelladot_pc_sdk_py39_64.XRV_INITFUSIONFAILED
XRV_OTHER = _movelladot_pc_sdk_py39_64.XRV_OTHER
XRV_NOFILEOPEN = _movelladot_pc_sdk_py39_64.XRV_NOFILEOPEN
XRV_NOPORTOPEN = _movelladot_pc_sdk_py39_64.XRV_NOPORTOPEN
XRV_NOFILEORPORTOPEN = _movelladot_pc_sdk_py39_64.XRV_NOFILEORPORTOPEN
XRV_PORTNOTFOUND = _movelladot_pc_sdk_py39_64.XRV_PORTNOTFOUND
XRV_INITPORTFAILED = _movelladot_pc_sdk_py39_64.XRV_INITPORTFAILED
XRV_CALIBRATIONFAILED = _movelladot_pc_sdk_py39_64.XRV_CALIBRATIONFAILED
XRV_CONFIGCHECKFAIL = _movelladot_pc_sdk_py39_64.XRV_CONFIGCHECKFAIL
XRV_ALREADYDONE = _movelladot_pc_sdk_py39_64.XRV_ALREADYDONE
XRV_SYNC_SINGLE_SLAVE = _movelladot_pc_sdk_py39_64.XRV_SYNC_SINGLE_SLAVE
XRV_SYNC_SECOND_MASTER = _movelladot_pc_sdk_py39_64.XRV_SYNC_SECOND_MASTER
XRV_SYNC_NO_SYNC = _movelladot_pc_sdk_py39_64.XRV_SYNC_NO_SYNC
XRV_SYNC_NO_MASTER = _movelladot_pc_sdk_py39_64.XRV_SYNC_NO_MASTER
XRV_SYNC_DATA_MISSING = _movelladot_pc_sdk_py39_64.XRV_SYNC_DATA_MISSING
XRV_VERSION_TOO_LOW = _movelladot_pc_sdk_py39_64.XRV_VERSION_TOO_LOW
XRV_VERSION_PROBLEM = _movelladot_pc_sdk_py39_64.XRV_VERSION_PROBLEM
XRV_ABORTED = _movelladot_pc_sdk_py39_64.XRV_ABORTED
XRV_UNSUPPORTED = _movelladot_pc_sdk_py39_64.XRV_UNSUPPORTED
XRV_PACKETCOUNTERMISSED = _movelladot_pc_sdk_py39_64.XRV_PACKETCOUNTERMISSED
XRV_MEASUREMENTFAILED = _movelladot_pc_sdk_py39_64.XRV_MEASUREMENTFAILED
XRV_STARTRECORDINGFAILED = _movelladot_pc_sdk_py39_64.XRV_STARTRECORDINGFAILED
XRV_STOPRECORDINGFAILED = _movelladot_pc_sdk_py39_64.XRV_STOPRECORDINGFAILED
XRV_RADIO_CHANNEL_IN_USE = _movelladot_pc_sdk_py39_64.XRV_RADIO_CHANNEL_IN_USE
XRV_UNEXPECTED_DISCONNECT = _movelladot_pc_sdk_py39_64.XRV_UNEXPECTED_DISCONNECT
XRV_TOO_MANY_CONNECTED_TRACKERS = _movelladot_pc_sdk_py39_64.XRV_TOO_MANY_CONNECTED_TRACKERS
XRV_GOTOCONFIGFAILED = _movelladot_pc_sdk_py39_64.XRV_GOTOCONFIGFAILED
XRV_OUTOFRANGE = _movelladot_pc_sdk_py39_64.XRV_OUTOFRANGE
XRV_BACKINRANGE = _movelladot_pc_sdk_py39_64.XRV_BACKINRANGE
XRV_EXPECTED_DISCONNECT = _movelladot_pc_sdk_py39_64.XRV_EXPECTED_DISCONNECT
XRV_RESTORE_COMMUNICATION_FAILED = _movelladot_pc_sdk_py39_64.XRV_RESTORE_COMMUNICATION_FAILED
XRV_RESTORE_COMMUNICATION_STOPPED = _movelladot_pc_sdk_py39_64.XRV_RESTORE_COMMUNICATION_STOPPED
XRV_EXPECTED_CONNECT = _movelladot_pc_sdk_py39_64.XRV_EXPECTED_CONNECT
XRV_IN_USE = _movelladot_pc_sdk_py39_64.XRV_IN_USE
XRV_PERFORMANCE_WARNING = _movelladot_pc_sdk_py39_64.XRV_PERFORMANCE_WARNING
XRV_PERFORMANCE_OK = _movelladot_pc_sdk_py39_64.XRV_PERFORMANCE_OK
XRV_DEVICEID_COLLISION = _movelladot_pc_sdk_py39_64.XRV_DEVICEID_COLLISION
XRV_SHUTTINGDOWN = _movelladot_pc_sdk_py39_64.XRV_SHUTTINGDOWN
XRV_GNSSCONFIGURATIONERROR = _movelladot_pc_sdk_py39_64.XRV_GNSSCONFIGURATIONERROR
XRV_GNSSCOMMTIMEOUT = _movelladot_pc_sdk_py39_64.XRV_GNSSCOMMTIMEOUT
XRV_GNSSERROR = _movelladot_pc_sdk_py39_64.XRV_GNSSERROR
XRV_DEVICE_NOT_CALIBRATED = _movelladot_pc_sdk_py39_64.XRV_DEVICE_NOT_CALIBRATED
XRV_GNSSCONNECTIONLOST = _movelladot_pc_sdk_py39_64.XRV_GNSSCONNECTIONLOST
XRV_GNSSLOWINPUTRATE = _movelladot_pc_sdk_py39_64.XRV_GNSSLOWINPUTRATE
XRV_GNSSINCOMPLETEDATASET = _movelladot_pc_sdk_py39_64.XRV_GNSSINCOMPLETEDATASET
XRV_BLUETOOTH_SCANNING_ERROR = _movelladot_pc_sdk_py39_64.XRV_BLUETOOTH_SCANNING_ERROR
XRV_FLASH_PROCESS_BUSY = _movelladot_pc_sdk_py39_64.XRV_FLASH_PROCESS_BUSY
XRV_FLASH_FULL = _movelladot_pc_sdk_py39_64.XRV_FLASH_FULL
XRV_INVALID_FLASHFORMAT = _movelladot_pc_sdk_py39_64.XRV_INVALID_FLASHFORMAT
XRV_SYNC_TOO_FEW_DEVICES = _movelladot_pc_sdk_py39_64.XRV_SYNC_TOO_FEW_DEVICES
XRV_SYNC_COULD_NOT_START = _movelladot_pc_sdk_py39_64.XRV_SYNC_COULD_NOT_START
XRV_SYNC_SETTINGS_MISMATCH = _movelladot_pc_sdk_py39_64.XRV_SYNC_SETTINGS_MISMATCH
XRV_SYNC_NO_START_ROOT = _movelladot_pc_sdk_py39_64.XRV_SYNC_NO_START_ROOT
XRV_SYNC_NO_START_SCANNER = _movelladot_pc_sdk_py39_64.XRV_SYNC_NO_START_SCANNER
XRV_SYNC_NO_RECONNECT = _movelladot_pc_sdk_py39_64.XRV_SYNC_NO_RECONNECT
XRV_SYNC_FAILED = _movelladot_pc_sdk_py39_64.XRV_SYNC_FAILED
XRV_SYNC_ROOT_NOT_FOUND = _movelladot_pc_sdk_py39_64.XRV_SYNC_ROOT_NOT_FOUND
XERR_Unknown = _movelladot_pc_sdk_py39_64.XERR_Unknown
XERR_ImcuTimeout = _movelladot_pc_sdk_py39_64.XERR_ImcuTimeout
XERR_ImcuSettingsInvalid = _movelladot_pc_sdk_py39_64.XERR_ImcuSettingsInvalid
XERR_ImcuSettingsFailure = _movelladot_pc_sdk_py39_64.XERR_ImcuSettingsFailure
XERR_ImcuEmtsWriteFailure = _movelladot_pc_sdk_py39_64.XERR_ImcuEmtsWriteFailure
XERR_ImcuEmtsReadFailure = _movelladot_pc_sdk_py39_64.XERR_ImcuEmtsReadFailure
XERR_DspCrashed = _movelladot_pc_sdk_py39_64.XERR_DspCrashed
XERR_DspBootingTimeout = _movelladot_pc_sdk_py39_64.XERR_DspBootingTimeout
XERR_DspSettingsInvalid = _movelladot_pc_sdk_py39_64.XERR_DspSettingsInvalid

def XsResultValueToString(result: "XsResultValue") -> "char const *":
    return _movelladot_pc_sdk_py39_64.XsResultValueToString(result)
XS_PREAMBLE = _movelladot_pc_sdk_py39_64.XS_PREAMBLE
XS_EXTLENCODE = _movelladot_pc_sdk_py39_64.XS_EXTLENCODE
XS_LEN_MSGHEADER = _movelladot_pc_sdk_py39_64.XS_LEN_MSGHEADER
XS_LEN_MSGEXTHEADER = _movelladot_pc_sdk_py39_64.XS_LEN_MSGEXTHEADER
XS_LEN_MSGHEADERCS = _movelladot_pc_sdk_py39_64.XS_LEN_MSGHEADERCS
XS_LEN_MSGEXTHEADERCS = _movelladot_pc_sdk_py39_64.XS_LEN_MSGEXTHEADERCS
XS_LEN_CHECKSUM = _movelladot_pc_sdk_py39_64.XS_LEN_CHECKSUM
XS_LEN_UNSIGSHORT = _movelladot_pc_sdk_py39_64.XS_LEN_UNSIGSHORT
XS_LEN_UNSIGINT = _movelladot_pc_sdk_py39_64.XS_LEN_UNSIGINT
XS_LEN_FLOAT = _movelladot_pc_sdk_py39_64.XS_LEN_FLOAT
XS_MAXDATALEN = _movelladot_pc_sdk_py39_64.XS_MAXDATALEN
XS_MAXSHORTDATALEN = _movelladot_pc_sdk_py39_64.XS_MAXSHORTDATALEN
XS_MAXMSGLEN = _movelladot_pc_sdk_py39_64.XS_MAXMSGLEN
XS_MAXSHORTMSGLEN = _movelladot_pc_sdk_py39_64.XS_MAXSHORTMSGLEN
XS_MAXGARBAGE = _movelladot_pc_sdk_py39_64.XS_MAXGARBAGE
class XsMessageHeader(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_preamble = property(_movelladot_pc_sdk_py39_64.XsMessageHeader_m_preamble_get, _movelladot_pc_sdk_py39_64.XsMessageHeader_m_preamble_set)
    m_busId = property(_movelladot_pc_sdk_py39_64.XsMessageHeader_m_busId_get, _movelladot_pc_sdk_py39_64.XsMessageHeader_m_busId_set)
    m_messageId = property(_movelladot_pc_sdk_py39_64.XsMessageHeader_m_messageId_get, _movelladot_pc_sdk_py39_64.XsMessageHeader_m_messageId_set)
    m_length = property(_movelladot_pc_sdk_py39_64.XsMessageHeader_m_length_get, _movelladot_pc_sdk_py39_64.XsMessageHeader_m_length_set)
    m_datlen = property(_movelladot_pc_sdk_py39_64.XsMessageHeader_m_datlen_get, _movelladot_pc_sdk_py39_64.XsMessageHeader_m_datlen_set)

    def __init__(self):
        _movelladot_pc_sdk_py39_64.XsMessageHeader_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsMessageHeader())
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsMessageHeader

# Register XsMessageHeader in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsMessageHeader_swigregister(XsMessageHeader)

class XsMessage(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsMessage_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsMessage(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsMessage

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_clear(self)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsMessage_empty(self)

    def getBusId(self) -> "uint8_t":
        return _movelladot_pc_sdk_py39_64.XsMessage_getBusId(self)

    def getDataBuffer(self, offset: "XsSize"=0) -> "uint8_t const *":
        return _movelladot_pc_sdk_py39_64.XsMessage_getDataBuffer(self, offset)

    def getDataByte(self, offset: "XsSize"=0) -> "uint8_t":
        return _movelladot_pc_sdk_py39_64.XsMessage_getDataByte(self, offset)

    def getDataDouble(self, offset: "XsSize"=0) -> "double":
        return _movelladot_pc_sdk_py39_64.XsMessage_getDataDouble(self, offset)

    def getDataFloat(self, offset: "XsSize"=0) -> "float":
        return _movelladot_pc_sdk_py39_64.XsMessage_getDataFloat(self, offset)

    def getDataF1220(self, offset: "XsSize"=0) -> "double":
        return _movelladot_pc_sdk_py39_64.XsMessage_getDataF1220(self, offset)

    def getDataFP1632(self, offset: "XsSize"=0) -> "double":
        return _movelladot_pc_sdk_py39_64.XsMessage_getDataFP1632(self, offset)

    def getDataLong(self, offset: "XsSize"=0) -> "uint32_t":
        return _movelladot_pc_sdk_py39_64.XsMessage_getDataLong(self, offset)

    def getDataLongLong(self, offset: "XsSize"=0) -> "uint64_t":
        return _movelladot_pc_sdk_py39_64.XsMessage_getDataLongLong(self, offset)

    def getDataShort(self, offset: "XsSize"=0) -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsMessage_getDataShort(self, offset)

    def getDataSize(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsMessage_getDataSize(self)

    def getMessageId(self) -> "XsXbusMessageId":
        return _movelladot_pc_sdk_py39_64.XsMessage_getMessageId(self)

    def toResultValue(self) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsMessage_toResultValue(self)

    def getMessageStart(self) -> "uint8_t const *":
        return _movelladot_pc_sdk_py39_64.XsMessage_getMessageStart(self)

    def getTotalMessageSize(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsMessage_getTotalMessageSize(self)

    def isChecksumOk(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsMessage_isChecksumOk(self)

    def loadFromString(self, src: "uint8_t const *", msgSize: "XsSize") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsMessage_loadFromString(self, src, msgSize)

    def recomputeChecksum(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_recomputeChecksum(self)

    def resizeData(self, newSize: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_resizeData(self, newSize)

    def setBusId(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_setBusId(self, *args)

    def setDataBuffer(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_setDataBuffer(self, *args)

    def setDataByte(self, value: "uint8_t const", offset: "XsSize"=0) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_setDataByte(self, value, offset)

    def setDataDouble(self, value: "double const", offset: "XsSize"=0) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_setDataDouble(self, value, offset)

    def setDataFloat(self, value: "float const", offset: "XsSize"=0) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_setDataFloat(self, value, offset)

    def setDataF1220(self, value: "double const", offset: "XsSize"=0) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_setDataF1220(self, value, offset)

    def setDataFP1632(self, value: "double const", offset: "XsSize"=0) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_setDataFP1632(self, value, offset)

    def setDataLong(self, value: "uint32_t const", offset: "XsSize"=0) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_setDataLong(self, value, offset)

    def setDataLongLong(self, value: "uint64_t const", offset: "XsSize"=0) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_setDataLongLong(self, value, offset)

    def setDataShort(self, value: "uint16_t const", offset: "XsSize"=0) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_setDataShort(self, value, offset)

    def setMessageId(self, msgId: "XsXbusMessageId const") -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_setMessageId(self, msgId)

    def __assign__(self, src: "XsMessage") -> "XsMessage &":
        return _movelladot_pc_sdk_py39_64.XsMessage___assign__(self, src)

    def deleteData(self, count: "XsSize", offset: "XsSize"=0) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_deleteData(self, count, offset)

    def insertData(self, count: "XsSize", offset: "XsSize"=0) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_insertData(self, count, offset)

    @staticmethod
    def getFPValueSize(id: "XsDataIdentifier") -> "uint8_t":
        return _movelladot_pc_sdk_py39_64.XsMessage_getFPValueSize(id)

    def getDataFPValue(self, *args) -> "double":
        return _movelladot_pc_sdk_py39_64.XsMessage_getDataFPValue(self, *args)

    def setDataFPValue(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMessage_setDataFPValue(self, *args)

    def __eq__(self, other: "XsMessage") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsMessage___eq__(self, other)

    def rawMessage(self) -> "XsByteArray const &":
        return _movelladot_pc_sdk_py39_64.XsMessage_rawMessage(self)

    def toHexString(self, maxBytes: "XsSize"=0) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsMessage_toHexString(self, maxBytes)

# Register XsMessage in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsMessage_swigregister(XsMessage)

def XsMessage_getFPValueSize(id: "XsDataIdentifier") -> "uint8_t":
    return _movelladot_pc_sdk_py39_64.XsMessage_getFPValueSize(id)

class XsTimeInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_nano = property(_movelladot_pc_sdk_py39_64.XsTimeInfo_m_nano_get, _movelladot_pc_sdk_py39_64.XsTimeInfo_m_nano_set)
    m_year = property(_movelladot_pc_sdk_py39_64.XsTimeInfo_m_year_get, _movelladot_pc_sdk_py39_64.XsTimeInfo_m_year_set)
    m_month = property(_movelladot_pc_sdk_py39_64.XsTimeInfo_m_month_get, _movelladot_pc_sdk_py39_64.XsTimeInfo_m_month_set)
    m_day = property(_movelladot_pc_sdk_py39_64.XsTimeInfo_m_day_get, _movelladot_pc_sdk_py39_64.XsTimeInfo_m_day_set)
    m_hour = property(_movelladot_pc_sdk_py39_64.XsTimeInfo_m_hour_get, _movelladot_pc_sdk_py39_64.XsTimeInfo_m_hour_set)
    m_minute = property(_movelladot_pc_sdk_py39_64.XsTimeInfo_m_minute_get, _movelladot_pc_sdk_py39_64.XsTimeInfo_m_minute_set)
    m_second = property(_movelladot_pc_sdk_py39_64.XsTimeInfo_m_second_get, _movelladot_pc_sdk_py39_64.XsTimeInfo_m_second_set)
    m_valid = property(_movelladot_pc_sdk_py39_64.XsTimeInfo_m_valid_get, _movelladot_pc_sdk_py39_64.XsTimeInfo_m_valid_set)
    m_utcOffset = property(_movelladot_pc_sdk_py39_64.XsTimeInfo_m_utcOffset_get, _movelladot_pc_sdk_py39_64.XsTimeInfo_m_utcOffset_set)

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsTimeInfo_clear(self)

    @staticmethod
    def currentTime() -> "XsTimeInfo":
        return _movelladot_pc_sdk_py39_64.XsTimeInfo_currentTime()

    @staticmethod
    def currentLocalTime() -> "XsTimeInfo":
        return _movelladot_pc_sdk_py39_64.XsTimeInfo_currentLocalTime()

    def __eq__(self, other: "XsTimeInfo") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsTimeInfo___eq__(self, other)

    def makeUtc(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsTimeInfo_makeUtc(self)

    def __str__(self) -> "std::string":
        return _movelladot_pc_sdk_py39_64.XsTimeInfo___str__(self)

    def __init__(self):
        _movelladot_pc_sdk_py39_64.XsTimeInfo_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsTimeInfo())
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsTimeInfo

# Register XsTimeInfo in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsTimeInfo_swigregister(XsTimeInfo)

def XsTimeInfo_currentTime() -> "XsTimeInfo":
    return _movelladot_pc_sdk_py39_64.XsTimeInfo_currentTime()

def XsTimeInfo_currentLocalTime() -> "XsTimeInfo":
    return _movelladot_pc_sdk_py39_64.XsTimeInfo_currentLocalTime()

class XsTimeStamp(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsTimeStamp_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsTimeStamp(*args))

    def toTimeInfo(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_toTimeInfo(self, *args)

    def toXsString(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_toXsString(self)

    def __assign__(self, other: "XsTimeStamp") -> "XsTimeStamp &":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___assign__(self, other)

    def msTime(self) -> "int64_t":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_msTime(self)

    def setMsTime(self, t: "int64_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_setMsTime(self, t)

    def timeOfDay(self) -> "double":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_timeOfDay(self)

    def msTimeOfDay(self) -> "int64_t":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_msTimeOfDay(self)

    def secTime(self) -> "double":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_secTime(self)

    def setSecTime(self, t: "double") -> "void":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_setSecTime(self, t)

    def __add__(self, other: "XsTimeStamp") -> "XsTimeStamp":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___add__(self, other)

    def __sub__(self, other: "XsTimeStamp") -> "XsTimeStamp":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___sub__(self, other)

    def __iadd__(self, other: "XsTimeStamp") -> "XsTimeStamp &":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___iadd__(self, other)

    def __isub__(self, d: "XsTimeStamp") -> "XsTimeStamp &":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___isub__(self, d)

    def __lt__(self, *args) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___lt__(self, *args)

    def __le__(self, *args) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___le__(self, *args)

    def __eq__(self, *args) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___eq__(self, *args)

    def __gt__(self, *args) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___gt__(self, *args)

    def __ge__(self, *args) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___ge__(self, *args)

    def __ne__(self, *args) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___ne__(self, *args)

    def secondTime(self) -> "int64_t":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_secondTime(self)

    def milliSecondPart(self) -> "int32_t":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_milliSecondPart(self)

    def secondPart(self) -> "int32_t":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_secondPart(self)

    def minutePart(self) -> "int32_t":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_minutePart(self)

    def hourPart(self) -> "int32_t":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_hourPart(self)

    @staticmethod
    def now() -> "XsTimeStamp":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_now()

    @staticmethod
    def nowMs() -> "int64_t":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_nowMs()

    def elapsedToNow(self) -> "int64_t":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_elapsedToNow(self)

    @staticmethod
    def maxValue() -> "XsTimeStamp":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_maxValue()

    def __preincr__(self) -> "XsTimeStamp &":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___preincr__(self)

    def __postincr__(self, arg2: "int") -> "XsTimeStamp":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___postincr__(self, arg2)

    def __predecr__(self) -> "XsTimeStamp &":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___predecr__(self)

    def __postdecr__(self, arg2: "int") -> "XsTimeStamp":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp___postdecr__(self, arg2)

    def utcToLocalTime(self, *args) -> "XsTimeStamp":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_utcToLocalTime(self, *args)

    def localToUtcTime(self, *args) -> "XsTimeStamp":
        return _movelladot_pc_sdk_py39_64.XsTimeStamp_localToUtcTime(self, *args)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsTimeStamp

# Register XsTimeStamp in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsTimeStamp_swigregister(XsTimeStamp)

def XsTimeStamp_now() -> "XsTimeStamp":
    return _movelladot_pc_sdk_py39_64.XsTimeStamp_now()

def XsTimeStamp_nowMs() -> "int64_t":
    return _movelladot_pc_sdk_py39_64.XsTimeStamp_nowMs()

def XsTimeStamp_maxValue() -> "XsTimeStamp":
    return _movelladot_pc_sdk_py39_64.XsTimeStamp_maxValue()

class XsUShortVector(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsUShortVector_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsUShortVector(*args))

    def __assign__(self, other: "XsUShortVector") -> "XsUShortVector &":
        return _movelladot_pc_sdk_py39_64.XsUShortVector___assign__(self, other)

    def __eq__(self, other: "XsUShortVector") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsUShortVector___eq__(self, other)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsUShortVector_size(self)

    def data(self) -> "unsigned short const *":
        return _movelladot_pc_sdk_py39_64.XsUShortVector_data(self)

    def __getitem__(self, index: "XsSize") -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsUShortVector___getitem__(self, index)

    def get(self, index: "XsSize") -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsUShortVector_get(self, index)

    def __setitem__(self, index: "XsSize", val: "uint16_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsUShortVector___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "uint16_t") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64.XsUShortVector_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsUShortVector___len__(self)

    def __str__(self) -> "std::string":
        return _movelladot_pc_sdk_py39_64.XsUShortVector___str__(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsUShortVector

# Register XsUShortVector in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsUShortVector_swigregister(XsUShortVector)

class XsScrData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_acc = property(_movelladot_pc_sdk_py39_64.XsScrData_m_acc_get, _movelladot_pc_sdk_py39_64.XsScrData_m_acc_set)
    m_gyr = property(_movelladot_pc_sdk_py39_64.XsScrData_m_gyr_get, _movelladot_pc_sdk_py39_64.XsScrData_m_gyr_set)
    m_mag = property(_movelladot_pc_sdk_py39_64.XsScrData_m_mag_get, _movelladot_pc_sdk_py39_64.XsScrData_m_mag_set)
    m_temp = property(_movelladot_pc_sdk_py39_64.XsScrData_m_temp_get, _movelladot_pc_sdk_py39_64.XsScrData_m_temp_set)

    def __init__(self):
        _movelladot_pc_sdk_py39_64.XsScrData_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsScrData())
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsScrData

# Register XsScrData in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsScrData_swigregister(XsScrData)

class XsPressure(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsPressure_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsPressure(*args))

    def __assign__(self, other: "XsPressure") -> "XsPressure const &":
        return _movelladot_pc_sdk_py39_64.XsPressure___assign__(self, other)

    def __eq__(self, other: "XsPressure") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsPressure___eq__(self, other)

    def __ne__(self, other: "XsPressure") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsPressure___ne__(self, other)
    m_pressure = property(_movelladot_pc_sdk_py39_64.XsPressure_m_pressure_get, _movelladot_pc_sdk_py39_64.XsPressure_m_pressure_set)
    m_pressureAge = property(_movelladot_pc_sdk_py39_64.XsPressure_m_pressureAge_get, _movelladot_pc_sdk_py39_64.XsPressure_m_pressureAge_set)

    def __str__(self) -> "std::string":
        return _movelladot_pc_sdk_py39_64.XsPressure___str__(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsPressure

# Register XsPressure in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsPressure_swigregister(XsPressure)

class XsQuaternion(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsQuaternion

    def __assign__(self, other: "XsQuaternion") -> "XsQuaternion &":
        return _movelladot_pc_sdk_py39_64.XsQuaternion___assign__(self, other)

    def assign(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_assign(self, *args)

    def data(self) -> "XsReal const *":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_data(self)

    def inverse(self) -> "XsQuaternion":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_inverse(self)

    def conjugate(self) -> "XsQuaternion":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_conjugate(self)

    def normalized(self) -> "XsQuaternion":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_normalized(self)

    def normalize(self) -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_normalize(self)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_empty(self)

    def fromEulerAngles(self, src: "XsEuler") -> "XsQuaternion &":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_fromEulerAngles(self, src)

    def fromRotationMatrix(self, ori: "XsMatrix") -> "XsQuaternion &":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_fromRotationMatrix(self, ori)

    @staticmethod
    def identity() -> "XsQuaternion const &":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_identity()

    def __imul__(self, other: "XsQuaternion") -> "void":
        return _movelladot_pc_sdk_py39_64.XsQuaternion___imul__(self, other)

    def multiply(self, a: "XsQuaternion", b: "XsQuaternion") -> "void":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_multiply(self, a, b)

    def w(self) -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_w(self)

    def x(self) -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_x(self)

    def y(self) -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_y(self)

    def z(self) -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_z(self)

    def swap(self, other: "XsQuaternion") -> "void":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_swap(self, other)

    def __eq__(self, other: "XsQuaternion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsQuaternion___eq__(self, other)

    def isEqual(self, other: "XsQuaternion", tolerance: "XsReal") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_isEqual(self, other, tolerance)

    def dotProduct(self, other: "XsQuaternion") -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_dotProduct(self, other)

    def __getitem__(self, index: "XsSize") -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsQuaternion___getitem__(self, index)

    def __setitem__(self, index: "XsSize", val: "XsReal") -> "void":
        return _movelladot_pc_sdk_py39_64.XsQuaternion___setitem__(self, index, val)

    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsQuaternion___len__(self)

    def toNdArray(self) -> "XsQuaternion":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_toNdArray(self)

    def toNdArrayRef(self) -> "XsQuaternion *":
        return _movelladot_pc_sdk_py39_64.XsQuaternion_toNdArrayRef(self)

    def __init__(self, *args):
    	self.this = _swigLib.xsQuaternion(*args)


    def __repr__(self):
    	return np.array_str(self.toNdArray())


# Register XsQuaternion in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsQuaternion_swigregister(XsQuaternion)

def XsQuaternion_identity() -> "XsQuaternion const &":
    return _movelladot_pc_sdk_py39_64.XsQuaternion_identity()

class XsSdiData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsSdiData_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsSdiData(*args))

    def __assign__(self, other: "XsSdiData") -> "XsSdiData const &":
        return _movelladot_pc_sdk_py39_64.XsSdiData___assign__(self, other)

    def zero(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsSdiData_zero(self)

    def orientationIncrement(self) -> "XsQuaternion const &":
        return _movelladot_pc_sdk_py39_64.XsSdiData_orientationIncrement(self)

    def setOrientationIncrement(self, dq: "XsQuaternion") -> "void":
        return _movelladot_pc_sdk_py39_64.XsSdiData_setOrientationIncrement(self, dq)

    def velocityIncrement(self) -> "XsVector3 const &":
        return _movelladot_pc_sdk_py39_64.XsSdiData_velocityIncrement(self)

    def setVelocityIncrement(self, dv: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsSdiData_setVelocityIncrement(self, dv)

    def __eq__(self, other: "XsSdiData") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSdiData___eq__(self, other)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsSdiData

# Register XsSdiData in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsSdiData_swigregister(XsSdiData)

class XsMatrix(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsMatrix

    def setSize(self, rows: "XsSize", cols: "XsSize", stride: "XsSize"=0) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMatrix_setSize(self, rows, cols, stride)

    def __assign__(self, other: "XsMatrix") -> "XsMatrix &":
        return _movelladot_pc_sdk_py39_64.XsMatrix___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsMatrix_empty(self)

    def setZero(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMatrix_setZero(self)

    def offset(self, row: "XsSize", column: "XsSize") -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsMatrix_offset(self, row, column)

    def __mul__(self, scalar: "XsReal") -> "XsMatrix":
        return _movelladot_pc_sdk_py39_64.XsMatrix___mul__(self, scalar)

    def fromQuaternion(self, quat: "XsQuaternion") -> "XsMatrix &":
        return _movelladot_pc_sdk_py39_64.XsMatrix_fromQuaternion(self, quat)

    def zero(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsMatrix_zero(self)

    def rows(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsMatrix_rows(self)

    def cols(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsMatrix_cols(self)

    def stride(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsMatrix_stride(self)

    def data(self) -> "XsReal const *":
        return _movelladot_pc_sdk_py39_64.XsMatrix_data(self)

    def __eq__(self, other: "XsMatrix") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsMatrix___eq__(self, other)

    def isEqual(self, other: "XsMatrix", tolerance: "XsReal") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsMatrix_isEqual(self, other, tolerance)

    def swap(self, b: "XsMatrix") -> "void":
        return _movelladot_pc_sdk_py39_64.XsMatrix_swap(self, b)

    def toNdArray(self) -> "XsMatrix":
        return _movelladot_pc_sdk_py39_64.XsMatrix_toNdArray(self)

    def toNdArrayRef(self) -> "XsMatrix *":
        return _movelladot_pc_sdk_py39_64.XsMatrix_toNdArrayRef(self)

    def __init__(self, *args):
    	self.this = _swigLib.xsMatrix(*args)


    def __repr__(self):
    	return np.array_str(self.toNdArray())


# Register XsMatrix in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsMatrix_swigregister(XsMatrix)

class XsEuler(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsEuler_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsEuler(*args))

    def __assign__(self, other: "XsEuler") -> "XsEuler &":
        return _movelladot_pc_sdk_py39_64.XsEuler___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsEuler_empty(self)

    def data(self) -> "XsReal const *":
        return _movelladot_pc_sdk_py39_64.XsEuler_data(self)

    def fromQuaternion(self, quat: "XsQuaternion") -> "XsEuler &":
        return _movelladot_pc_sdk_py39_64.XsEuler_fromQuaternion(self, quat)

    def __eq__(self, other: "XsEuler") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsEuler___eq__(self, other)

    def __ne__(self, other: "XsEuler") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsEuler___ne__(self, other)

    def roll(self) -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsEuler_roll(self)

    def pitch(self) -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsEuler_pitch(self)

    def yaw(self) -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsEuler_yaw(self)

    def x(self) -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsEuler_x(self)

    def y(self) -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsEuler_y(self)

    def z(self) -> "XsReal":
        return _movelladot_pc_sdk_py39_64.XsEuler_z(self)

    def isEqual(self, other: "XsEuler", tolerance: "XsReal") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsEuler_isEqual(self, other, tolerance)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsEuler

# Register XsEuler in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsEuler_swigregister(XsEuler)

GNSS_PVT_FLAGS_GNSS_FIX_NONE = _movelladot_pc_sdk_py39_64.GNSS_PVT_FLAGS_GNSS_FIX_NONE
GNSS_PVT_FLAGS_GNSS_FIX_SINGLE = _movelladot_pc_sdk_py39_64.GNSS_PVT_FLAGS_GNSS_FIX_SINGLE
GNSS_PVT_FLAGS_GNSS_FIX_DIFFERENTIAL = _movelladot_pc_sdk_py39_64.GNSS_PVT_FLAGS_GNSS_FIX_DIFFERENTIAL
GNSS_PVT_FLAGS_CARRIER_SOLUTION_NONE = _movelladot_pc_sdk_py39_64.GNSS_PVT_FLAGS_CARRIER_SOLUTION_NONE
GNSS_PVT_FLAGS_CARRIER_SOLUTION_FLOATING = _movelladot_pc_sdk_py39_64.GNSS_PVT_FLAGS_CARRIER_SOLUTION_FLOATING
GNSS_PVT_FLAGS_CARRIER_SOLUTION_FIXED = _movelladot_pc_sdk_py39_64.GNSS_PVT_FLAGS_CARRIER_SOLUTION_FIXED
GNSS_ACCURACY_DEFAULT_DEVIATION = _movelladot_pc_sdk_py39_64.GNSS_ACCURACY_DEFAULT_DEVIATION
XPDUF_ValidDate = _movelladot_pc_sdk_py39_64.XPDUF_ValidDate
XPDUF_ValidTime = _movelladot_pc_sdk_py39_64.XPDUF_ValidTime
XPDUF_FullyResolved = _movelladot_pc_sdk_py39_64.XPDUF_FullyResolved
XPDUF_ValidMag = _movelladot_pc_sdk_py39_64.XPDUF_ValidMag
XPDQI_NoFix = _movelladot_pc_sdk_py39_64.XPDQI_NoFix
XPDQI_DeadReckiningOnly = _movelladot_pc_sdk_py39_64.XPDQI_DeadReckiningOnly
XPDQI_2DFix = _movelladot_pc_sdk_py39_64.XPDQI_2DFix
XPDQI_3DFix = _movelladot_pc_sdk_py39_64.XPDQI_3DFix
XPDQI_GnssAndDeadReck = _movelladot_pc_sdk_py39_64.XPDQI_GnssAndDeadReck
XPDQI_TimeOnlyFix = _movelladot_pc_sdk_py39_64.XPDQI_TimeOnlyFix
class XsRawGnssPvtData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_itow = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_itow_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_itow_set)
    m_year = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_year_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_year_set)
    m_month = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_month_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_month_set)
    m_day = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_day_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_day_set)
    m_hour = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_hour_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_hour_set)
    m_min = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_min_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_min_set)
    m_sec = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_sec_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_sec_set)
    m_valid = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_valid_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_valid_set)
    m_tAcc = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_tAcc_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_tAcc_set)
    m_nano = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_nano_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_nano_set)
    m_fixType = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_fixType_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_fixType_set)
    m_flags = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_flags_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_flags_set)
    m_numSv = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_numSv_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_numSv_set)
    m_res1 = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_res1_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_res1_set)
    m_lon = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_lon_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_lon_set)
    m_lat = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_lat_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_lat_set)
    m_height = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_height_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_height_set)
    m_hMsl = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_hMsl_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_hMsl_set)
    m_hAcc = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_hAcc_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_hAcc_set)
    m_vAcc = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_vAcc_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_vAcc_set)
    m_velN = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_velN_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_velN_set)
    m_velE = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_velE_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_velE_set)
    m_velD = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_velD_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_velD_set)
    m_gSpeed = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_gSpeed_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_gSpeed_set)
    m_headMot = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_headMot_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_headMot_set)
    m_sAcc = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_sAcc_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_sAcc_set)
    m_headAcc = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_headAcc_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_headAcc_set)
    m_headVeh = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_headVeh_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_headVeh_set)
    m_gdop = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_gdop_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_gdop_set)
    m_pdop = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_pdop_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_pdop_set)
    m_tdop = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_tdop_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_tdop_set)
    m_vdop = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_vdop_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_vdop_set)
    m_hdop = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_hdop_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_hdop_set)
    m_ndop = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_ndop_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_ndop_set)
    m_edop = property(_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_edop_get, _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_m_edop_set)

    def __eq__(self, other: "XsRawGnssPvtData") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsRawGnssPvtData___eq__(self, other)

    def __init__(self):
        _movelladot_pc_sdk_py39_64.XsRawGnssPvtData_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsRawGnssPvtData())
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsRawGnssPvtData

# Register XsRawGnssPvtData in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsRawGnssPvtData_swigregister(XsRawGnssPvtData)

XSIF_SignalQualityIndicator_Mask = _movelladot_pc_sdk_py39_64.XSIF_SignalQualityIndicator_Mask
XSIF_SignalQualityIndicator_NoSignal = _movelladot_pc_sdk_py39_64.XSIF_SignalQualityIndicator_NoSignal
XSIF_SignalQualityIndicator_Searching = _movelladot_pc_sdk_py39_64.XSIF_SignalQualityIndicator_Searching
XSIF_SignalQualityIndicator_Acquired = _movelladot_pc_sdk_py39_64.XSIF_SignalQualityIndicator_Acquired
XSIF_SignalQualityIndicator_Unusable = _movelladot_pc_sdk_py39_64.XSIF_SignalQualityIndicator_Unusable
XSIF_SignalQualityIndicator_CodeTimeOk = _movelladot_pc_sdk_py39_64.XSIF_SignalQualityIndicator_CodeTimeOk
XSIF_SignalQualityIndicator_CodeCarrierTimeOk1 = _movelladot_pc_sdk_py39_64.XSIF_SignalQualityIndicator_CodeCarrierTimeOk1
XSIF_SignalQualityIndicator_CodeCarrierTimeOk2 = _movelladot_pc_sdk_py39_64.XSIF_SignalQualityIndicator_CodeCarrierTimeOk2
XSIF_SignalQualityIndicator_CodeCarrierTimeOk3 = _movelladot_pc_sdk_py39_64.XSIF_SignalQualityIndicator_CodeCarrierTimeOk3
XSIF_UsedForNavigation_Mask = _movelladot_pc_sdk_py39_64.XSIF_UsedForNavigation_Mask
XSIF_UsedForNavigation_Used = _movelladot_pc_sdk_py39_64.XSIF_UsedForNavigation_Used
XSIF_HealthFlag_Mask = _movelladot_pc_sdk_py39_64.XSIF_HealthFlag_Mask
XSIF_HealthFlag_Unknown = _movelladot_pc_sdk_py39_64.XSIF_HealthFlag_Unknown
XSIF_HealthFlag_Healthy = _movelladot_pc_sdk_py39_64.XSIF_HealthFlag_Healthy
XSIF_HealthFlag_Unhealthy = _movelladot_pc_sdk_py39_64.XSIF_HealthFlag_Unhealthy
XSIF_Differential_Mask = _movelladot_pc_sdk_py39_64.XSIF_Differential_Mask
XSIF_Differential_Available = _movelladot_pc_sdk_py39_64.XSIF_Differential_Available
class XsSatInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_gnssId = property(_movelladot_pc_sdk_py39_64.XsSatInfo_m_gnssId_get, _movelladot_pc_sdk_py39_64.XsSatInfo_m_gnssId_set)
    m_svId = property(_movelladot_pc_sdk_py39_64.XsSatInfo_m_svId_get, _movelladot_pc_sdk_py39_64.XsSatInfo_m_svId_set)
    m_cno = property(_movelladot_pc_sdk_py39_64.XsSatInfo_m_cno_get, _movelladot_pc_sdk_py39_64.XsSatInfo_m_cno_set)
    m_flags = property(_movelladot_pc_sdk_py39_64.XsSatInfo_m_flags_get, _movelladot_pc_sdk_py39_64.XsSatInfo_m_flags_set)

    def __init__(self):
        _movelladot_pc_sdk_py39_64.XsSatInfo_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsSatInfo())
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsSatInfo

# Register XsSatInfo in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsSatInfo_swigregister(XsSatInfo)

class XsRawGnssSatInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_itow = property(_movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_m_itow_get, _movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_m_itow_set)
    m_numSvs = property(_movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_m_numSvs_get, _movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_m_numSvs_set)
    m_res1 = property(_movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_m_res1_get, _movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_m_res1_set)
    m_res2 = property(_movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_m_res2_get, _movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_m_res2_set)
    m_res3 = property(_movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_m_res3_get, _movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_m_res3_set)
    m_satInfos = property(_movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_m_satInfos_get, _movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_m_satInfos_set)

    def __eq__(self, b: "XsRawGnssSatInfo") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsRawGnssSatInfo___eq__(self, b)

    def __init__(self):
        _movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsRawGnssSatInfo())
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsRawGnssSatInfo

# Register XsRawGnssSatInfo in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsRawGnssSatInfo_swigregister(XsRawGnssSatInfo)

class XsRange(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsRange_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsRange(*args))

    def __assign__(self, other: "XsRange") -> "XsRange &":
        return _movelladot_pc_sdk_py39_64.XsRange___assign__(self, other)

    def count(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsRange_count(self)

    def interval(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsRange_interval(self)

    def contains(self, i: "int") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsRange_contains(self, i)

    def setRange(self, f: "int", l: "int") -> "void":
        return _movelladot_pc_sdk_py39_64.XsRange_setRange(self, f, l)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsRange_empty(self)

    def first(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsRange_first(self)

    def last(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsRange_last(self)

    def __eq__(self, other: "XsRange") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsRange___eq__(self, other)

    def __lt__(self, other: "XsRange") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsRange___lt__(self, other)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsRange

# Register XsRange in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsRange_swigregister(XsRange)

class XsTriggerIndicationData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_line = property(_movelladot_pc_sdk_py39_64.XsTriggerIndicationData_m_line_get, _movelladot_pc_sdk_py39_64.XsTriggerIndicationData_m_line_set)
    m_polarity = property(_movelladot_pc_sdk_py39_64.XsTriggerIndicationData_m_polarity_get, _movelladot_pc_sdk_py39_64.XsTriggerIndicationData_m_polarity_set)
    m_timestamp = property(_movelladot_pc_sdk_py39_64.XsTriggerIndicationData_m_timestamp_get, _movelladot_pc_sdk_py39_64.XsTriggerIndicationData_m_timestamp_set)
    m_frameNumber = property(_movelladot_pc_sdk_py39_64.XsTriggerIndicationData_m_frameNumber_get, _movelladot_pc_sdk_py39_64.XsTriggerIndicationData_m_frameNumber_set)

    def __init__(self, line: "uint8_t"=0, polarity: "uint8_t"=0, timestamp: "uint32_t"=0, frameNumber: "uint16_t"=0):
        _movelladot_pc_sdk_py39_64.XsTriggerIndicationData_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsTriggerIndicationData(line, polarity, timestamp, frameNumber))

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsTriggerIndicationData_clear(self)

    def valid(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsTriggerIndicationData_valid(self)

    def __eq__(self, other: "XsTriggerIndicationData") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsTriggerIndicationData___eq__(self, other)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsTriggerIndicationData

# Register XsTriggerIndicationData in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsTriggerIndicationData_swigregister(XsTriggerIndicationData)

ST_Awinda = _movelladot_pc_sdk_py39_64.ST_Awinda
ST_Full = _movelladot_pc_sdk_py39_64.ST_Full
class XsSnapshot(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_deviceId = property(_movelladot_pc_sdk_py39_64.XsSnapshot_m_deviceId_get, _movelladot_pc_sdk_py39_64.XsSnapshot_m_deviceId_set)
    m_frameNumber = property(_movelladot_pc_sdk_py39_64.XsSnapshot_m_frameNumber_get, _movelladot_pc_sdk_py39_64.XsSnapshot_m_frameNumber_set)
    m_timestamp = property(_movelladot_pc_sdk_py39_64.XsSnapshot_m_timestamp_get, _movelladot_pc_sdk_py39_64.XsSnapshot_m_timestamp_set)
    m_iQ = property(_movelladot_pc_sdk_py39_64.XsSnapshot_m_iQ_get, _movelladot_pc_sdk_py39_64.XsSnapshot_m_iQ_set)
    m_iV = property(_movelladot_pc_sdk_py39_64.XsSnapshot_m_iV_get, _movelladot_pc_sdk_py39_64.XsSnapshot_m_iV_set)
    m_mag = property(_movelladot_pc_sdk_py39_64.XsSnapshot_m_mag_get, _movelladot_pc_sdk_py39_64.XsSnapshot_m_mag_set)
    m_baro = property(_movelladot_pc_sdk_py39_64.XsSnapshot_m_baro_get, _movelladot_pc_sdk_py39_64.XsSnapshot_m_baro_set)
    m_status = property(_movelladot_pc_sdk_py39_64.XsSnapshot_m_status_get, _movelladot_pc_sdk_py39_64.XsSnapshot_m_status_set)
    m_accClippingCounter = property(_movelladot_pc_sdk_py39_64.XsSnapshot_m_accClippingCounter_get, _movelladot_pc_sdk_py39_64.XsSnapshot_m_accClippingCounter_set)
    m_gyrClippingCounter = property(_movelladot_pc_sdk_py39_64.XsSnapshot_m_gyrClippingCounter_get, _movelladot_pc_sdk_py39_64.XsSnapshot_m_gyrClippingCounter_set)
    m_type = property(_movelladot_pc_sdk_py39_64.XsSnapshot_m_type_get, _movelladot_pc_sdk_py39_64.XsSnapshot_m_type_set)

    def __eq__(self, other: "XsSnapshot") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSnapshot___eq__(self, other)

    def __init__(self):
        _movelladot_pc_sdk_py39_64.XsSnapshot_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsSnapshot())
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsSnapshot

# Register XsSnapshot in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsSnapshot_swigregister(XsSnapshot)

FSFL_ClipAccX = _movelladot_pc_sdk_py39_64.FSFL_ClipAccX
FSFL_ClipAccY = _movelladot_pc_sdk_py39_64.FSFL_ClipAccY
FSFL_ClipAccZ = _movelladot_pc_sdk_py39_64.FSFL_ClipAccZ
FSFL_ClipAccMask = _movelladot_pc_sdk_py39_64.FSFL_ClipAccMask
FSFL_ClipGyrX = _movelladot_pc_sdk_py39_64.FSFL_ClipGyrX
FSFL_ClipGyrY = _movelladot_pc_sdk_py39_64.FSFL_ClipGyrY
FSFL_ClipGyrZ = _movelladot_pc_sdk_py39_64.FSFL_ClipGyrZ
FSFL_ClipGyrMask = _movelladot_pc_sdk_py39_64.FSFL_ClipGyrMask
FSFL_ClipMagX = _movelladot_pc_sdk_py39_64.FSFL_ClipMagX
FSFL_ClipMagY = _movelladot_pc_sdk_py39_64.FSFL_ClipMagY
FSFL_ClipMagZ = _movelladot_pc_sdk_py39_64.FSFL_ClipMagZ
FSFL_ClipMagMask = _movelladot_pc_sdk_py39_64.FSFL_ClipMagMask
FSFL_MagIsNew = _movelladot_pc_sdk_py39_64.FSFL_MagIsNew
FSFL_BaroIsNew = _movelladot_pc_sdk_py39_64.FSFL_BaroIsNew
FSFL_RotationMask = _movelladot_pc_sdk_py39_64.FSFL_RotationMask
FSFL_ClipAccShift = _movelladot_pc_sdk_py39_64.FSFL_ClipAccShift
FSFL_ClipGyrShift = _movelladot_pc_sdk_py39_64.FSFL_ClipGyrShift
FSFL_ClipMagshift = _movelladot_pc_sdk_py39_64.FSFL_ClipMagshift
FSFL_RotationShift = _movelladot_pc_sdk_py39_64.FSFL_RotationShift
class int24_t(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_vals = property(_movelladot_pc_sdk_py39_64.int24_t_m_vals_get, _movelladot_pc_sdk_py39_64.int24_t_m_vals_set)

    def toDouble(self) -> "double":
        return _movelladot_pc_sdk_py39_64.int24_t_toDouble(self)

    def __init__(self):
        _movelladot_pc_sdk_py39_64.int24_t_swiginit(self, _movelladot_pc_sdk_py39_64.new_int24_t())
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_int24_t

# Register int24_t in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.int24_t_swigregister(int24_t)

class XsGloveSnapshot(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_frameNumber = property(_movelladot_pc_sdk_py39_64.XsGloveSnapshot_m_frameNumber_get, _movelladot_pc_sdk_py39_64.XsGloveSnapshot_m_frameNumber_set)
    m_validSampleFlags = property(_movelladot_pc_sdk_py39_64.XsGloveSnapshot_m_validSampleFlags_get, _movelladot_pc_sdk_py39_64.XsGloveSnapshot_m_validSampleFlags_set)
    m_padByte = property(_movelladot_pc_sdk_py39_64.XsGloveSnapshot_m_padByte_get, _movelladot_pc_sdk_py39_64.XsGloveSnapshot_m_padByte_set)
    m_fingers = property(_movelladot_pc_sdk_py39_64.XsGloveSnapshot_m_fingers_get, _movelladot_pc_sdk_py39_64.XsGloveSnapshot_m_fingers_set)

    def __init__(self):
        _movelladot_pc_sdk_py39_64.XsGloveSnapshot_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsGloveSnapshot())
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsGloveSnapshot

# Register XsGloveSnapshot in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsGloveSnapshot_swigregister(XsGloveSnapshot)

XSFINGERSEGMENTCOUNT = _movelladot_pc_sdk_py39_64.XSFINGERSEGMENTCOUNT
class XsFingerData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsFingerData_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsFingerData(*args))

    def __assign__(self, other: "XsFingerData") -> "XsFingerData const &":
        return _movelladot_pc_sdk_py39_64.XsFingerData___assign__(self, other)

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsFingerData_clear(self)

    def orientationIncrement(self) -> "XsQuaternion const &":
        return _movelladot_pc_sdk_py39_64.XsFingerData_orientationIncrement(self)

    def velocityIncrement(self) -> "XsVector3 const &":
        return _movelladot_pc_sdk_py39_64.XsFingerData_velocityIncrement(self)

    def mag(self) -> "XsVector3 const &":
        return _movelladot_pc_sdk_py39_64.XsFingerData_mag(self)

    def flags(self) -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsFingerData_flags(self)

    def __eq__(self, other: "XsFingerData") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsFingerData___eq__(self, other)

    def __ne__(self, other: "XsFingerData") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsFingerData___ne__(self, other)

    def swap(self, other: "XsFingerData") -> "void":
        return _movelladot_pc_sdk_py39_64.XsFingerData_swap(self, other)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsFingerData

# Register XsFingerData in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsFingerData_swigregister(XsFingerData)

class XsGloveData(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsGloveData_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsGloveData(*args))

    def frameNumber(self) -> "uint32_t":
        return _movelladot_pc_sdk_py39_64.XsGloveData_frameNumber(self)

    def validSampleFlags(self) -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsGloveData_validSampleFlags(self)

    @staticmethod
    def fingerSegmentCount() -> "int":
        return _movelladot_pc_sdk_py39_64.XsGloveData_fingerSegmentCount()

    def fingerData(self, i: "int") -> "XsFingerData const &":
        return _movelladot_pc_sdk_py39_64.XsGloveData_fingerData(self, i)

    def __eq__(self, other: "XsGloveData") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsGloveData___eq__(self, other)

    def __ne__(self, other: "XsGloveData") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsGloveData___ne__(self, other)

    def __assign__(self, other: "XsGloveData") -> "XsGloveData const &":
        return _movelladot_pc_sdk_py39_64.XsGloveData___assign__(self, other)

    def swap(self, other: "XsGloveData") -> "void":
        return _movelladot_pc_sdk_py39_64.XsGloveData_swap(self, other)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsGloveData

# Register XsGloveData in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsGloveData_swigregister(XsGloveData)

def XsGloveData_fingerSegmentCount() -> "int":
    return _movelladot_pc_sdk_py39_64.XsGloveData_fingerSegmentCount()

class XsDataPacket(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsDataPacket_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsDataPacket(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsDataPacket

    def __assign__(self, other: "XsDataPacket") -> "XsDataPacket &":
        return _movelladot_pc_sdk_py39_64.XsDataPacket___assign__(self, other)

    def swap(self, other: "XsDataPacket") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_swap(self, other)

    def clear(self, id: "XsDataIdentifier"=XDI_None) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_clear(self, id)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_empty(self)

    def deviceId(self) -> "XsDeviceId":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_deviceId(self)

    def itemCount(self) -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_itemCount(self)

    def setMessage(self, msg: "XsMessage") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setMessage(self, msg)

    def toMessage(self) -> "XsMessage":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_toMessage(self)

    def setDeviceId(self, id: "XsDeviceId") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setDeviceId(self, id)

    def dataFormat(self, id: "XsDataIdentifier") -> "XsDataIdentifier":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_dataFormat(self, id)

    def rawAcceleration(self) -> "XsUShortVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawAcceleration(self)

    def rawAccelerationConverted(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawAccelerationConverted(self)

    def containsRawAcceleration(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsRawAcceleration(self)

    def setRawAcceleration(self, vec: "XsUShortVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setRawAcceleration(self, vec)

    def rawGyroscopeData(self) -> "XsUShortVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawGyroscopeData(self)

    def rawGyroscopeDataConverted(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawGyroscopeDataConverted(self)

    def containsRawGyroscopeData(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsRawGyroscopeData(self)

    def setRawGyroscopeData(self, vec: "XsUShortVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setRawGyroscopeData(self, vec)

    def rawGyroscopeTemperatureData(self) -> "XsUShortVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawGyroscopeTemperatureData(self)

    def rawGyroscopeTemperatureDataConverted(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawGyroscopeTemperatureDataConverted(self)

    def containsRawGyroscopeTemperatureData(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsRawGyroscopeTemperatureData(self)

    def setRawGyroscopeTemperatureData(self, vec: "XsUShortVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setRawGyroscopeTemperatureData(self, vec)

    def rawMagneticField(self) -> "XsUShortVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawMagneticField(self)

    def rawMagneticFieldConverted(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawMagneticFieldConverted(self)

    def containsRawMagneticField(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsRawMagneticField(self)

    def setRawMagneticField(self, vec: "XsUShortVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setRawMagneticField(self, vec)

    def rawTemperature(self) -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawTemperature(self)

    def containsRawTemperature(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsRawTemperature(self)

    def setRawTemperature(self, temp: "uint16_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setRawTemperature(self, temp)

    def rawData(self) -> "XsScrData":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawData(self)

    def containsRawData(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsRawData(self)

    def setRawData(self, data: "XsScrData") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setRawData(self, data)

    def velocityIncrement(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_velocityIncrement(self)

    def containsVelocityIncrement(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsVelocityIncrement(self)

    def setVelocityIncrement(self, vec: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setVelocityIncrement(self, vec)

    def calibratedAcceleration(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_calibratedAcceleration(self)

    def containsCalibratedAcceleration(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsCalibratedAcceleration(self)

    def setCalibratedAcceleration(self, vec: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setCalibratedAcceleration(self, vec)

    def orientationIncrement(self) -> "XsQuaternion":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_orientationIncrement(self)

    def containsOrientationIncrement(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsOrientationIncrement(self)

    def setOrientationIncrement(self, quat: "XsQuaternion") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setOrientationIncrement(self, quat)

    def calibratedGyroscopeData(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_calibratedGyroscopeData(self)

    def containsCalibratedGyroscopeData(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsCalibratedGyroscopeData(self)

    def setCalibratedGyroscopeData(self, vec: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setCalibratedGyroscopeData(self, vec)

    def calibratedMagneticField(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_calibratedMagneticField(self)

    def containsCalibratedMagneticField(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsCalibratedMagneticField(self)

    def setCalibratedMagneticField(self, vec: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setCalibratedMagneticField(self, vec)

    def correctedMagneticField(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_correctedMagneticField(self)

    def containsCorrectedMagneticField(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsCorrectedMagneticField(self)

    def setCorrectedMagneticField(self, vec: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setCorrectedMagneticField(self, vec)

    def calibratedData(self) -> "XsCalibratedData":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_calibratedData(self)

    def containsCalibratedData(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsCalibratedData(self)

    def setCalibratedData(self, data: "XsCalibratedData") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setCalibratedData(self, data)

    def orientationQuaternion(self, *args) -> "XsQuaternion":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_orientationQuaternion(self, *args)

    def setOrientationQuaternion(self, data: "XsQuaternion", coordinateSystem: "XsDataIdentifier") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setOrientationQuaternion(self, data, coordinateSystem)

    def orientationEuler(self, *args) -> "XsEuler":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_orientationEuler(self, *args)

    def setOrientationEuler(self, data: "XsEuler", coordinateSystem: "XsDataIdentifier") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setOrientationEuler(self, data, coordinateSystem)

    def orientationMatrix(self, *args) -> "XsMatrix":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_orientationMatrix(self, *args)

    def setOrientationMatrix(self, data: "XsMatrix", coordinateSystem: "XsDataIdentifier") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setOrientationMatrix(self, data, coordinateSystem)

    def containsOrientation(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsOrientation(self)

    def orientationIdentifier(self) -> "XsDataIdentifier":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_orientationIdentifier(self)

    def coordinateSystemOrientation(self) -> "XsDataIdentifier":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_coordinateSystemOrientation(self)

    def sdiData(self) -> "XsSdiData":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_sdiData(self)

    def containsSdiData(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsSdiData(self)

    def setSdiData(self, data: "XsSdiData") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setSdiData(self, data)

    def gloveData(self, hand: "XsHandId") -> "XsGloveData":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_gloveData(self, hand)

    def containsGloveData(self, hand: "XsHandId"=XHI_Unknown) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsGloveData(self, hand)

    def setGloveData(self, data: "XsGloveData", hand: "XsHandId") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setGloveData(self, data, hand)

    def storedDeviceId(self) -> "XsDeviceId":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_storedDeviceId(self)

    def containsStoredDeviceId(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsStoredDeviceId(self)

    def setStoredDeviceId(self, data: "XsDeviceId") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setStoredDeviceId(self, data)

    def storedLocationId(self) -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_storedLocationId(self)

    def containsStoredLocationId(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsStoredLocationId(self)

    def setStoredLocationId(self, data: "uint16_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setStoredLocationId(self, data)

    def status(self) -> "uint32_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_status(self)

    def containsStatus(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsStatus(self)

    def containsDetailedStatus(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsDetailedStatus(self)

    def setStatus(self, data: "uint32_t const") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setStatus(self, data)

    def setStatusByte(self, data: "uint8_t const") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setStatusByte(self, data)

    def packetCounter8(self) -> "uint8_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_packetCounter8(self)

    def containsPacketCounter8(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsPacketCounter8(self)

    def setPacketCounter8(self, counter: "uint8_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setPacketCounter8(self, counter)

    def packetCounter(self) -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_packetCounter(self)

    def containsPacketCounter(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsPacketCounter(self)

    def setPacketCounter(self, counter: "uint16_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setPacketCounter(self, counter)

    def packetCounter32(self) -> "uint32_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_packetCounter32(self)

    def containsPacketCounter32(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsPacketCounter32(self)

    def setPacketCounter32(self, counter: "uint32_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setPacketCounter32(self, counter)

    def sampleTimeFine(self) -> "uint32_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_sampleTimeFine(self)

    def containsSampleTimeFine(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsSampleTimeFine(self)

    def setSampleTimeFine(self, counter: "uint32_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setSampleTimeFine(self, counter)

    def sampleTimeCoarse(self) -> "uint32_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_sampleTimeCoarse(self)

    def containsSampleTimeCoarse(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsSampleTimeCoarse(self)

    def setSampleTimeCoarse(self, counter: "uint32_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setSampleTimeCoarse(self, counter)

    def sampleTime64(self) -> "uint64_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_sampleTime64(self)

    def containsSampleTime64(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsSampleTime64(self)

    def setSampleTime64(self, counter: "uint64_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setSampleTime64(self, counter)

    def freeAcceleration(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_freeAcceleration(self)

    def containsFreeAcceleration(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsFreeAcceleration(self)

    def setFreeAcceleration(self, g: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setFreeAcceleration(self, g)

    def temperature(self) -> "double":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_temperature(self)

    def containsTemperature(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsTemperature(self)

    def setTemperature(self, temperature: "double") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setTemperature(self, temperature)

    def pressure(self) -> "XsPressure":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_pressure(self)

    def containsPressure(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsPressure(self)

    def containsPressureAge(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsPressureAge(self)

    def setPressure(self, data: "XsPressure") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setPressure(self, data)

    def analogIn1Data(self) -> "XsAnalogInData":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_analogIn1Data(self)

    def containsAnalogIn1Data(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsAnalogIn1Data(self)

    def setAnalogIn1Data(self, data: "XsAnalogInData") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setAnalogIn1Data(self, data)

    def analogIn2Data(self) -> "XsAnalogInData":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_analogIn2Data(self)

    def containsAnalogIn2Data(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsAnalogIn2Data(self)

    def setAnalogIn2Data(self, data: "XsAnalogInData") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setAnalogIn2Data(self, data)

    def positionLLA(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_positionLLA(self)

    def containsPositionLLA(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsPositionLLA(self)

    def setPositionLLA(self, data: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setPositionLLA(self, data)

    def latitudeLongitude(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_latitudeLongitude(self)

    def containsLatitudeLongitude(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsLatitudeLongitude(self)

    def setLatitudeLongitude(self, data: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setLatitudeLongitude(self, data)

    def altitude(self) -> "double":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_altitude(self)

    def containsAltitude(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsAltitude(self)

    def setAltitude(self, data: "double") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setAltitude(self, data)

    def altitudeMsl(self) -> "double":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_altitudeMsl(self)

    def containsAltitudeMsl(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsAltitudeMsl(self)

    def setAltitudeMsl(self, data: "double") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setAltitudeMsl(self, data)

    def velocity(self, *args) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_velocity(self, *args)

    def containsVelocity(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsVelocity(self)

    def setVelocity(self, data: "XsVector", coordinateSystem: "XsDataIdentifier") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setVelocity(self, data, coordinateSystem)

    def velocityIdentifier(self) -> "XsDataIdentifier":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_velocityIdentifier(self)

    def coordinateSystemVelocity(self) -> "XsDataIdentifier":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_coordinateSystemVelocity(self)

    def utcTime(self) -> "XsTimeInfo":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_utcTime(self)

    def containsUtcTime(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsUtcTime(self)

    def setUtcTime(self, data: "XsTimeInfo") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setUtcTime(self, data)

    def frameRange(self) -> "XsRange":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_frameRange(self)

    def containsFrameRange(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsFrameRange(self)

    def setFrameRange(self, r: "XsRange") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setFrameRange(self, r)

    def rssi(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rssi(self)

    def containsRssi(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsRssi(self)

    def setRssi(self, r: "int") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setRssi(self, r)

    def rawGnssPvtData(self) -> "XsRawGnssPvtData":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawGnssPvtData(self)

    def containsRawGnssPvtData(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsRawGnssPvtData(self)

    def setRawGnssPvtData(self, raw: "XsRawGnssPvtData") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setRawGnssPvtData(self, raw)

    def gnssAge(self) -> "uint8_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_gnssAge(self)

    def containsGnssAge(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsGnssAge(self)

    def setGnssAge(self, age: "uint8_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setGnssAge(self, age)

    def rawGnssSatInfo(self) -> "XsRawGnssSatInfo":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawGnssSatInfo(self)

    def containsRawGnssSatInfo(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsRawGnssSatInfo(self)

    def setRawGnssSatInfo(self, data: "XsRawGnssSatInfo") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setRawGnssSatInfo(self, data)

    def gnssPvtPulse(self) -> "uint32_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_gnssPvtPulse(self)

    def containsGnssPvtPulse(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsGnssPvtPulse(self)

    def setGnssPvtPulse(self, counter: "uint32_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setGnssPvtPulse(self, counter)

    def fullSnapshot(self) -> "XsSnapshot":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_fullSnapshot(self)

    def containsFullSnapshot(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsFullSnapshot(self)

    def setFullSnapshot(self, data: "XsSnapshot", retransmission: "bool") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setFullSnapshot(self, data, retransmission)

    def awindaSnapshot(self) -> "XsSnapshot":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_awindaSnapshot(self)

    def containsAwindaSnapshot(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsAwindaSnapshot(self)

    def setAwindaSnapshot(self, raw: "XsSnapshot", retransmission: "bool") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setAwindaSnapshot(self, raw, retransmission)

    def isAwindaSnapshotARetransmission(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_isAwindaSnapshotARetransmission(self)

    def gloveSnapshot(self, hand: "XsHandId") -> "XsGloveSnapshot":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_gloveSnapshot(self, hand)

    def containsGloveSnapshot(self, hand: "XsHandId"=XHI_Unknown) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsGloveSnapshot(self, hand)

    def setGloveSnapshot(self, data: "XsGloveSnapshot", retransmission: "bool", hand: "XsHandId") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setGloveSnapshot(self, data, retransmission, hand)

    def merge(self, other: "XsDataPacket", overwrite: "bool"=True) -> "XsDataPacket &":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_merge(self, other, overwrite)

    def setTimeOfArrival(self, t: "XsTimeStamp") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setTimeOfArrival(self, t)

    def timeOfArrival(self) -> "XsTimeStamp":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_timeOfArrival(self)

    def setEstimatedTimeOfSampling(self, t: "XsTimeStamp") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setEstimatedTimeOfSampling(self, t)

    def estimatedTimeOfSampling(self) -> "XsTimeStamp":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_estimatedTimeOfSampling(self)

    def setPacketId(self, t: "int64_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setPacketId(self, t)

    def packetId(self) -> "int64_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_packetId(self)

    def setTriggerIndication(self, triggerId: "XsDataIdentifier", triggerIndicationData: "XsTriggerIndicationData") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setTriggerIndication(self, triggerId, triggerIndicationData)

    def containsTriggerIndication(self, triggerId: "XsDataIdentifier") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsTriggerIndication(self, triggerId)

    def triggerIndication(self, triggerId: "XsDataIdentifier") -> "XsTriggerIndicationData":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_triggerIndication(self, triggerId)

    def rawBlob(self) -> "XsByteArray":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rawBlob(self)

    def containsRawBlob(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsRawBlob(self)

    def setRawBlob(self, data: "XsByteArray") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setRawBlob(self, data)

    def accelerationHR(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_accelerationHR(self)

    def containsAccelerationHR(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsAccelerationHR(self)

    def setAccelerationHR(self, vec: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setAccelerationHR(self, vec)

    def rateOfTurnHR(self) -> "XsVector":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_rateOfTurnHR(self)

    def containsRateOfTurnHR(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_containsRateOfTurnHR(self)

    def setRateOfTurnHR(self, vec: "XsVector") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_setRateOfTurnHR(self, vec)

    def simplifiedContents(self) -> "std::map< XsDataIdentifier,void *,std::less< XsDataIdentifier >,std::allocator< std::pair< XsDataIdentifier const,void * > > >":
        return _movelladot_pc_sdk_py39_64.XsDataPacket_simplifiedContents(self)
    d = property(_movelladot_pc_sdk_py39_64.XsDataPacket_d_get, _movelladot_pc_sdk_py39_64.XsDataPacket_d_set)
    m_deviceId = property(_movelladot_pc_sdk_py39_64.XsDataPacket_m_deviceId_get, _movelladot_pc_sdk_py39_64.XsDataPacket_m_deviceId_set)
    m_toa = property(_movelladot_pc_sdk_py39_64.XsDataPacket_m_toa_get, _movelladot_pc_sdk_py39_64.XsDataPacket_m_toa_set)
    m_packetId = property(_movelladot_pc_sdk_py39_64.XsDataPacket_m_packetId_get, _movelladot_pc_sdk_py39_64.XsDataPacket_m_packetId_set)
    m_etos = property(_movelladot_pc_sdk_py39_64.XsDataPacket_m_etos_get, _movelladot_pc_sdk_py39_64.XsDataPacket_m_etos_set)

# Register XsDataPacket in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsDataPacket_swigregister(XsDataPacket)

class XsDataPacketPtrArray(_XsDataPacketPtrArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsDataPacketPtrArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsDataPacketPtrArray(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsDataPacketPtrArray

# Register XsDataPacketPtrArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsDataPacketPtrArray_swigregister(XsDataPacketPtrArray)
g_xsDataPacketPtrArrayDescriptor = cvar.g_xsDataPacketPtrArrayDescriptor

XDC_Invalid = _movelladot_pc_sdk_py39_64.XDC_Invalid
XDC_Acc = _movelladot_pc_sdk_py39_64.XDC_Acc
XDC_Gyr = _movelladot_pc_sdk_py39_64.XDC_Gyr
XDC_Mag = _movelladot_pc_sdk_py39_64.XDC_Mag
XDC_Baro = _movelladot_pc_sdk_py39_64.XDC_Baro
XDC_Gnss = _movelladot_pc_sdk_py39_64.XDC_Gnss
XDC_Imu = _movelladot_pc_sdk_py39_64.XDC_Imu
XDC_Vru = _movelladot_pc_sdk_py39_64.XDC_Vru
XDC_Ahrs = _movelladot_pc_sdk_py39_64.XDC_Ahrs
XDC_GnssIns = _movelladot_pc_sdk_py39_64.XDC_GnssIns
XDC_Rtk = _movelladot_pc_sdk_py39_64.XDC_Rtk
class XsDeviceCapabilities(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsDeviceCapabilities_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsDeviceCapabilities(*args))

    def __assign__(self, other: "XsDeviceCapabilities") -> "XsDeviceCapabilities const &":
        return _movelladot_pc_sdk_py39_64.XsDeviceCapabilities___assign__(self, other)

    def hasAccelerometer(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceCapabilities_hasAccelerometer(self)

    def hasGyroscope(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceCapabilities_hasGyroscope(self)

    def hasMagnetometer(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceCapabilities_hasMagnetometer(self)

    def hasBarometer(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceCapabilities_hasBarometer(self)

    def hasGnss(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceCapabilities_hasGnss(self)

    def isImu(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceCapabilities_isImu(self)

    def isVru(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceCapabilities_isVru(self)

    def isAhrs(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceCapabilities_isAhrs(self)

    def isGnssIns(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceCapabilities_isGnssIns(self)

    def isRtk(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDeviceCapabilities_isRtk(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsDeviceCapabilities

# Register XsDeviceCapabilities in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsDeviceCapabilities_swigregister(XsDeviceCapabilities)

class XsDeviceIdArray(_XsDeviceIdArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsDeviceIdArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsDeviceIdArray(*args))

    def __str__(self) -> "std::string":
        return _movelladot_pc_sdk_py39_64.XsDeviceIdArray___str__(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsDeviceIdArray

# Register XsDeviceIdArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsDeviceIdArray_swigregister(XsDeviceIdArray)
g_xsDeviceIdArrayDescriptor = cvar.g_xsDeviceIdArrayDescriptor

XDOF_DisableAutoStore = _movelladot_pc_sdk_py39_64.XDOF_DisableAutoStore
XDOF_DisableAutoMeasurement = _movelladot_pc_sdk_py39_64.XDOF_DisableAutoMeasurement
XDOF_EnableBeidou = _movelladot_pc_sdk_py39_64.XDOF_EnableBeidou
XDOF_DisableGps = _movelladot_pc_sdk_py39_64.XDOF_DisableGps
XDOF_EnableAhs = _movelladot_pc_sdk_py39_64.XDOF_EnableAhs
XDOF_EnableOrientationSmoother = _movelladot_pc_sdk_py39_64.XDOF_EnableOrientationSmoother
XDOF_EnableConfigurableBusId = _movelladot_pc_sdk_py39_64.XDOF_EnableConfigurableBusId
XDOF_EnableInrunCompassCalibration = _movelladot_pc_sdk_py39_64.XDOF_EnableInrunCompassCalibration
XDOF_DisableSleepMode = _movelladot_pc_sdk_py39_64.XDOF_DisableSleepMode
XDOF_EnableConfigMessageAtStartup = _movelladot_pc_sdk_py39_64.XDOF_EnableConfigMessageAtStartup
XDOF_EnableColdFilterResets = _movelladot_pc_sdk_py39_64.XDOF_EnableColdFilterResets
XDOF_EnablePositionVelocitySmoother = _movelladot_pc_sdk_py39_64.XDOF_EnablePositionVelocitySmoother
XDOF_EnableContinuousZRU = _movelladot_pc_sdk_py39_64.XDOF_EnableContinuousZRU
XDOF_EnableRawGnssInputForwarding = _movelladot_pc_sdk_py39_64.XDOF_EnableRawGnssInputForwarding
XDOF_Reserved = _movelladot_pc_sdk_py39_64.XDOF_Reserved
XDOF_None = _movelladot_pc_sdk_py39_64.XDOF_None
XDOF_All = _movelladot_pc_sdk_py39_64.XDOF_All
XS_DID_TYPEL_MASK = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_MASK
XS_DID_TYPEH_MASK = _movelladot_pc_sdk_py39_64.XS_DID_TYPEH_MASK
XS_DID_GPL_MASK = _movelladot_pc_sdk_py39_64.XS_DID_GPL_MASK
XS_DID_GPH_MASK = _movelladot_pc_sdk_py39_64.XS_DID_GPH_MASK
XS_DID_TYPE_MASK = _movelladot_pc_sdk_py39_64.XS_DID_TYPE_MASK
XS_DID_GP_MASK = _movelladot_pc_sdk_py39_64.XS_DID_GP_MASK
XS_DID_MK4TYPE_MASK = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MASK
XS_DID_BASE_ID_MASK = _movelladot_pc_sdk_py39_64.XS_DID_BASE_ID_MASK
XS_DID_EXTENDED_ID_MASK = _movelladot_pc_sdk_py39_64.XS_DID_EXTENDED_ID_MASK
XS_DID_ID_MASK = _movelladot_pc_sdk_py39_64.XS_DID_ID_MASK
XS_DID_FULLTYPE_MASK = _movelladot_pc_sdk_py39_64.XS_DID_FULLTYPE_MASK
XS_DID_TYPEL_SHIFT = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_SHIFT
XS_DID_TYPEH_SHIFT = _movelladot_pc_sdk_py39_64.XS_DID_TYPEH_SHIFT
XS_DID_GPL_SHIFT = _movelladot_pc_sdk_py39_64.XS_DID_GPL_SHIFT
XS_DID_GPH_SHIFT = _movelladot_pc_sdk_py39_64.XS_DID_GPH_SHIFT
XS_DID_TYPEH_INTERNAL = _movelladot_pc_sdk_py39_64.XS_DID_TYPEH_INTERNAL
XS_DID_TYPEH_AWINDAMASTER = _movelladot_pc_sdk_py39_64.XS_DID_TYPEH_AWINDAMASTER
XS_DID_TYPEH_MT_X0 = _movelladot_pc_sdk_py39_64.XS_DID_TYPEH_MT_X0
XS_DID_TYPEH_MT_X00 = _movelladot_pc_sdk_py39_64.XS_DID_TYPEH_MT_X00
XS_DID_TYPEH_MTX2_MTW2 = _movelladot_pc_sdk_py39_64.XS_DID_TYPEH_MTX2_MTW2
XS_DID_TYPEH_BODYPACK = _movelladot_pc_sdk_py39_64.XS_DID_TYPEH_BODYPACK
XS_DID_TYPEH_MT_3X0 = _movelladot_pc_sdk_py39_64.XS_DID_TYPEH_MT_3X0
XS_DID_TYPEH_MT_X_MPU = _movelladot_pc_sdk_py39_64.XS_DID_TYPEH_MT_X_MPU
XS_DID_TYPEL_STATION = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_STATION
XS_DID_TYPEL_DONGLE = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_DONGLE
XS_DID_TYPEL_OEM = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_OEM
XS_DID_TYPEL_SYNCSTATION = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_SYNCSTATION
XS_DID_TYPEL_BUS_MASTER = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_BUS_MASTER
XS_DID_TYPEL_DONGLE_ANT = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_DONGLE_ANT
XS_DID_TYPEL_RS232 = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_RS232
XS_DID_TYPEL_RS422 = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_RS422
XS_DID_TYPEL_RS485XM = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_RS485XM
XS_DID_TYPEL_RS485 = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_RS485
XS_DID_TYPEL_WIRELESS = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_WIRELESS
XS_DID_TYPEL_OBSKUR = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_OBSKUR
XS_DID_TYPEL_COMM_MASK = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_COMM_MASK
XS_DID_TYPEL_MULTI = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_MULTI
XS_DID_TYPEL_MK5 = _movelladot_pc_sdk_py39_64.XS_DID_TYPEL_MK5
XS_DID_GPL_1 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_1
XS_DID_GPL_2 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_2
XS_DID_GPL_3 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_3
XS_DID_GPL_7 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_7
XS_DID_GPL_8 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_8
XS_DID_GPL_10 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_10
XS_DID_GPL_20 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_20
XS_DID_GPL_30 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_30
XS_DID_GPL_100 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_100
XS_DID_GPL_200 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_200
XS_DID_GPL_300 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_300
XS_DID_GPL_400 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_400
XS_DID_GPL_500 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_500
XS_DID_GPL_600 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_600
XS_DID_GPL_700 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_700
XS_DID_GPL_800 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_800
XS_DID_GPL_900 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_900
XS_DID_GPL_IMU = _movelladot_pc_sdk_py39_64.XS_DID_GPL_IMU
XS_DID_GPL_VRU = _movelladot_pc_sdk_py39_64.XS_DID_GPL_VRU
XS_DID_GPL_AHRS = _movelladot_pc_sdk_py39_64.XS_DID_GPL_AHRS
XS_DID_GPL_AWINDA2 = _movelladot_pc_sdk_py39_64.XS_DID_GPL_AWINDA2
XS_DID_GPL_AHRSGNSS = _movelladot_pc_sdk_py39_64.XS_DID_GPL_AHRSGNSS
XS_DID_GPL_AHRSGNSSG = _movelladot_pc_sdk_py39_64.XS_DID_GPL_AHRSGNSSG
XS_DID_GPL_GNSSINS = _movelladot_pc_sdk_py39_64.XS_DID_GPL_GNSSINS
XS_DID_GPL_GNSSINSG = _movelladot_pc_sdk_py39_64.XS_DID_GPL_GNSSINSG
XS_DID_GPL_GNSSINSRTK = _movelladot_pc_sdk_py39_64.XS_DID_GPL_GNSSINSRTK
XS_DID_TYPE_AWINDA = _movelladot_pc_sdk_py39_64.XS_DID_TYPE_AWINDA
XS_DID_TYPE_AWINDA_STATION = _movelladot_pc_sdk_py39_64.XS_DID_TYPE_AWINDA_STATION
XS_DID_TYPE_AWINDA_DONGLE = _movelladot_pc_sdk_py39_64.XS_DID_TYPE_AWINDA_DONGLE
XS_DID_TYPE_AWINDA_DONGLE_ANT = _movelladot_pc_sdk_py39_64.XS_DID_TYPE_AWINDA_DONGLE_ANT
XS_DID_TYPE_AWINDA_OEM = _movelladot_pc_sdk_py39_64.XS_DID_TYPE_AWINDA_OEM
XS_DID_TYPE_SYNCSTATION = _movelladot_pc_sdk_py39_64.XS_DID_TYPE_SYNCSTATION
XS_DID_FULLTYPE_AWINDA2_STATION = _movelladot_pc_sdk_py39_64.XS_DID_FULLTYPE_AWINDA2_STATION
XS_DID_FULLTYPE_AWINDA2_DONGLE = _movelladot_pc_sdk_py39_64.XS_DID_FULLTYPE_AWINDA2_DONGLE
XS_DID_FULLTYPE_AWINDA2_OEM = _movelladot_pc_sdk_py39_64.XS_DID_FULLTYPE_AWINDA2_OEM
XS_DID_FULLTYPE_SYNCSTATION2 = _movelladot_pc_sdk_py39_64.XS_DID_FULLTYPE_SYNCSTATION2
XS_DID_TYPE_MTX2 = _movelladot_pc_sdk_py39_64.XS_DID_TYPE_MTX2
XS_DID_TYPE_MTW2 = _movelladot_pc_sdk_py39_64.XS_DID_TYPE_MTW2
XS_DID_TYPE_MTW2OBSKUR = _movelladot_pc_sdk_py39_64.XS_DID_TYPE_MTW2OBSKUR
XS_DID_MK4TYPE_MT_1_MPU = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_1_MPU
XS_DID_MK4TYPE_MT_2_MPU = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_2_MPU
XS_DID_MK4TYPE_MT_3_MPU = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_3_MPU
XS_DID_MK4TYPE_MT_7_MPU = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_7_MPU
XS_DID_MK4TYPE_MT_8_MPU = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_8_MPU
XS_DID_MK4TYPE_MT_310 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_310
XS_DID_MK4TYPE_MT_320 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_320
XS_DID_MK4TYPE_MT_330 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_330
XS_DID_MK4TYPE_MT_10 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_10
XS_DID_MK4TYPE_MT_20 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_20
XS_DID_MK4TYPE_MT_30 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_30
XS_DID_MK4TYPE_MT_100 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_100
XS_DID_MK4TYPE_MT_200 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_200
XS_DID_MK4TYPE_MT_300 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_300
XS_DID_MK4TYPE_MT_400 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_400
XS_DID_MK4TYPE_MT_500 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_500
XS_DID_MK4TYPE_MT_600 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_600
XS_DID_MK4TYPE_MT_700 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_700
XS_DID_MK4TYPE_MT_800 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_800
XS_DID_MK4TYPE_MT_900 = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_900
XS_DID_MK5TYPE_MT_10 = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_MT_10
XS_DID_MK5TYPE_MT_20 = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_MT_20
XS_DID_MK5TYPE_MT_30 = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_MT_30
XS_DID_MK5TYPE_MT_100 = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_MT_100
XS_DID_MK5TYPE_MT_200 = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_MT_200
XS_DID_MK5TYPE_MT_300 = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_MT_300
XS_DID_MK5TYPE_MT_400 = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_MT_400
XS_DID_MK5TYPE_MT_500 = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_MT_500
XS_DID_MK5TYPE_MT_600 = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_MT_600
XS_DID_MK5TYPE_MT_700 = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_MT_700
XS_DID_MK5TYPE_MT_800 = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_MT_800
XS_DID_MK5TYPE_MT_900 = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_MT_900
XS_DID_MASTER = _movelladot_pc_sdk_py39_64.XS_DID_MASTER
XS_DID_ABMCLOCKMASTER = _movelladot_pc_sdk_py39_64.XS_DID_ABMCLOCKMASTER
XS_DID_GLOVEMASTER = _movelladot_pc_sdk_py39_64.XS_DID_GLOVEMASTER
XS_DID_GLOVETYPE_UNKNOWN = _movelladot_pc_sdk_py39_64.XS_DID_GLOVETYPE_UNKNOWN
XS_DID_GLOVETYPE_LEFT = _movelladot_pc_sdk_py39_64.XS_DID_GLOVETYPE_LEFT
XS_DID_GLOVETYPE_RIGHT = _movelladot_pc_sdk_py39_64.XS_DID_GLOVETYPE_RIGHT
XS_DID_GLOVEMASTER_UNKNOWN = _movelladot_pc_sdk_py39_64.XS_DID_GLOVEMASTER_UNKNOWN
XS_DID_GLOVEMASTER_LEFT = _movelladot_pc_sdk_py39_64.XS_DID_GLOVEMASTER_LEFT
XS_DID_GLOVEMASTER_RIGHT = _movelladot_pc_sdk_py39_64.XS_DID_GLOVEMASTER_RIGHT
XS_DID_MK4TYPE_MT_710_RANGE_START = _movelladot_pc_sdk_py39_64.XS_DID_MK4TYPE_MT_710_RANGE_START
XS_DID_MK5TYPE_RANGE_START = _movelladot_pc_sdk_py39_64.XS_DID_MK5TYPE_RANGE_START
XS_DID64_BIT = _movelladot_pc_sdk_py39_64.XS_DID64_BIT
class XsException(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsException_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsException(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsException

    def __assign__(self, e: "XsException") -> "XsException &":
        return _movelladot_pc_sdk_py39_64.XsException___assign__(self, e)

    def code(self) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsException_code(self)

    def what(self) -> "char const *":
        return _movelladot_pc_sdk_py39_64.XsException_what(self)

    def text(self) -> "XsString const &":
        return _movelladot_pc_sdk_py39_64.XsException_text(self)

# Register XsException in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsException_swigregister(XsException)

XS_MAX_FILENAME_LENGTH = _movelladot_pc_sdk_py39_64.XS_MAX_FILENAME_LENGTH
class XsFile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _movelladot_pc_sdk_py39_64.XsFile_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsFile())
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsFile

    def create(self, filename: "XsString", writeOnly: "bool") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_create(self, filename, writeOnly)

    def createText(self, filename: "XsString", writeOnly: "bool") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_createText(self, filename, writeOnly)

    def open(self, fileName: "XsString", readOnly: "bool") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_open(self, fileName, readOnly)

    def openText(self, fileName: "XsString", readOnly: "bool") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_openText(self, fileName, readOnly)

    def reopen(self, fileName: "XsString", mode: "XsString") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_reopen(self, fileName, mode)

    def isOpen(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsFile_isOpen(self)

    @staticmethod
    def exists(fileName: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsFile_exists(fileName)

    def close(self) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_close(self)

    def flush(self) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_flush(self)

    def truncate(self, fileSize: "XsFilePos") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_truncate(self, fileSize)

    def resize(self, fileSize: "XsFilePos") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_resize(self, fileSize)

    @staticmethod
    def erase(filename: "XsString") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_erase(filename)

    def read(self, destination: "void *", size: "XsFilePos", count: "XsFilePos") -> "XsFilePos":
        return _movelladot_pc_sdk_py39_64.XsFile_read(self, destination, size, count)

    def write(self, *args) -> "XsFilePos":
        return _movelladot_pc_sdk_py39_64.XsFile_write(self, *args)

    def getc(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsFile_getc(self)

    def putc(self, character: "int") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_putc(self, character)

    def gets(self, destination: "char *", maxCount: "int") -> "char *":
        return _movelladot_pc_sdk_py39_64.XsFile_gets(self, destination, maxCount)

    def puts(self, source: "char const *") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_puts(self, source)

    def seek(self, offset: "XsFilePos") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_seek(self, offset)

    def seek_r(self, offset: "XsFilePos") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_seek_r(self, offset)

    def tell(self) -> "XsFilePos":
        return _movelladot_pc_sdk_py39_64.XsFile_tell(self)

    def eof(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsFile_eof(self)

    def error(self) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_error(self)

    @staticmethod
    def fullPath(filename: "XsString", fullPath: "XsString") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_fullPath(filename, fullPath)

    def getline(self, *args) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsFile_getline(self, *args)

    def handle(self) -> "FILE *":
        return _movelladot_pc_sdk_py39_64.XsFile_handle(self)

# Register XsFile in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsFile_swigregister(XsFile)

def XsFile_exists(fileName: "XsString") -> "bool":
    return _movelladot_pc_sdk_py39_64.XsFile_exists(fileName)

def XsFile_erase(filename: "XsString") -> "XsResultValue":
    return _movelladot_pc_sdk_py39_64.XsFile_erase(filename)

def XsFile_fullPath(filename: "XsString", fullPath: "XsString") -> "XsResultValue":
    return _movelladot_pc_sdk_py39_64.XsFile_fullPath(filename, fullPath)

XFPK_Unknown = _movelladot_pc_sdk_py39_64.XFPK_Unknown
XFPK_Base = _movelladot_pc_sdk_py39_64.XFPK_Base
XFPK_Additional = _movelladot_pc_sdk_py39_64.XFPK_Additional
XFPK_Heading = _movelladot_pc_sdk_py39_64.XFPK_Heading
XS_MAX_FILTERPROFILES = _movelladot_pc_sdk_py39_64.XS_MAX_FILTERPROFILES
XS_LEN_FILTERPROFILELABEL_TERM = _movelladot_pc_sdk_py39_64.XS_LEN_FILTERPROFILELABEL_TERM
XS_LEN_FILTERPROFILEKIND_TERM = _movelladot_pc_sdk_py39_64.XS_LEN_FILTERPROFILEKIND_TERM
XS_MAX_FILTERPROFILES_IN_MT = _movelladot_pc_sdk_py39_64.XS_MAX_FILTERPROFILES_IN_MT
class XsFilterProfile(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsFilterProfile_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsFilterProfile(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsFilterProfile

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_empty(self)

    def toXsString(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_toXsString(self)

    def type(self) -> "uint8_t":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_type(self)

    def version(self) -> "uint8_t":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_version(self)

    def label(self) -> "char const *":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_label(self)

    def kind(self) -> "char const *":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_kind(self)

    def filterType(self) -> "char":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_filterType(self)

    def filterMajor(self) -> "uint8_t":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_filterMajor(self)

    def filterMinor(self) -> "uint8_t":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_filterMinor(self)

    def setType(self, type_: "uint8_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_setType(self, type_)

    def setVersion(self, version_: "uint8_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_setVersion(self, version_)

    def setLabel(self, label_: "char const *") -> "void":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_setLabel(self, label_)

    def setKind(self, kind_: "char const *") -> "void":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_setKind(self, kind_)

    def setFilterType(self, filterType_: "char") -> "void":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_setFilterType(self, filterType_)

    def setFilterVersion(self, major_: "uint8_t", minor_: "uint8_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_setFilterVersion(self, major_, minor_)

    def swap(self, other: "XsFilterProfile") -> "void":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile_swap(self, other)

    def __eq__(self, other: "XsFilterProfile") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsFilterProfile___eq__(self, other)

# Register XsFilterProfile in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsFilterProfile_swigregister(XsFilterProfile)

class XsFilterProfileArray(_XsFilterProfileArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsFilterProfileArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsFilterProfileArray(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsFilterProfileArray

# Register XsFilterProfileArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsFilterProfileArray_swigregister(XsFilterProfileArray)
g_xsFilterProfileArrayDescriptor = cvar.g_xsFilterProfileArrayDescriptor

XIR_BatteryLevel = _movelladot_pc_sdk_py39_64.XIR_BatteryLevel
XIR_GnssSvInfo = _movelladot_pc_sdk_py39_64.XIR_GnssSvInfo
class XsInt64Array(_XsInt64ArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsInt64Array_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsInt64Array(*args))

    def __str__(self) -> "std::string":
        return _movelladot_pc_sdk_py39_64.XsInt64Array___str__(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsInt64Array

# Register XsInt64Array in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsInt64Array_swigregister(XsInt64Array)
g_xsInt64ArrayDescriptor = cvar.g_xsInt64ArrayDescriptor

class XsIntArray(_XsIntArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsIntArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsIntArray(*args))

    def __str__(self) -> "std::string":
        return _movelladot_pc_sdk_py39_64.XsIntArray___str__(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsIntArray

# Register XsIntArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsIntArray_swigregister(XsIntArray)
g_xsIntArrayDescriptor = cvar.g_xsIntArrayDescriptor

class XsLibraryLoader(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        _movelladot_pc_sdk_py39_64.XsLibraryLoader_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsLibraryLoader())
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsLibraryLoader

    def load(self, libraryName: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsLibraryLoader_load(self, libraryName)

    def isLoaded(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsLibraryLoader_isLoaded(self)

    def resolve(self, functionName: "char const *") -> "void *":
        return _movelladot_pc_sdk_py39_64.XsLibraryLoader_resolve(self, functionName)

    def unload(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsLibraryLoader_unload(self)

    @staticmethod
    def errorString() -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsLibraryLoader_errorString()

# Register XsLibraryLoader in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsLibraryLoader_swigregister(XsLibraryLoader)

def XsLibraryLoader_errorString() -> "XsString":
    return _movelladot_pc_sdk_py39_64.XsLibraryLoader_errorString()


def xsMalloc(sz: "size_t") -> "void *":
    return _movelladot_pc_sdk_py39_64.xsMalloc(sz)

def xsRealloc(ptr: "void *", sz: "size_t") -> "void *":
    return _movelladot_pc_sdk_py39_64.xsRealloc(ptr, sz)

def xsFree(ptr: "void *") -> "void":
    return _movelladot_pc_sdk_py39_64.xsFree(ptr)

def xsAlignedMalloc(sz: "size_t") -> "void *":
    return _movelladot_pc_sdk_py39_64.xsAlignedMalloc(sz)

def xsAlignedRealloc(ptr: "void *", sz: "size_t") -> "void *":
    return _movelladot_pc_sdk_py39_64.xsAlignedRealloc(ptr, sz)

def xsAlignedFree(ptr: "void *") -> "void":
    return _movelladot_pc_sdk_py39_64.xsAlignedFree(ptr)
class XsMatrix3x3(XsMatrix):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsMatrix3x3

# Register XsMatrix3x3 in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsMatrix3x3_swigregister(XsMatrix3x3)

class XsMessageArray(_XsMessageArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsMessageArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsMessageArray(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsMessageArray

# Register XsMessageArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsMessageArray_swigregister(XsMessageArray)
g_xsMessageArrayDescriptor = cvar.g_xsMessageArrayDescriptor

MRV_Failed = _movelladot_pc_sdk_py39_64.MRV_Failed
MRV_Bad = _movelladot_pc_sdk_py39_64.MRV_Bad
MRV_Acceptable = _movelladot_pc_sdk_py39_64.MRV_Acceptable
MRV_Good = _movelladot_pc_sdk_py39_64.MRV_Good
MRV_Processing = _movelladot_pc_sdk_py39_64.MRV_Processing
MRV_Skipped = _movelladot_pc_sdk_py39_64.MRV_Skipped
MRV_Unknown = _movelladot_pc_sdk_py39_64.MRV_Unknown
XSO_None = _movelladot_pc_sdk_py39_64.XSO_None
XSO_Calibrate = _movelladot_pc_sdk_py39_64.XSO_Calibrate
XSO_Orientation = _movelladot_pc_sdk_py39_64.XSO_Orientation
XSO_KeepLastLiveData = _movelladot_pc_sdk_py39_64.XSO_KeepLastLiveData
XSO_RetainLiveData = _movelladot_pc_sdk_py39_64.XSO_RetainLiveData
XSO_RetainBufferedData = _movelladot_pc_sdk_py39_64.XSO_RetainBufferedData
XSO_OrientationInLiveStream = _movelladot_pc_sdk_py39_64.XSO_OrientationInLiveStream
XSO_OrientationInBufferedStream = _movelladot_pc_sdk_py39_64.XSO_OrientationInBufferedStream
XSO_ApplyOrientationResetToCalData = _movelladot_pc_sdk_py39_64.XSO_ApplyOrientationResetToCalData
XSO_InterpolateMissingData = _movelladot_pc_sdk_py39_64.XSO_InterpolateMissingData
XSO_SkipDataBundling = _movelladot_pc_sdk_py39_64.XSO_SkipDataBundling
XSO_ExpectNoRetransmissionsInFile = _movelladot_pc_sdk_py39_64.XSO_ExpectNoRetransmissionsInFile
XSO_Reserved = _movelladot_pc_sdk_py39_64.XSO_Reserved
XS_MAX_OUTPUTCONFIGURATIONS = _movelladot_pc_sdk_py39_64.XS_MAX_OUTPUTCONFIGURATIONS
class XsOutputConfiguration(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_dataIdentifier = property(_movelladot_pc_sdk_py39_64.XsOutputConfiguration_m_dataIdentifier_get, _movelladot_pc_sdk_py39_64.XsOutputConfiguration_m_dataIdentifier_set)
    m_frequency = property(_movelladot_pc_sdk_py39_64.XsOutputConfiguration_m_frequency_get, _movelladot_pc_sdk_py39_64.XsOutputConfiguration_m_frequency_set)

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsOutputConfiguration_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsOutputConfiguration(*args))

    def __eq__(self, other: "XsOutputConfiguration") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsOutputConfiguration___eq__(self, other)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsOutputConfiguration

# Register XsOutputConfiguration in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsOutputConfiguration_swigregister(XsOutputConfiguration)

class XsOutputConfigurationArray(_XsOutputConfigurationArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsOutputConfigurationArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsOutputConfigurationArray(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsOutputConfigurationArray

# Register XsOutputConfigurationArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsOutputConfigurationArray_swigregister(XsOutputConfigurationArray)
g_xsOutputConfigurationArrayDescriptor = cvar.g_xsOutputConfigurationArrayDescriptor

XSENS_VENDOR_ID = _movelladot_pc_sdk_py39_64.XSENS_VENDOR_ID
FTDI_VENDOR_ID = _movelladot_pc_sdk_py39_64.FTDI_VENDOR_ID
XPLO_Invalid = _movelladot_pc_sdk_py39_64.XPLO_Invalid
XPLO_RTS_Set = _movelladot_pc_sdk_py39_64.XPLO_RTS_Set
XPLO_RTS_Clear = _movelladot_pc_sdk_py39_64.XPLO_RTS_Clear
XPLO_RTS_Ignore = _movelladot_pc_sdk_py39_64.XPLO_RTS_Ignore
XPLO_DTR_Set = _movelladot_pc_sdk_py39_64.XPLO_DTR_Set
XPLO_DTR_Clear = _movelladot_pc_sdk_py39_64.XPLO_DTR_Clear
XPLO_DTR_Ignore = _movelladot_pc_sdk_py39_64.XPLO_DTR_Ignore
XPLO_All_Set = _movelladot_pc_sdk_py39_64.XPLO_All_Set
XPLO_All_Clear = _movelladot_pc_sdk_py39_64.XPLO_All_Clear
XPLO_All_Ignore = _movelladot_pc_sdk_py39_64.XPLO_All_Ignore
XPLO_RtsCtsFlowControl = _movelladot_pc_sdk_py39_64.XPLO_RtsCtsFlowControl
class XsPortInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsPortInfo_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsPortInfo(*args))

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_clear(self)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_empty(self)

    def __gt__(self, p: "XsPortInfo") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsPortInfo___gt__(self, p)

    def __lt__(self, p: "XsPortInfo") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsPortInfo___lt__(self, p)

    def __eq__(self, *args) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsPortInfo___eq__(self, *args)

    def portNumber(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_portNumber(self)

    def portName(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_portName(self)

    def portName_c_str(self) -> "char const *":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_portName_c_str(self)

    def setPortName(self, portName_: "XsString") -> "void":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_setPortName(self, portName_)

    def isUsb(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_isUsb(self)

    def isBluetooth(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_isBluetooth(self)

    def isNetwork(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_isNetwork(self)

    def networkServiceName(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_networkServiceName(self)

    def bluetoothAddress(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_bluetoothAddress(self)

    def usbBus(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_usbBus(self)

    def usbAddress(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_usbAddress(self)

    def baudrate(self) -> "XsBaudRate":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_baudrate(self)

    def setBaudrate(self, baudrate_: "XsBaudRate") -> "void":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_setBaudrate(self, baudrate_)

    def deviceId(self) -> "XsDeviceId":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_deviceId(self)

    def setDeviceId(self, deviceId_: "XsDeviceId") -> "void":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_setDeviceId(self, deviceId_)

    def linesOptions(self) -> "XsPortLinesOptions":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_linesOptions(self)

    def setLinesOptions(self, linesOptions: "XsPortLinesOptions") -> "void":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_setLinesOptions(self, linesOptions)

    def getVidPid(self, vid: "uint16_t &", pid: "uint16_t &") -> "void":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_getVidPid(self, vid, pid)

    def setVidPid(self, vid: "uint16_t", pid: "uint16_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsPortInfo_setVidPid(self, vid, pid)

    def __str__(self) -> "std::string":
        return _movelladot_pc_sdk_py39_64.XsPortInfo___str__(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsPortInfo

# Register XsPortInfo in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsPortInfo_swigregister(XsPortInfo)

class XsPortInfoArray(_XsPortInfoArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsPortInfoArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsPortInfoArray(*args))

    def __assign__(self, other: "XsPortInfoArray") -> "XsPortInfoArray &":
        return _movelladot_pc_sdk_py39_64.XsPortInfoArray___assign__(self, other)

    def __str__(self) -> "std::string":
        return _movelladot_pc_sdk_py39_64.XsPortInfoArray___str__(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsPortInfoArray

# Register XsPortInfoArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsPortInfoArray_swigregister(XsPortInfoArray)
g_xsPortInfoArrayDescriptor = cvar.g_xsPortInfoArrayDescriptor

XP_None = _movelladot_pc_sdk_py39_64.XP_None
XP_Xbus = _movelladot_pc_sdk_py39_64.XP_Xbus
XP_Nmea = _movelladot_pc_sdk_py39_64.XP_Nmea
XP_Rtcm = _movelladot_pc_sdk_py39_64.XP_Rtcm
class XsQuaternionArray(_XsQuaternionArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsQuaternionArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsQuaternionArray(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsQuaternionArray

# Register XsQuaternionArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsQuaternionArray_swigregister(XsQuaternionArray)
g_xsQuaternionArrayDescriptor = cvar.g_xsQuaternionArrayDescriptor

XRM_StoreAlignmentMatrix = _movelladot_pc_sdk_py39_64.XRM_StoreAlignmentMatrix
XRM_Heading = _movelladot_pc_sdk_py39_64.XRM_Heading
XRM_Object = _movelladot_pc_sdk_py39_64.XRM_Object
XRM_Inclination = _movelladot_pc_sdk_py39_64.XRM_Inclination
XRM_Alignment = _movelladot_pc_sdk_py39_64.XRM_Alignment
XRM_Global = _movelladot_pc_sdk_py39_64.XRM_Global
XRM_DefaultHeading = _movelladot_pc_sdk_py39_64.XRM_DefaultHeading
XRM_DefaultInclination = _movelladot_pc_sdk_py39_64.XRM_DefaultInclination
XRM_DefaultAlignment = _movelladot_pc_sdk_py39_64.XRM_DefaultAlignment
XRM_None = _movelladot_pc_sdk_py39_64.XRM_None
XS_RSSI_MAX = _movelladot_pc_sdk_py39_64.XS_RSSI_MAX
XS_RSSI_UNKNOWN = _movelladot_pc_sdk_py39_64.XS_RSSI_UNKNOWN

def unbiased(raw: "int") -> "int":
    return _movelladot_pc_sdk_py39_64.unbiased(raw)
HMT_MT = _movelladot_pc_sdk_py39_64.HMT_MT
HMT_None = _movelladot_pc_sdk_py39_64.HMT_None

def findHardwareTypeC(productCode: "XsString", resultValue: "XsString") -> "void":
    return _movelladot_pc_sdk_py39_64.findHardwareTypeC(productCode, resultValue)

def findHardwareManufacturerC(productCode: "XsString") -> "HardwareManufacturerType":
    return _movelladot_pc_sdk_py39_64.findHardwareManufacturerC(productCode)

def accelerometerRangeC(productCode: "XsString", hwVersionMajor: "int32_t") -> "double":
    return _movelladot_pc_sdk_py39_64.accelerometerRangeC(productCode, hwVersionMajor)

def gyroscopeRangeC(productCode: "XsString") -> "double":
    return _movelladot_pc_sdk_py39_64.gyroscopeRangeC(productCode)

def actualAccelerometerRangeC(productCode: "XsString", hwVersionMajor: "int32_t") -> "double":
    return _movelladot_pc_sdk_py39_64.actualAccelerometerRangeC(productCode, hwVersionMajor)

def actualGyroscopeRangeC(productCode: "XsString") -> "double":
    return _movelladot_pc_sdk_py39_64.actualGyroscopeRangeC(productCode)

def findHardwareType(productCode: "XsString") -> "XsString":
    return _movelladot_pc_sdk_py39_64.findHardwareType(productCode)

def findHardwareManufacturer(productCode: "XsString") -> "HardwareManufacturerType":
    return _movelladot_pc_sdk_py39_64.findHardwareManufacturer(productCode)

def accelerometerRange(productCode: "XsString", hwVersionMajor: "int32_t") -> "double":
    return _movelladot_pc_sdk_py39_64.accelerometerRange(productCode, hwVersionMajor)

def gyroscopeRange(productCode: "XsString") -> "double":
    return _movelladot_pc_sdk_py39_64.gyroscopeRange(productCode)

def actualAccelerometerRange(productCode: "XsString", hwVersionMajor: "int32_t") -> "double":
    return _movelladot_pc_sdk_py39_64.actualAccelerometerRange(productCode, hwVersionMajor)

def actualGyroscopeRange(productCode: "XsString") -> "double":
    return _movelladot_pc_sdk_py39_64.actualGyroscopeRange(productCode)
class XsSimpleVersion(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsSimpleVersion_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsSimpleVersion(*args))

    def __assign__(self, other: "XsSimpleVersion") -> "XsSimpleVersion &":
        return _movelladot_pc_sdk_py39_64.XsSimpleVersion___assign__(self, other)

    def __eq__(self, other: "XsSimpleVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSimpleVersion___eq__(self, other)

    def __ne__(self, other: "XsSimpleVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSimpleVersion___ne__(self, other)

    def __lt__(self, other: "XsSimpleVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSimpleVersion___lt__(self, other)

    def __le__(self, other: "XsSimpleVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSimpleVersion___le__(self, other)

    def __gt__(self, other: "XsSimpleVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSimpleVersion___gt__(self, other)

    def __ge__(self, other: "XsSimpleVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSimpleVersion___ge__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSimpleVersion_empty(self)

    def major(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsSimpleVersion_major(self)

    def minor(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsSimpleVersion_minor(self)

    def revision(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsSimpleVersion_revision(self)

    @staticmethod
    def osVersion() -> "XsSimpleVersion":
        return _movelladot_pc_sdk_py39_64.XsSimpleVersion_osVersion()
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsSimpleVersion

# Register XsSimpleVersion in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsSimpleVersion_swigregister(XsSimpleVersion)
bias = cvar.bias
max = cvar.max
unknown = cvar.unknown
maxUnbiased = cvar.maxUnbiased
unknownUnbiased = cvar.unknownUnbiased

def XsSimpleVersion_osVersion() -> "XsSimpleVersion":
    return _movelladot_pc_sdk_py39_64.XsSimpleVersion_osVersion()

IP_UDP = _movelladot_pc_sdk_py39_64.IP_UDP
IP_TCP = _movelladot_pc_sdk_py39_64.IP_TCP
NLP_IPV4 = _movelladot_pc_sdk_py39_64.NLP_IPV4
NLP_IPV6 = _movelladot_pc_sdk_py39_64.NLP_IPV6
NLP_IPVX = _movelladot_pc_sdk_py39_64.NLP_IPVX
XSO_ReuseAddress = _movelladot_pc_sdk_py39_64.XSO_ReuseAddress
XSO_ReusePort = _movelladot_pc_sdk_py39_64.XSO_ReusePort
XSSOCKET_INFINITE_TIMEOUT = _movelladot_pc_sdk_py39_64.XSSOCKET_INFINITE_TIMEOUT
class XsSocket(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, protocol: "IpProtocol", ipVersion: "NetworkLayerProtocol"=NLP_IPVX):
        _movelladot_pc_sdk_py39_64.XsSocket_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsSocket(protocol, ipVersion))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsSocket

    def close(self) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsSocket_close(self)

    def nativeDescriptor(self) -> "XSOCKET":
        return _movelladot_pc_sdk_py39_64.XsSocket_nativeDescriptor(self)

    def read(self, *args) -> "int":
        return _movelladot_pc_sdk_py39_64.XsSocket_read(self, *args)

    def readFrom(self, *args) -> "int":
        return _movelladot_pc_sdk_py39_64.XsSocket_readFrom(self, *args)

    def write(self, *args) -> "int":
        return _movelladot_pc_sdk_py39_64.XsSocket_write(self, *args)

    def writeTo(self, *args) -> "int":
        return _movelladot_pc_sdk_py39_64.XsSocket_writeTo(self, *args)

    def flush(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsSocket_flush(self)

    def select(self, mstimeout: "int", canRead: "int *", canWrite: "int *") -> "int":
        return _movelladot_pc_sdk_py39_64.XsSocket_select(self, mstimeout, canRead, canWrite)

    def accept(self, mstimeout: "int"=-1) -> "XsSocket *":
        return _movelladot_pc_sdk_py39_64.XsSocket_accept(self, mstimeout)

    def setSocketOption(self, *args) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsSocket_setSocketOption(self, *args)

    def bind(self, *args) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsSocket_bind(self, *args)

    def listen(self, maxPending: "int"=20) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsSocket_listen(self, maxPending)

    def connect(self, host: "XsString", port: "uint16_t") -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsSocket_connect(self, host, port)

    def isUsable(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSocket_isUsable(self)

    def getRemoteAddress(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsSocket_getRemoteAddress(self)

    def getLastSystemError(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsSocket_getLastSystemError(self)

    def broadcast(self, data: "void const *", size: "XsSize", port: "uint16_t") -> "int":
        return _movelladot_pc_sdk_py39_64.XsSocket_broadcast(self, data, size, port)

    def enableBroadcasts(self, enable: "bool") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSocket_enableBroadcasts(self, enable)

# Register XsSocket in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsSocket_swigregister(XsSocket)

XSF_SelfTestOk = _movelladot_pc_sdk_py39_64.XSF_SelfTestOk
XSF_OrientationValid = _movelladot_pc_sdk_py39_64.XSF_OrientationValid
XSF_GpsValid = _movelladot_pc_sdk_py39_64.XSF_GpsValid
XSF_NoRotationMask = _movelladot_pc_sdk_py39_64.XSF_NoRotationMask
XSF_NoRotationAborted = _movelladot_pc_sdk_py39_64.XSF_NoRotationAborted
XSF_NoRotationSamplesRejected = _movelladot_pc_sdk_py39_64.XSF_NoRotationSamplesRejected
XSF_NoRotationRunningNormally = _movelladot_pc_sdk_py39_64.XSF_NoRotationRunningNormally
XSF_RepresentativeMotion = _movelladot_pc_sdk_py39_64.XSF_RepresentativeMotion
XSF_ExternalClockSynced = _movelladot_pc_sdk_py39_64.XSF_ExternalClockSynced
XSF_FilterInputStart = _movelladot_pc_sdk_py39_64.XSF_FilterInputStart
XSF_ClipAccX = _movelladot_pc_sdk_py39_64.XSF_ClipAccX
XSF_ClipAccY = _movelladot_pc_sdk_py39_64.XSF_ClipAccY
XSF_ClipAccZ = _movelladot_pc_sdk_py39_64.XSF_ClipAccZ
XSF_ClipGyrX = _movelladot_pc_sdk_py39_64.XSF_ClipGyrX
XSF_ClipGyrY = _movelladot_pc_sdk_py39_64.XSF_ClipGyrY
XSF_ClipGyrZ = _movelladot_pc_sdk_py39_64.XSF_ClipGyrZ
XSF_ClipMagX = _movelladot_pc_sdk_py39_64.XSF_ClipMagX
XSF_ClipMagY = _movelladot_pc_sdk_py39_64.XSF_ClipMagY
XSF_ClipMagZ = _movelladot_pc_sdk_py39_64.XSF_ClipMagZ
XSF_Retransmitted = _movelladot_pc_sdk_py39_64.XSF_Retransmitted
XSF_ClippingDetected = _movelladot_pc_sdk_py39_64.XSF_ClippingDetected
XSF_Interpolated = _movelladot_pc_sdk_py39_64.XSF_Interpolated
XSF_SyncIn = _movelladot_pc_sdk_py39_64.XSF_SyncIn
XSF_SyncOut = _movelladot_pc_sdk_py39_64.XSF_SyncOut
XSF_FilterMode = _movelladot_pc_sdk_py39_64.XSF_FilterMode
XSF_HaveGnssTimePulse = _movelladot_pc_sdk_py39_64.XSF_HaveGnssTimePulse
XSF_RtkStatus = _movelladot_pc_sdk_py39_64.XSF_RtkStatus
XSFO_OffsetSelfTestOk = _movelladot_pc_sdk_py39_64.XSFO_OffsetSelfTestOk
XSFO_OffsetOrientationValid = _movelladot_pc_sdk_py39_64.XSFO_OffsetOrientationValid
XSFO_OffsetGpsValid = _movelladot_pc_sdk_py39_64.XSFO_OffsetGpsValid
XSFO_OffsetNoRotation = _movelladot_pc_sdk_py39_64.XSFO_OffsetNoRotation
XSFO_OffsetRepresentativeMotion = _movelladot_pc_sdk_py39_64.XSFO_OffsetRepresentativeMotion
XSFO_OffsetExternalClockSynced = _movelladot_pc_sdk_py39_64.XSFO_OffsetExternalClockSynced
XSFO_OffsetClipAccX = _movelladot_pc_sdk_py39_64.XSFO_OffsetClipAccX
XSFO_OffsetClipAccY = _movelladot_pc_sdk_py39_64.XSFO_OffsetClipAccY
XSFO_OffsetClipAccZ = _movelladot_pc_sdk_py39_64.XSFO_OffsetClipAccZ
XSFO_OffsetClipGyrX = _movelladot_pc_sdk_py39_64.XSFO_OffsetClipGyrX
XSFO_OffsetClipGyrY = _movelladot_pc_sdk_py39_64.XSFO_OffsetClipGyrY
XSFO_OffsetClipGyrZ = _movelladot_pc_sdk_py39_64.XSFO_OffsetClipGyrZ
XSFO_OffsetClipMagX = _movelladot_pc_sdk_py39_64.XSFO_OffsetClipMagX
XSFO_OffsetClipMagY = _movelladot_pc_sdk_py39_64.XSFO_OffsetClipMagY
XSFO_OffsetClipMagZ = _movelladot_pc_sdk_py39_64.XSFO_OffsetClipMagZ
XSFO_Retransmitted = _movelladot_pc_sdk_py39_64.XSFO_Retransmitted
XSFO_ClippingDetected = _movelladot_pc_sdk_py39_64.XSFO_ClippingDetected
XSFO_Interpolated = _movelladot_pc_sdk_py39_64.XSFO_Interpolated
XSFO_SyncIn = _movelladot_pc_sdk_py39_64.XSFO_SyncIn
XSFO_SyncOut = _movelladot_pc_sdk_py39_64.XSFO_SyncOut
XSFO_FilterMode = _movelladot_pc_sdk_py39_64.XSFO_FilterMode
XSFO_FilterModeNrOfBits = _movelladot_pc_sdk_py39_64.XSFO_FilterModeNrOfBits
XSFO_HaveGnssTimePulse = _movelladot_pc_sdk_py39_64.XSFO_HaveGnssTimePulse
XSFO_RtkStatus = _movelladot_pc_sdk_py39_64.XSFO_RtkStatus
XSFO_RtkStatusNrOfBits = _movelladot_pc_sdk_py39_64.XSFO_RtkStatusNrOfBits

def anyAccClipped(status: "int") -> "bool":
    return _movelladot_pc_sdk_py39_64.anyAccClipped(status)

def anyGyrClipped(status: "int") -> "bool":
    return _movelladot_pc_sdk_py39_64.anyGyrClipped(status)

def anyMagClipped(status: "int") -> "bool":
    return _movelladot_pc_sdk_py39_64.anyMagClipped(status)
class XsStatus(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsStatus_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsStatus(*args))

    def get(self) -> "XsStatusFlag":
        return _movelladot_pc_sdk_py39_64.XsStatus_get(self)

    def set(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsStatus_set(self, *args)

    def __assign__(self, *args) -> "XsStatus const &":
        return _movelladot_pc_sdk_py39_64.XsStatus___assign__(self, *args)

    def __logior_assign__(self, *args) -> "XsStatus const &":
        return _movelladot_pc_sdk_py39_64.XsStatus___logior_assign__(self, *args)

    def __logand_assign__(self, *args) -> "XsStatus const &":
        return _movelladot_pc_sdk_py39_64.XsStatus___logand_assign__(self, *args)

    def anyAccClipped(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsStatus_anyAccClipped(self)

    def anyGyrClipped(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsStatus_anyGyrClipped(self)

    def anyMagClipped(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsStatus_anyMagClipped(self)

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsStatus_clear(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsStatus

# Register XsStatus in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsStatus_swigregister(XsStatus)

class XsStringArray(_XsStringArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def join(self, separator: "XsString") -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsStringArray_join(self, separator)

    def fromSplicedString(self, src: "XsString", separators: "XsString") -> "void":
        return _movelladot_pc_sdk_py39_64.XsStringArray_fromSplicedString(self, src, separators)

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsStringArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsStringArray(*args))

    def find(self, needle: "XsString", isCaseSensitive: "bool"=True) -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64.XsStringArray_find(self, needle, isCaseSensitive)

    def findPrefix(self, needle: "XsString", isCaseSensitive: "bool"=True) -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64.XsStringArray_findPrefix(self, needle, isCaseSensitive)

    def __str__(self) -> "std::string":
        return _movelladot_pc_sdk_py39_64.XsStringArray___str__(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsStringArray

# Register XsStringArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsStringArray_swigregister(XsStringArray)
g_xsStringArrayDescriptor = cvar.g_xsStringArrayDescriptor

XSOT_None = _movelladot_pc_sdk_py39_64.XSOT_None
XSOT_HCHDM = _movelladot_pc_sdk_py39_64.XSOT_HCHDM
XSOT_HCHDG = _movelladot_pc_sdk_py39_64.XSOT_HCHDG
XSOT_TSS2 = _movelladot_pc_sdk_py39_64.XSOT_TSS2
XSOT_PHTRO = _movelladot_pc_sdk_py39_64.XSOT_PHTRO
XSOT_PRDID = _movelladot_pc_sdk_py39_64.XSOT_PRDID
XSOT_EM1000 = _movelladot_pc_sdk_py39_64.XSOT_EM1000
XSOT_PSONCMS = _movelladot_pc_sdk_py39_64.XSOT_PSONCMS
XSOT_HCMTW = _movelladot_pc_sdk_py39_64.XSOT_HCMTW
XSOT_HEHDT = _movelladot_pc_sdk_py39_64.XSOT_HEHDT
XSOT_HEROT = _movelladot_pc_sdk_py39_64.XSOT_HEROT
XSOT_GPGGA = _movelladot_pc_sdk_py39_64.XSOT_GPGGA
XSOT_PTCF = _movelladot_pc_sdk_py39_64.XSOT_PTCF
XSOT_XSVEL = _movelladot_pc_sdk_py39_64.XSOT_XSVEL
XSOT_GPZDA = _movelladot_pc_sdk_py39_64.XSOT_GPZDA
XSOT_GPRMC = _movelladot_pc_sdk_py39_64.XSOT_GPRMC
class XsStringOutputTypeArray(_XsStringOutputTypeArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsStringOutputTypeArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsStringOutputTypeArray(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsStringOutputTypeArray

# Register XsStringOutputTypeArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsStringOutputTypeArray_swigregister(XsStringOutputTypeArray)
g_xsStringOutputTypeArrayDescriptor = cvar.g_xsStringOutputTypeArrayDescriptor

XSF_StartRecordingIn = _movelladot_pc_sdk_py39_64.XSF_StartRecordingIn
XSF_StopRecordingIn = _movelladot_pc_sdk_py39_64.XSF_StopRecordingIn
XSF_ResetTimer = _movelladot_pc_sdk_py39_64.XSF_ResetTimer
XSF_TriggerIndication = _movelladot_pc_sdk_py39_64.XSF_TriggerIndication
XSF_IntervalTransitionMeasurement = _movelladot_pc_sdk_py39_64.XSF_IntervalTransitionMeasurement
XSF_IntervalTransitionRecording = _movelladot_pc_sdk_py39_64.XSF_IntervalTransitionRecording
XSF_GotoOperational = _movelladot_pc_sdk_py39_64.XSF_GotoOperational
XSF_SampleAndSend = _movelladot_pc_sdk_py39_64.XSF_SampleAndSend
XSF_SendLatest = _movelladot_pc_sdk_py39_64.XSF_SendLatest
XSF_ClockBiasEstimation = _movelladot_pc_sdk_py39_64.XSF_ClockBiasEstimation
XSF_PulseWithModulation = _movelladot_pc_sdk_py39_64.XSF_PulseWithModulation
XSF_StartSampling = _movelladot_pc_sdk_py39_64.XSF_StartSampling
XSF_StartRecordingOut = _movelladot_pc_sdk_py39_64.XSF_StartRecordingOut
XSF_StopRecordingOut = _movelladot_pc_sdk_py39_64.XSF_StopRecordingOut
XSF_Gnss1Pps = _movelladot_pc_sdk_py39_64.XSF_Gnss1Pps
XSF_BusSync = _movelladot_pc_sdk_py39_64.XSF_BusSync
XSF_Invalid = _movelladot_pc_sdk_py39_64.XSF_Invalid
XSF_Count = _movelladot_pc_sdk_py39_64.XSF_Count
XSL_Inputs = _movelladot_pc_sdk_py39_64.XSL_Inputs
XSL_In1 = _movelladot_pc_sdk_py39_64.XSL_In1
XSL_In2 = _movelladot_pc_sdk_py39_64.XSL_In2
XSL_In3 = _movelladot_pc_sdk_py39_64.XSL_In3
XSL_Bi1In = _movelladot_pc_sdk_py39_64.XSL_Bi1In
XSL_ClockIn = _movelladot_pc_sdk_py39_64.XSL_ClockIn
XSL_CtsIn = _movelladot_pc_sdk_py39_64.XSL_CtsIn
XSL_GnssClockIn = _movelladot_pc_sdk_py39_64.XSL_GnssClockIn
XSL_ExtTimepulseIn = _movelladot_pc_sdk_py39_64.XSL_ExtTimepulseIn
XSL_ReqData = _movelladot_pc_sdk_py39_64.XSL_ReqData
XSL_Gnss1Pps = _movelladot_pc_sdk_py39_64.XSL_Gnss1Pps
XSL_Outputs = _movelladot_pc_sdk_py39_64.XSL_Outputs
XSL_Out1 = _movelladot_pc_sdk_py39_64.XSL_Out1
XSL_Out2 = _movelladot_pc_sdk_py39_64.XSL_Out2
XSL_Bi1Out = _movelladot_pc_sdk_py39_64.XSL_Bi1Out
XSL_RtsOut = _movelladot_pc_sdk_py39_64.XSL_RtsOut
XSL_Invalid = _movelladot_pc_sdk_py39_64.XSL_Invalid
XSP_None = _movelladot_pc_sdk_py39_64.XSP_None
XSP_RisingEdge = _movelladot_pc_sdk_py39_64.XSP_RisingEdge
XSP_PositivePulse = _movelladot_pc_sdk_py39_64.XSP_PositivePulse
XSP_FallingEdge = _movelladot_pc_sdk_py39_64.XSP_FallingEdge
XSP_NegativePulse = _movelladot_pc_sdk_py39_64.XSP_NegativePulse
XSP_Both = _movelladot_pc_sdk_py39_64.XSP_Both
XSR_Slave = _movelladot_pc_sdk_py39_64.XSR_Slave
XSR_None = _movelladot_pc_sdk_py39_64.XSR_None
XSR_MasterSlave = _movelladot_pc_sdk_py39_64.XSR_MasterSlave
XSR_Master = _movelladot_pc_sdk_py39_64.XSR_Master
class XsSyncSetting(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    m_line = property(_movelladot_pc_sdk_py39_64.XsSyncSetting_m_line_get, _movelladot_pc_sdk_py39_64.XsSyncSetting_m_line_set)
    m_function = property(_movelladot_pc_sdk_py39_64.XsSyncSetting_m_function_get, _movelladot_pc_sdk_py39_64.XsSyncSetting_m_function_set)
    m_polarity = property(_movelladot_pc_sdk_py39_64.XsSyncSetting_m_polarity_get, _movelladot_pc_sdk_py39_64.XsSyncSetting_m_polarity_set)
    m_pulseWidth = property(_movelladot_pc_sdk_py39_64.XsSyncSetting_m_pulseWidth_get, _movelladot_pc_sdk_py39_64.XsSyncSetting_m_pulseWidth_set)
    m_offset = property(_movelladot_pc_sdk_py39_64.XsSyncSetting_m_offset_get, _movelladot_pc_sdk_py39_64.XsSyncSetting_m_offset_set)
    m_skipFirst = property(_movelladot_pc_sdk_py39_64.XsSyncSetting_m_skipFirst_get, _movelladot_pc_sdk_py39_64.XsSyncSetting_m_skipFirst_set)
    m_skipFactor = property(_movelladot_pc_sdk_py39_64.XsSyncSetting_m_skipFactor_get, _movelladot_pc_sdk_py39_64.XsSyncSetting_m_skipFactor_set)
    m_clockPeriod = property(_movelladot_pc_sdk_py39_64.XsSyncSetting_m_clockPeriod_get, _movelladot_pc_sdk_py39_64.XsSyncSetting_m_clockPeriod_set)
    m_triggerOnce = property(_movelladot_pc_sdk_py39_64.XsSyncSetting_m_triggerOnce_get, _movelladot_pc_sdk_py39_64.XsSyncSetting_m_triggerOnce_set)
    m_padding = property(_movelladot_pc_sdk_py39_64.XsSyncSetting_m_padding_get, _movelladot_pc_sdk_py39_64.XsSyncSetting_m_padding_set)

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsSyncSetting_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsSyncSetting(*args))

    def __assign__(self, other: "XsSyncSetting") -> "XsSyncSetting const &":
        return _movelladot_pc_sdk_py39_64.XsSyncSetting___assign__(self, other)

    def isInput(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSyncSetting_isInput(self)

    def isOutput(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSyncSetting_isOutput(self)

    def swap(self, other: "XsSyncSetting") -> "void":
        return _movelladot_pc_sdk_py39_64.XsSyncSetting_swap(self, other)

    def __eq__(self, other: "XsSyncSetting") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSyncSetting___eq__(self, other)

    def __ne__(self, other: "XsSyncSetting") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSyncSetting___ne__(self, other)

    def __lt__(self, other: "XsSyncSetting") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsSyncSetting___lt__(self, other)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsSyncSetting

# Register XsSyncSetting in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsSyncSetting_swigregister(XsSyncSetting)

def swap(*args) -> "void":
    return _movelladot_pc_sdk_py39_64.swap(*args)

class XsSyncSettingArray(_XsSyncSettingArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsSyncSettingArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsSyncSettingArray(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsSyncSettingArray

# Register XsSyncSettingArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsSyncSettingArray_swigregister(XsSyncSettingArray)
g_xsSyncSettingArrayDescriptor = cvar.g_xsSyncSettingArrayDescriptor


def getTimeOfDay(date_: "tm *"=None, secs_: "time_t *"=None) -> "uint32_t":
    return _movelladot_pc_sdk_py39_64.getTimeOfDay(date_, secs_)

def getDateTime(date: "tm *"=None) -> "int64_t":
    return _movelladot_pc_sdk_py39_64.getDateTime(date)

def getDateAsString(*args) -> "XsString":
    return _movelladot_pc_sdk_py39_64.getDateAsString(*args)

def getTimeAsString(*args) -> "XsString":
    return _movelladot_pc_sdk_py39_64.getTimeAsString(*args)

def msleep(ms: "uint32_t") -> "void":
    return _movelladot_pc_sdk_py39_64.msleep(ms)

def udelay(us: "uint64_t") -> "void":
    return _movelladot_pc_sdk_py39_64.udelay(us)

def initializeTime() -> "void":
    return _movelladot_pc_sdk_py39_64.initializeTime()

def timeStampNow(now: "XsTimeStamp"=None) -> "int64_t":
    return _movelladot_pc_sdk_py39_64.timeStampNow(now)
WINVER = _movelladot_pc_sdk_py39_64.WINVER
_WIN32_WINNT = _movelladot_pc_sdk_py39_64._WIN32_WINNT
_WIN32_WINDOWS = _movelladot_pc_sdk_py39_64._WIN32_WINDOWS
_WIN32_IE = _movelladot_pc_sdk_py39_64._WIN32_IE
XS_THREAD_PRIORITY_LOWEST = _movelladot_pc_sdk_py39_64.XS_THREAD_PRIORITY_LOWEST
XS_THREAD_PRIORITY_LOWER = _movelladot_pc_sdk_py39_64.XS_THREAD_PRIORITY_LOWER
XS_THREAD_PRIORITY_LOW = _movelladot_pc_sdk_py39_64.XS_THREAD_PRIORITY_LOW
XS_THREAD_PRIORITY_NORMAL = _movelladot_pc_sdk_py39_64.XS_THREAD_PRIORITY_NORMAL
XS_THREAD_PRIORITY_HIGH = _movelladot_pc_sdk_py39_64.XS_THREAD_PRIORITY_HIGH
XS_THREAD_PRIORITY_HIGHER = _movelladot_pc_sdk_py39_64.XS_THREAD_PRIORITY_HIGHER
XS_THREAD_PRIORITY_HIGHEST = _movelladot_pc_sdk_py39_64.XS_THREAD_PRIORITY_HIGHEST

def xsNameThisThread(threadName: "char const *") -> "void":
    return _movelladot_pc_sdk_py39_64.xsNameThisThread(threadName)
XSENS_USE_POSIX_LOCKING = _movelladot_pc_sdk_py39_64.XSENS_USE_POSIX_LOCKING

def xstypesPath(path: "XsString") -> "void":
    return _movelladot_pc_sdk_py39_64.xstypesPath(path)
class XsVersion(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsVersion_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsVersion(*args))

    def __assign__(self, other: "XsVersion") -> "XsVersion &":
        return _movelladot_pc_sdk_py39_64.XsVersion___assign__(self, other)

    def isEqual(self, other: "XsVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsVersion_isEqual(self, other)

    def __eq__(self, other: "XsVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsVersion___eq__(self, other)

    def __ne__(self, other: "XsVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsVersion___ne__(self, other)

    def __lt__(self, other: "XsVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsVersion___lt__(self, other)

    def __le__(self, other: "XsVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsVersion___le__(self, other)

    def __gt__(self, other: "XsVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsVersion___gt__(self, other)

    def __ge__(self, other: "XsVersion") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsVersion___ge__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsVersion_empty(self)

    def toXsString(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsVersion_toXsString(self)

    def toSimpleString(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsVersion_toSimpleString(self)

    def toSimpleVersion(self) -> "XsSimpleVersion":
        return _movelladot_pc_sdk_py39_64.XsVersion_toSimpleVersion(self)

    def major(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsVersion_major(self)

    def minor(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsVersion_minor(self)

    def revision(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsVersion_revision(self)

    def build(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsVersion_build(self)

    def reposVersion(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsVersion_reposVersion(self)

    def extra(self) -> "XsString const &":
        return _movelladot_pc_sdk_py39_64.XsVersion_extra(self)

    def setMajor(self, major: "int") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVersion_setMajor(self, major)

    def setMinor(self, minor: "int") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVersion_setMinor(self, minor)

    def setRevision(self, revision: "int") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVersion_setRevision(self, revision)

    def setBuild(self, build: "int") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVersion_setBuild(self, build)

    def setReposVersion(self, reposVersion: "int") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVersion_setReposVersion(self, reposVersion)

    def setExtra(self, extra: "XsString") -> "void":
        return _movelladot_pc_sdk_py39_64.XsVersion_setExtra(self, extra)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsVersion

# Register XsVersion in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsVersion_swigregister(XsVersion)
XsTime_secPerDay = cvar.XsTime_secPerDay
XsTime_milliSecPerDay = cvar.XsTime_milliSecPerDay
XsTime_timeStampMax = cvar.XsTime_timeStampMax
secPerDay = cvar.secPerDay
milliSecPerDay = cvar.milliSecPerDay
timeStampMax = cvar.timeStampMax


def xsTypesVersion(*args) -> "XsVersion":
    return _movelladot_pc_sdk_py39_64.xsTypesVersion(*args)

def isDoubleScalar(pyObj: "PyObject *", value: "double *") -> "bool":
    return _movelladot_pc_sdk_py39_64.isDoubleScalar(pyObj, value)
class BooleanExit(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, rv: "bool"):
        _movelladot_pc_sdk_py39_64.BooleanExit_swiginit(self, _movelladot_pc_sdk_py39_64.new_BooleanExit(rv))
    m_returnValue = property(_movelladot_pc_sdk_py39_64.BooleanExit_m_returnValue_get)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_BooleanExit

# Register BooleanExit in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.BooleanExit_swigregister(BooleanExit)


def xsVectorCreateGeneric(xsOrigin: "XsVectorOrigin &", argNum: "int"=0) -> "bool":
    return _movelladot_pc_sdk_py39_64.xsVectorCreateGeneric(xsOrigin, argNum)

def isXsVector(src: "PyObject *", flags: "int") -> "bool":
    return _movelladot_pc_sdk_py39_64.isXsVector(src, flags)

def xsMatrixCreateGeneric(xsOrigin: "XsMatrixOrigin &", argNum: "int"=0) -> "bool":
    return _movelladot_pc_sdk_py39_64.xsMatrixCreateGeneric(xsOrigin, argNum)

def isXsMatrix(src: "PyObject *", flags: "int") -> "bool":
    return _movelladot_pc_sdk_py39_64.isXsMatrix(src, flags)

def xsQuaternionCreateGeneric(xsOrigin: "XsQuaternionOrigin &", argNum: "int"=0) -> "bool":
    return _movelladot_pc_sdk_py39_64.xsQuaternionCreateGeneric(xsOrigin, argNum)

def isXsQuaternion(src: "PyObject *", flags: "int") -> "bool":
    return _movelladot_pc_sdk_py39_64.isXsQuaternion(src, flags)

def xsVector(*args) -> "PyObject *":
    return _movelladot_pc_sdk_py39_64.xsVector(*args)

def xsMatrix(*args) -> "PyObject *":
    return _movelladot_pc_sdk_py39_64.xsMatrix(*args)

def xsQuaternion(*args) -> "PyObject *":
    return _movelladot_pc_sdk_py39_64.xsQuaternion(*args)

_swigLib = _movelladot_pc_sdk_py39_64

class XsDataPacketPtrArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsDataPacketPtrArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsDataPacketPtrArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_clear(self)

    def __eq__(self, other: "XsDataPacketPtrArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___eq__(self, other)

    def __ne__(self, other: "XsDataPacketPtrArrayImpl") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_descriptor(self)

    def first(self) -> "XsDataPacket *":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_first(self)

    def last(self) -> "XsDataPacket *":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_last(self)

    def insert(self, item: "XsDataPacket", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsDataPacket") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsDataPacket") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsDataPacket *const *") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_setSize(self, count)

    def append(self, other: "XsDataPacketPtrArrayImpl") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_append(self, other)

    def __assign__(self, other: "XsDataPacketPtrArrayImpl") -> "XsArrayImpl< XsDataPacket *,g_xsDataPacketPtrArrayDescriptor,XsDataPacketPtrArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_swap(self, *args)

    def find(self, needle: "XsDataPacket") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_find(self, needle)

    def contains(self, needle: "XsDataPacket") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsDataPacket *":

        index = int(index)


        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsDataPacket") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsDataPacket") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsDataPacketPtrArray") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsDataPacketPtrArray") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsDataPacketPtrArray") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsDataPacket") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsDataPacketPtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl___delitem__(self, index)

# Register XsDataPacketPtrArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsDataPacketPtrArrayImpl_swigregister(XsDataPacketPtrArrayImpl)

class XsDotDevicePtrArrayImpl(collections.abc.MutableSequence):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsDotDevicePtrArrayImpl(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsDotDevicePtrArrayImpl

    def clear(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_clear(self)

    def __eq__(self, other: "XsArrayImpl< XsDotDevicePtr,g_xsDotDevicePtrArrayDescriptor,XsDotDevicePtrArray >::ArrayImpl const &") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___eq__(self, other)

    def __ne__(self, other: "XsArrayImpl< XsDotDevicePtr,g_xsDotDevicePtrArrayDescriptor,XsDotDevicePtrArray >::ArrayImpl const &") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___ne__(self, other)

    def reserve(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_reserve(self, count)

    def reserved(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_reserved(self)

    def descriptor(self) -> "XsArrayDescriptor const &":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_descriptor(self)

    def first(self) -> "XsDotDevicePtr":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_first(self)

    def last(self) -> "XsDotDevicePtr":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_last(self)

    def insert(self, item: "XsDotDevice", index: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_insert(self, item, index)

    def push_back(self, item: "XsDotDevice") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_push_back(self, item)

    def pop_back(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_pop_back(self, count)

    def push_front(self, item: "XsDotDevice") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_push_front(self, item)

    def pop_front(self, count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_pop_front(self, count)

    def size(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_size(self)

    def erase(self, index: "XsSize", count: "XsSize"=1) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_erase(self, index, count)

    def assign(self, count: "XsSize", src: "XsDotDevicePtr const *") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_assign(self, count, src)

    def resize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_resize(self, count)

    def setSize(self, count: "XsSize") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_setSize(self, count)

    def append(self, other: "XsArrayImpl< XsDotDevicePtr,g_xsDotDevicePtrArrayDescriptor,XsDotDevicePtrArray >::ArrayImpl const &") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_append(self, other)

    def __assign__(self, other: "XsArrayImpl< XsDotDevicePtr,g_xsDotDevicePtrArrayDescriptor,XsDotDevicePtrArray >::ArrayImpl const &") -> "XsArrayImpl< XsDotDevicePtr,g_xsDotDevicePtrArrayDescriptor,XsDotDevicePtrArray >::ArrayImpl &":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___assign__(self, other)

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_empty(self)

    def badAlloc(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_badAlloc(self)

    def swap(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_swap(self, *args)

    def find(self, needle: "XsDotDevice") -> "ptrdiff_t":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_find(self, needle)

    def contains(self, needle: "XsDotDevice") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_contains(self, needle)

    def removeDuplicates(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_removeDuplicates(self)

    def removeDuplicatesPredicate(self, predicate: "XsArrayItemCompareFunc") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_removeDuplicatesPredicate(self, predicate)

    def sort(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_sort(self)

    def reverse(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_reverse(self)

    def getItem(self, index: "XsSize") -> "XsDotDevicePtr":

        index = int(index)


        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_getItem(self, index)


    def __setitem__(self, index: "XsSize", val: "XsDotDevice") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___setitem__(self, index, val)

    def setItem(self, index: "XsSize", val: "XsDotDevice") -> "void":

        index = int(index)


        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_setItem(self, index, val)


    def __len__(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___len__(self)

    def __getitem__(self, *args) -> "XsDotDevicePtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___getitem__(self, *args)

    def __add__(self, other: "XsDotDevicePtrArray") -> "XsDotDevicePtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___add__(self, other)

    def __iadd__(self, other: "XsDotDevicePtrArray") -> "XsDotDevicePtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___iadd__(self, other)

    def __radd__(self, other: "XsDotDevicePtrArray") -> "XsDotDevicePtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___radd__(self, other)

    def __mul__(self, count: "int") -> "XsDotDevicePtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___mul__(self, count)

    def __imul__(self, count: "int") -> "XsDotDevicePtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___imul__(self, count)

    def __rmul__(self, count: "int") -> "XsDotDevicePtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___rmul__(self, count)

    def __contains__(self, val: "XsDotDevice") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___contains__(self, val)

    def __reversed__(self) -> "XsDotDevicePtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___reversed__(self)

    def __delitem__(self, index: "XsSize") -> "XsDotDevicePtrArray *":
        return _movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl___delitem__(self, index)

# Register XsDotDevicePtrArrayImpl in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsDotDevicePtrArrayImpl_swigregister(XsDotDevicePtrArrayImpl)


def xsdotsdkDllVersion(version: "XsVersion") -> "void":
    return _movelladot_pc_sdk_py39_64.xsdotsdkDllVersion(version)

def xsdotsdkDllPath(path: "XsString") -> "void":
    return _movelladot_pc_sdk_py39_64.xsdotsdkDllPath(path)
XDS_Initial = _movelladot_pc_sdk_py39_64.XDS_Initial
XDS_Config = _movelladot_pc_sdk_py39_64.XDS_Config
XDS_Idle = _movelladot_pc_sdk_py39_64.XDS_Idle
XDS_Measurement = _movelladot_pc_sdk_py39_64.XDS_Measurement
XDS_WaitingForRecordingStart = _movelladot_pc_sdk_py39_64.XDS_WaitingForRecordingStart
XDS_Recording = _movelladot_pc_sdk_py39_64.XDS_Recording
XDS_FlushingData = _movelladot_pc_sdk_py39_64.XDS_FlushingData
XDS_Destructing = _movelladot_pc_sdk_py39_64.XDS_Destructing
XDS_Exporting = _movelladot_pc_sdk_py39_64.XDS_Exporting
XDS_Synchronizing = _movelladot_pc_sdk_py39_64.XDS_Synchronizing
XsDotFirmwareUpdateResult_Success = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_Success
XsDotFirmwareUpdateResult_NoUsb = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_NoUsb
XsDotFirmwareUpdateResult_NoFwFile = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_NoFwFile
XsDotFirmwareUpdateResult_IncorrectFwFile = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_IncorrectFwFile
XsDotFirmwareUpdateResult_CommunicationFailure = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_CommunicationFailure
XsDotFirmwareUpdateResult_FailedToStart = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_FailedToStart
XsDotFirmwareUpdateResult_FailedToEnd = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_FailedToEnd
XsDotFirmwareUpdateResult_BootloaderFail = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_BootloaderFail
XsDotFirmwareUpdateResult_ErrorPreamble = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorPreamble
XsDotFirmwareUpdateResult_ErrorCmd = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorCmd
XsDotFirmwareUpdateResult_ErrorOperating = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorOperating
XsDotFirmwareUpdateResult_ErrorPacketCrc = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorPacketCrc
XsDotFirmwareUpdateResult_ErrorImageCrc = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorImageCrc
XsDotFirmwareUpdateResult_ErrorIndex = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorIndex
XsDotFirmwareUpdateResult_ErrorFlash = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorFlash
XsDotFirmwareUpdateResult_ErrorDischarging = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorDischarging
XsDotFirmwareUpdateResult_ErrorRecording = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorRecording
XsDotFirmwareUpdateResult_ErrorDownloadNoCurl = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorDownloadNoCurl
XsDotFirmwareUpdateResult_ErrorDownloadNoCurlPerform = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorDownloadNoCurlPerform
XsDotFirmwareUpdateResult_ErrorDownloadNoCurlGetInfo = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorDownloadNoCurlGetInfo
XsDotFirmwareUpdateResult_ErrorDownloadCurlEmptyContent = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorDownloadCurlEmptyContent
XsDotFirmwareUpdateResult_ErrorUnknown = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_ErrorUnknown
XsDotFirmwareUpdateResult_NoNewFWAvailable = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_NoNewFWAvailable
XsDotFirmwareUpdateResult_InitialValue = _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResult_InitialValue

def XsDotFirmwareUpdateResultToString(result: "XsDotFirmwareUpdateResult") -> "char const *":
    return _movelladot_pc_sdk_py39_64.XsDotFirmwareUpdateResultToString(result)
class XsDotCallback(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self):
        if self.__class__ == XsDotCallback:
            _self = None
        else:
            _self = self
        _movelladot_pc_sdk_py39_64.XsDotCallback_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsDotCallback(_self, ))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsDotCallback

    def onAdvertisementFound(self, portInfo: "XsPortInfo") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotCallback_onAdvertisementFound(self, portInfo)

    def onBatteryUpdated(self, device: "XsDotDevice", batteryLevel: "int", chargingStatus: "int") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotCallback_onBatteryUpdated(self, device, batteryLevel, chargingStatus)

    def onLiveDataAvailable(self, device: "XsDotDevice", packet: "XsDataPacket") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotCallback_onLiveDataAvailable(self, device, packet)

    def onDeviceUpdateDone(self, portInfo: "XsPortInfo", result: "XsDotFirmwareUpdateResult") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotCallback_onDeviceUpdateDone(self, portInfo, result)

    def onError(self, result: "XsResultValue", error: "XsString") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotCallback_onError(self, result, error)

    def onRecordingStopped(self, device: "XsDotDevice") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotCallback_onRecordingStopped(self, device)

    def onDeviceStateChanged(self, dev: "XsDotDevice", newState: "XsDeviceState", oldState: "XsDeviceState") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotCallback_onDeviceStateChanged(self, dev, newState, oldState)

    def onButtonClicked(self, dev: "XsDotDevice", timestamp: "uint32_t") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotCallback_onButtonClicked(self, dev, timestamp)

    def onProgressUpdated(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotCallback_onProgressUpdated(self, *args)

    def onRecordedDataAvailable(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotCallback_onRecordedDataAvailable(self, *args)

    def onRecordedDataDone(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotCallback_onRecordedDataDone(self, *args)
    def __disown__(self):
        self.this.disown()
        _movelladot_pc_sdk_py39_64.disown_XsDotCallback(self)
        return weakref.proxy(self)

# Register XsDotCallback in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsDotCallback_swigregister(XsDotCallback)

class XsDotDevicePtrArray(XsDotDevicePtrArrayImpl):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsDotDevicePtrArray_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsDotDevicePtrArray(*args))
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsDotDevicePtrArray

# Register XsDotDevicePtrArray in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsDotDevicePtrArray_swigregister(XsDotDevicePtrArray)
g_xsDotDevicePtrArrayDescriptor = cvar.g_xsDotDevicePtrArrayDescriptor

XsPayloadMode_Undefined = _movelladot_pc_sdk_py39_64.XsPayloadMode_Undefined
XsPayloadMode_HighFidelitywMag = _movelladot_pc_sdk_py39_64.XsPayloadMode_HighFidelitywMag
XsPayloadMode_ExtendedQuaternion = _movelladot_pc_sdk_py39_64.XsPayloadMode_ExtendedQuaternion
XsPayloadMode_CompleteQuaternion = _movelladot_pc_sdk_py39_64.XsPayloadMode_CompleteQuaternion
XsPayloadMode_OrientationEuler = _movelladot_pc_sdk_py39_64.XsPayloadMode_OrientationEuler
XsPayloadMode_OrientationQuaternion = _movelladot_pc_sdk_py39_64.XsPayloadMode_OrientationQuaternion
XsPayloadMode_FreeAcceleration = _movelladot_pc_sdk_py39_64.XsPayloadMode_FreeAcceleration
XsPayloadMode_ExtendedEuler = _movelladot_pc_sdk_py39_64.XsPayloadMode_ExtendedEuler
XsPayloadMode_MFM = _movelladot_pc_sdk_py39_64.XsPayloadMode_MFM
XsPayloadMode_CompleteEuler = _movelladot_pc_sdk_py39_64.XsPayloadMode_CompleteEuler
XsPayloadMode_HighFidelity = _movelladot_pc_sdk_py39_64.XsPayloadMode_HighFidelity
XsPayloadMode_DeltaQuantitieswMag = _movelladot_pc_sdk_py39_64.XsPayloadMode_DeltaQuantitieswMag
XsPayloadMode_DeltaQuantities = _movelladot_pc_sdk_py39_64.XsPayloadMode_DeltaQuantities
XsPayloadMode_RateQuantitieswMag = _movelladot_pc_sdk_py39_64.XsPayloadMode_RateQuantitieswMag
XsPayloadMode_RateQuantities = _movelladot_pc_sdk_py39_64.XsPayloadMode_RateQuantities
XsPayloadMode_CustomMode1 = _movelladot_pc_sdk_py39_64.XsPayloadMode_CustomMode1
XsPayloadMode_CustomMode2 = _movelladot_pc_sdk_py39_64.XsPayloadMode_CustomMode2
XsPayloadMode_CustomMode3 = _movelladot_pc_sdk_py39_64.XsPayloadMode_CustomMode3
XsPayloadMode_CustomMode4 = _movelladot_pc_sdk_py39_64.XsPayloadMode_CustomMode4
XsPayloadMode_CustomMode5 = _movelladot_pc_sdk_py39_64.XsPayloadMode_CustomMode5

def XsPayloadModeToString(mode: "XsPayloadMode") -> "char const *":
    return _movelladot_pc_sdk_py39_64.XsPayloadModeToString(mode)
XsLogOptions_Quaternion = _movelladot_pc_sdk_py39_64.XsLogOptions_Quaternion
XsLogOptions_Euler = _movelladot_pc_sdk_py39_64.XsLogOptions_Euler
XsLogOptions_QuaternionAndEuler = _movelladot_pc_sdk_py39_64.XsLogOptions_QuaternionAndEuler
XsLogOptions_OrientationMask = _movelladot_pc_sdk_py39_64.XsLogOptions_OrientationMask
XsRecordingAcknowledgeResult_Success = _movelladot_pc_sdk_py39_64.XsRecordingAcknowledgeResult_Success
XsRecordingAcknowledgeResult_InvalidCmd = _movelladot_pc_sdk_py39_64.XsRecordingAcknowledgeResult_InvalidCmd
XsRecordingAcknowledgeResult_FlashProcessBusy = _movelladot_pc_sdk_py39_64.XsRecordingAcknowledgeResult_FlashProcessBusy
XsRecordingAcknowledgeResult_IdleState = _movelladot_pc_sdk_py39_64.XsRecordingAcknowledgeResult_IdleState
XsRecordingAcknowledgeResult_OnErasing = _movelladot_pc_sdk_py39_64.XsRecordingAcknowledgeResult_OnErasing
XsRecordingAcknowledgeResult_OnRecording = _movelladot_pc_sdk_py39_64.XsRecordingAcknowledgeResult_OnRecording
XsRecordingAcknowledgeResult_OnExportFlashInfo = _movelladot_pc_sdk_py39_64.XsRecordingAcknowledgeResult_OnExportFlashInfo
XsRecordingAcknowledgeResult_OnExportRecordingFileInfo = _movelladot_pc_sdk_py39_64.XsRecordingAcknowledgeResult_OnExportRecordingFileInfo
XsRecordingAcknowledgeResult_OnExportRecordingFileData = _movelladot_pc_sdk_py39_64.XsRecordingAcknowledgeResult_OnExportRecordingFileData
XsRecordingAcknowledgeResult_Unknown = _movelladot_pc_sdk_py39_64.XsRecordingAcknowledgeResult_Unknown

def XsRecordingAcknowledgeResultToString(res: "XsRecordingAcknowledgeResult") -> "char const *":
    return _movelladot_pc_sdk_py39_64.XsRecordingAcknowledgeResultToString(res)

def isValidXsRecordingAcknowledgeResult(ackRes: "XsRecordingAcknowledgeResult") -> "bool":
    return _movelladot_pc_sdk_py39_64.isValidXsRecordingAcknowledgeResult(ackRes)
RecordingData_Timestamp = _movelladot_pc_sdk_py39_64.RecordingData_Timestamp
RecordingData_Quaternion = _movelladot_pc_sdk_py39_64.RecordingData_Quaternion
RecordingData_iQ = _movelladot_pc_sdk_py39_64.RecordingData_iQ
RecordingData_iV = _movelladot_pc_sdk_py39_64.RecordingData_iV
RecordingData_Euler = _movelladot_pc_sdk_py39_64.RecordingData_Euler
RecordingData_dQ = _movelladot_pc_sdk_py39_64.RecordingData_dQ
RecordingData_dV = _movelladot_pc_sdk_py39_64.RecordingData_dV
RecordingData_Acceleration = _movelladot_pc_sdk_py39_64.RecordingData_Acceleration
RecordingData_AngularVelocity = _movelladot_pc_sdk_py39_64.RecordingData_AngularVelocity
RecordingData_MagneticField = _movelladot_pc_sdk_py39_64.RecordingData_MagneticField
RecordingData_Status = _movelladot_pc_sdk_py39_64.RecordingData_Status
RecordingData_ClipCountAcc = _movelladot_pc_sdk_py39_64.RecordingData_ClipCountAcc
RecordingData_ClipCountGyro = _movelladot_pc_sdk_py39_64.RecordingData_ClipCountGyro

def XsRecordingExportDataFieldToString(dataField: "XsRecordingExportDataField") -> "char const *":
    return _movelladot_pc_sdk_py39_64.XsRecordingExportDataFieldToString(dataField)

def isValidXsRecordingExportDataField(dataField: "XsRecordingExportDataField") -> "bool":
    return _movelladot_pc_sdk_py39_64.isValidXsRecordingExportDataField(dataField)
class XsRecordingInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsRecordingInfo_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsRecordingInfo(*args))

    def empty(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsRecordingInfo_empty(self)

    def startUTC(self) -> "unsigned int":
        return _movelladot_pc_sdk_py39_64.XsRecordingInfo_startUTC(self)

    def totalRecordingTime(self) -> "unsigned short":
        return _movelladot_pc_sdk_py39_64.XsRecordingInfo_totalRecordingTime(self)

    def storageSize(self) -> "unsigned int":
        return _movelladot_pc_sdk_py39_64.XsRecordingInfo_storageSize(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsRecordingInfo

# Register XsRecordingInfo in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsRecordingInfo_swigregister(XsRecordingInfo)

class XsRecordingTimeInfo(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        _movelladot_pc_sdk_py39_64.XsRecordingTimeInfo_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsRecordingTimeInfo(*args))

    def startUTC(self) -> "unsigned int":
        return _movelladot_pc_sdk_py39_64.XsRecordingTimeInfo_startUTC(self)

    def totalRecordingTime(self) -> "unsigned short":
        return _movelladot_pc_sdk_py39_64.XsRecordingTimeInfo_totalRecordingTime(self)

    def remainingRecordingTime(self) -> "unsigned short":
        return _movelladot_pc_sdk_py39_64.XsRecordingTimeInfo_remainingRecordingTime(self)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsRecordingTimeInfo

# Register XsRecordingTimeInfo in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsRecordingTimeInfo_swigregister(XsRecordingTimeInfo)

XsSyncAcknowledgeResult_Success = _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResult_Success
XsSyncAcknowledgeResult_Failed = _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResult_Failed
XsSyncAcknowledgeResult_InvalidCmd = _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResult_InvalidCmd
XsSyncAcknowledgeResult_Busy = _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResult_Busy
XsSyncAcknowledgeResult_Started = _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResult_Started
XsSyncAcknowledgeResult_NoEnoughSample = _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResult_NoEnoughSample
XsSyncAcknowledgeResult_Reserved = _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResult_Reserved
XsSyncAcknowledgeResult_SkewTooLarge = _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResult_SkewTooLarge
XsSyncAcknowledgeResult_StartingTimingErr = _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResult_StartingTimingErr
XsSyncAcknowledgeResult_Unstarted = _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResult_Unstarted
XsSyncAcknowledgeResult_Invalid = _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResult_Invalid
XsSyncAcknowledgeResult_Unknown = _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResult_Unknown

def XsSyncAcknowledgeResultToString(res: "XsSyncAcknowledgeResult") -> "char const *":
    return _movelladot_pc_sdk_py39_64.XsSyncAcknowledgeResultToString(res)

def isValidXsSyncAcknowledgeResult(ackRes: "XsSyncAcknowledgeResult") -> "bool":
    return _movelladot_pc_sdk_py39_64.isValidXsSyncAcknowledgeResult(ackRes)
XEM_Ignore = _movelladot_pc_sdk_py39_64.XEM_Ignore
XEM_IncreasePacketCounter = _movelladot_pc_sdk_py39_64.XEM_IncreasePacketCounter
XEM_IncreasePacketCounterAndSendError = _movelladot_pc_sdk_py39_64.XEM_IncreasePacketCounterAndSendError
XEM_SendErrorAndGoToConfig = _movelladot_pc_sdk_py39_64.XEM_SendErrorAndGoToConfig
XEM_Invalid = _movelladot_pc_sdk_py39_64.XEM_Invalid
class XsDotDevice(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def readDeviceControl(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_readDeviceControl(self)

    def firmwareVersion(self) -> "XsVersion":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_firmwareVersion(self)

    def hardwareVersion(self) -> "XsVersion":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_hardwareVersion(self)

    def buildInfo(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_buildInfo(self)

    def bluetoothAddress(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_bluetoothAddress(self)

    def productCode(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_productCode(self)

    def softDeviceVersion(self) -> "uint32_t":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_softDeviceVersion(self)

    def deviceTagName(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_deviceTagName(self)

    def setDeviceTagName(self, tagName: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_setDeviceTagName(self, tagName)

    def outputRate(self) -> "uint16_t":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_outputRate(self)

    def setOutputRate(self, outputRate: "uint16_t") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_setOutputRate(self, outputRate)

    def identify(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_identify(self)

    def powerOff(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_powerOff(self)

    def setPowerOnByUsb(self, enable: "bool") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_setPowerOnByUsb(self, enable)

    def setPowerSavingOptions(self, advertisementTimeout: "int", connectedDeviceTimeout: "int") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_setPowerSavingOptions(self, advertisementTimeout, connectedDeviceTimeout)

    def getAdvertisementPowerSavingTimeout(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_getAdvertisementPowerSavingTimeout(self)

    def getConnectedPowerSavingTimeout(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_getConnectedPowerSavingTimeout(self)

    def isCharging(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_isCharging(self)

    def batteryLevel(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_batteryLevel(self)

    def onboardFilterProfile(self) -> "XsFilterProfile":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_onboardFilterProfile(self)

    def setOnboardFilterProfile(self, profileType: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_setOnboardFilterProfile(self, profileType)

    def getAvailableFilterProfiles(self) -> "XsFilterProfileArray":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_getAvailableFilterProfiles(self)

    def getCharacteristicStrings(self) -> "XsStringArray":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_getCharacteristicStrings(self)

    def restoreFactoryDefaults(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_restoreFactoryDefaults(self)

    def payloadMode(self) -> "XsPayloadMode":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_payloadMode(self)

    def startMeasurement(self, mode: "XsPayloadMode") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_startMeasurement(self, mode)

    def stopMeasurement(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_stopMeasurement(self)

    def getRecordingAckResult(self) -> "XsRecordingAcknowledgeResult":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_getRecordingAckResult(self)

    def startRecording(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_startRecording(self)

    def startTimedRecording(self, seconds: "int") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_startTimedRecording(self, seconds)

    def stopRecording(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_stopRecording(self)

    def eraseFlash(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_eraseFlash(self)

    def getRecordingTime(self) -> "XsRecordingTimeInfo":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_getRecordingTime(self)

    def recordingCount(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_recordingCount(self)

    def usedFlashSizeTotal(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_usedFlashSizeTotal(self)

    def getRecordingInfo(self, recordingIndex: "int") -> "XsRecordingInfo":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_getRecordingInfo(self, recordingIndex)

    def selectExportData(self, selectedDataFields: "XsIntArray") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_selectExportData(self, selectedDataFields)

    def startExportRecording(self, recordingIndex: "int") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_startExportRecording(self, recordingIndex)

    def stopExportRecording(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_stopExportRecording(self)

    def startSync(self, rootNodeMac: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_startSync(self, rootNodeMac)

    def stopSync(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_stopSync(self)

    def getSyncStatus(self) -> "XsSyncAcknowledgeResult":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_getSyncStatus(self)

    def getSyncResult(self) -> "XsSyncAcknowledgeResult":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_getSyncResult(self)

    def resetOrientation(self, resetMethod: "XsResetMethod") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_resetOrientation(self, resetMethod)

    def checkForFirmwareUpdate(self) -> "XsVersion":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_checkForFirmwareUpdate(self)

    def checkForFirmwareRollback(self) -> "XsVersion":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_checkForFirmwareRollback(self)

    def startFirmwareUpdateFromServer(self) -> "XsVersion":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_startFirmwareUpdateFromServer(self)

    def startFirmwareRollbackFromServer(self) -> "XsVersion":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_startFirmwareRollbackFromServer(self)

    def startFirmwareUpdateFromFile(self, firmwareFile: "XsString") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_startFirmwareUpdateFromFile(self, firmwareFile)

    def startMagneticFieldMapping(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_startMagneticFieldMapping(self)

    def stopMagneticFieldMapping(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_stopMagneticFieldMapping(self)

    def processMagneticFieldMapping(self, filename: "XsString", mfmResult: "XsByteArray") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_processMagneticFieldMapping(self, filename, mfmResult)

    def storeMagneticFieldMapping(self, mfmResult: "XsByteArray") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_storeMagneticFieldMapping(self, mfmResult)

    def gotoConfig(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_gotoConfig(self)

    def enableLogging(self, filename: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_enableLogging(self, filename)

    def disableLogging(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_disableLogging(self)

    def setLogOptions(self, options: "XsLogOptions") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_setLogOptions(self, options)

    def writeDeviceSettingsToFile(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_writeDeviceSettingsToFile(self, *args)

    def portName(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_portName(self)

    def portInfo(self) -> "XsPortInfo":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_portInfo(self)

    def deviceId(self) -> "XsDeviceId":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_deviceId(self)

    def lastResult(self) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_lastResult(self)

    def lastResultText(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_lastResultText(self)

    def deviceState(self) -> "XsDeviceState":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_deviceState(self)

    def addReference(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_addReference(self)

    def removeReference(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_removeReference(self)

    def refCounter(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_refCounter(self)

    def clearXsDotCallbackHandlers(self, chain: "bool"=True) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_clearXsDotCallbackHandlers(self, chain)

    def __init__(self, p: "XsDotDevice"):
        _movelladot_pc_sdk_py39_64.XsDotDevice_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsDotDevice(p))

    def addXsDotCallbackHandler(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_addXsDotCallbackHandler(self, *args)

    def removeXsDotCallbackHandler(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotDevice_removeXsDotCallbackHandler(self, *args)

# Register XsDotDevice in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsDotDevice_swigregister(XsDotDevice)

class XsDotUsbDevice(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def productCode(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_productCode(self)

    def bluetoothAddress(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_bluetoothAddress(self)

    def deviceTagName(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_deviceTagName(self)

    def serialNumber(self) -> "uint32_t":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_serialNumber(self)

    def eraseFlash(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_eraseFlash(self)

    def recordingCount(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_recordingCount(self)

    def usedFlashSizeTotal(self) -> "int":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_usedFlashSizeTotal(self)

    def getRecordingInfo(self, recordingIndex: "int") -> "XsRecordingInfo":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_getRecordingInfo(self, recordingIndex)

    def selectExportData(self, selectedDataFields: "XsIntArray") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_selectExportData(self, selectedDataFields)

    def startExportRecording(self, recordingIndex: "int") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_startExportRecording(self, recordingIndex)

    def stopExportRecording(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_stopExportRecording(self)

    def enableLogging(self, filename: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_enableLogging(self, filename)

    def disableLogging(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_disableLogging(self)

    def setLogOptions(self, options: "XsLogOptions") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_setLogOptions(self, options)

    def portName(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_portName(self)

    def portInfo(self) -> "XsPortInfo":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_portInfo(self)

    def deviceId(self) -> "XsDeviceId":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_deviceId(self)

    def lastResult(self) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_lastResult(self)

    def lastResultText(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_lastResultText(self)

    def deviceState(self) -> "XsDeviceState":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_deviceState(self)

    def firmwareVersion(self) -> "XsVersion":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_firmwareVersion(self)

    def addReference(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_addReference(self)

    def removeReference(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_removeReference(self)

    def refCounter(self) -> "XsSize":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_refCounter(self)

    def clearXsDotCallbackHandlers(self, chain: "bool"=True) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_clearXsDotCallbackHandlers(self, chain)

    def __init__(self, p: "XsDotUsbDevice"):
        _movelladot_pc_sdk_py39_64.XsDotUsbDevice_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsDotUsbDevice(p))

    def addXsDotCallbackHandler(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_addXsDotCallbackHandler(self, *args)

    def removeXsDotCallbackHandler(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotUsbDevice_removeXsDotCallbackHandler(self, *args)

# Register XsDotUsbDevice in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsDotUsbDevice_swigregister(XsDotUsbDevice)

class XsDotConnectionManager(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def construct() -> "XsDotConnectionManager *":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_construct()

    def destruct(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_destruct(self)

    @staticmethod
    def version() -> "XsVersion":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_version()

    def reset(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_reset(self)

    def getAvailableBluetoothAdapters(self) -> "XsStringArray":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_getAvailableBluetoothAdapters(self)

    def setPreferredBluetoothAdapter(self, adapterName: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_setPreferredBluetoothAdapter(self, adapterName)

    def enableDeviceDetection(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_enableDeviceDetection(self)

    def disableDeviceDetection(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_disableDeviceDetection(self)

    def detectUsbDevices(self) -> "XsPortInfoArray":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_detectUsbDevices(self)

    def openPort(self, portinfo: "XsPortInfo") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_openPort(self, portinfo)

    def closePort(self, portinfo: "XsPortInfo") -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_closePort(self, portinfo)

    def device(self, deviceId: "XsDeviceId") -> "XsDotDevice *":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_device(self, deviceId)

    def usbDevice(self, deviceId: "XsDeviceId") -> "XsDotUsbDevice *":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_usbDevice(self, deviceId)

    def close(self) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_close(self)

    def lastResult(self) -> "XsResultValue":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_lastResult(self)

    def lastResultText(self) -> "XsString":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_lastResultText(self)

    def startLogging(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_startLogging(self)

    def stopLogging(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_stopLogging(self)

    def closeLogFile(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_closeLogFile(self)

    def startSync(self, rootNodeMac: "XsString") -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_startSync(self, rootNodeMac)

    def stopSync(self) -> "bool":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_stopSync(self)

    def clearXsDotCallbackHandlers(self, chain: "bool"=True) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_clearXsDotCallbackHandlers(self, chain)
    __swig_destroy__ = _movelladot_pc_sdk_py39_64.delete_XsDotConnectionManager

    def __init__(self):
        _movelladot_pc_sdk_py39_64.XsDotConnectionManager_swiginit(self, _movelladot_pc_sdk_py39_64.new_XsDotConnectionManager())

    def addXsDotCallbackHandler(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_addXsDotCallbackHandler(self, *args)

    def removeXsDotCallbackHandler(self, *args) -> "void":
        return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_removeXsDotCallbackHandler(self, *args)

# Register XsDotConnectionManager in _movelladot_pc_sdk_py39_64:
_movelladot_pc_sdk_py39_64.XsDotConnectionManager_swigregister(XsDotConnectionManager)

def XsDotConnectionManager_construct() -> "XsDotConnectionManager *":
    return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_construct()

def XsDotConnectionManager_version() -> "XsVersion":
    return _movelladot_pc_sdk_py39_64.XsDotConnectionManager_version()



